[
  {
    "origin": "OpenCV: cv::videostab Namespace Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "cv::videostab Namespace Reference",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Describes the Fast Marching Method implementation.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Base class for global 2D motion estimation methods which take frames as input.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Describes a global 2D motion estimation method which uses keypoints detection and optical flow for matching.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Base class for all global motion estimation methods.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Describes a global 2D motion estimation method which minimizes",
    "local": ""
  },
  {
    "origin": "error.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Describes a robust RANSAC-based global 2D motion estimation method which minimizes",
    "local": ""
  },
  {
    "origin": "error.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Describes RANSAC method parameters.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Describes motion model between two point clouds.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "(int idx, std::vector&lt; T &gt; &amp;items)",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "(int idx, const std::vector&lt; T &gt; &amp;items)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;frame)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;flowX, const",
    "local": ""
  },
  {
    "origin": "&amp;flowY, const",
    "local": ""
  },
  {
    "origin": "&amp;errors, float maxError, const",
    "local": ""
  },
  {
    "origin": "&amp;mask0, const",
    "local": ""
  },
  {
    "origin": "&amp;mask1,",
    "local": ""
  },
  {
    "origin": "&amp;flowMask)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;flowMask, const",
    "local": ""
  },
  {
    "origin": "&amp;flowX, const",
    "local": ""
  },
  {
    "origin": "&amp;flowY, const",
    "local": ""
  },
  {
    "origin": "&amp;frame1, const",
    "local": ""
  },
  {
    "origin": "&amp;mask1, float distThresh,",
    "local": ""
  },
  {
    "origin": "&amp;frame0,",
    "local": ""
  },
  {
    "origin": "&amp;mask0)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;M,",
    "local": ""
  },
  {
    "origin": "size, float trimRatio)",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "points0,",
    "local": ""
  },
  {
    "origin": "points1, int model=",
    "local": ""
  },
  {
    "origin": ", float *rmse=0)",
    "local": ""
  },
  {
    "origin": "Estimates best global motion between two 2D point clouds in the least-squares sense.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "points0,",
    "local": ""
  },
  {
    "origin": "points1, int model=",
    "local": ""
  },
  {
    "origin": ", const",
    "local": ""
  },
  {
    "origin": "&amp;params=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "), float *rmse=0, int *ninliers=0)",
    "local": ""
  },
  {
    "origin": "Estimates best global motion between two 2D point clouds robustly (using RANSAC method).",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;M,",
    "local": ""
  },
  {
    "origin": "size)",
    "local": ""
  },
  {
    "origin": "(int from, int to, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;motions)",
    "local": ""
  },
  {
    "origin": "Computes motion between two frames assuming that all the intermediate motions are known.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by &#160;",
    "local": ""
  }
]