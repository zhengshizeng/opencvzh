[
  {
    "origin": "OpenCV: cv::detail::FeaturesMatcher Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "Protected Member Functions",
    "local": ""
  },
  {
    "origin": "Protected Attributes",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::detail::FeaturesMatcher Class Reference",
    "local": ""
  },
  {
    "origin": "abstract",
    "local": ""
  },
  {
    "origin": "»",
    "local": ""
  },
  {
    "origin": "Feature matchers base class.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Inheritance diagram for cv::detail::FeaturesMatcher:",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Frees unused memory allocated before if there is any.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;features1, const",
    "local": ""
  },
  {
    "origin": "&amp;features2,",
    "local": ""
  },
  {
    "origin": "&amp;matches_info)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;features, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;pairwise_matches, const",
    "local": ""
  },
  {
    "origin": "&amp;mask=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Performs images matching.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Protected Member Functions",
    "local": ""
  },
  {
    "origin": "(bool is_thread_safe=false)",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;features1, const",
    "local": ""
  },
  {
    "origin": "&amp;features2,",
    "local": ""
  },
  {
    "origin": "This method must implement matching logic in order to make the wrappers detail::FeaturesMatcher::operator()_ work.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Protected Attributes",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Feature matchers base class.",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "~FeaturesMatcher()",
    "local": ""
  },
  {
    "origin": "virtual cv::detail::FeaturesMatcher::~FeaturesMatcher",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "FeaturesMatcher()",
    "local": ""
  },
  {
    "origin": "cv::detail::FeaturesMatcher::FeaturesMatcher",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "is_thread_safe",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "collectGarbage()",
    "local": ""
  },
  {
    "origin": "virtual void cv::detail::FeaturesMatcher::collectGarbage",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.detail_FeaturesMatcher.collectGarbage(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Frees unused memory allocated before if there is any.",
    "local": ""
  },
  {
    "origin": "Reimplemented in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "isThreadSafe()",
    "local": ""
  },
  {
    "origin": "bool cv::detail::FeaturesMatcher::isThreadSafe",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.detail_FeaturesMatcher.isThreadSafe(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "True, if it's possible to use the same matcher instance in parallel, false otherwise",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "match()",
    "local": ""
  },
  {
    "origin": "virtual void cv::detail::FeaturesMatcher::match",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "features1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "features2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "matches_info",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "This method must implement matching logic in order to make the wrappers detail::FeaturesMatcher::operator()_ work.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "features1",
    "local": ""
  },
  {
    "origin": "first image features",
    "local": ""
  },
  {
    "origin": "features2",
    "local": ""
  },
  {
    "origin": "second image features",
    "local": ""
  },
  {
    "origin": "matches_info",
    "local": ""
  },
  {
    "origin": "found matches",
    "local": ""
  },
  {
    "origin": "Implemented in",
    "local": ""
  },
  {
    "origin": ", and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "operator()()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "void cv::detail::FeaturesMatcher::operator()",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "features1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "features2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "matches_info",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "features1",
    "local": ""
  },
  {
    "origin": "First image features",
    "local": ""
  },
  {
    "origin": "features2",
    "local": ""
  },
  {
    "origin": "Second image features",
    "local": ""
  },
  {
    "origin": "matches_info",
    "local": ""
  },
  {
    "origin": "Found matches",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "operator()()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "void cv::detail::FeaturesMatcher::operator()",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "features",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "pairwise_matches",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "mask",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Performs images matching.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "features",
    "local": ""
  },
  {
    "origin": "Features of the source images",
    "local": ""
  },
  {
    "origin": "pairwise_matches",
    "local": ""
  },
  {
    "origin": "Found pairwise matches",
    "local": ""
  },
  {
    "origin": "mask",
    "local": ""
  },
  {
    "origin": "Mask indicating which image pairs must be matched",
    "local": ""
  },
  {
    "origin": "The function is parallelized with the TBB library.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "Member Data Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "is_thread_safe_",
    "local": ""
  },
  {
    "origin": "bool cv::detail::FeaturesMatcher::is_thread_safe_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/stitching/detail/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:46 for OpenCV by",
    "local": ""
  }
]