[
  {
    "origin": "OpenCV: cv::FileStorage Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Types",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions",
    "local": ""
  },
  {
    "origin": "Public Attributes",
    "local": ""
  },
  {
    "origin": "Related Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::FileStorage Class Reference",
    "local": ""
  },
  {
    "origin": "Â»",
    "local": ""
  },
  {
    "origin": "XML/YAML/JSON file storage class that encapsulates all the information necessary for writing or reading data to/from a file.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Types",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= (7&lt;&lt;3),",
    "local": ""
  },
  {
    "origin": "= (1&lt;&lt;3),",
    "local": ""
  },
  {
    "origin": "= (2&lt;&lt;3),",
    "local": ""
  },
  {
    "origin": "= (3&lt;&lt;3),",
    "local": ""
  },
  {
    "origin": "= BASE64 | WRITE",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "file storage mode",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "The constructors.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;filename, int flags, const",
    "local": ""
  },
  {
    "origin": "&amp;encoding=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Opens a file.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "the destructor. calls",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Finishes writing nested structure (should pair",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "Returns the first element of the top-level mapping.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "Returns the current format.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "Checks whether the file is opened.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual bool",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;filename, int flags, const",
    "local": ""
  },
  {
    "origin": "&amp;encoding=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Opens a file.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;nodename) const",
    "local": ""
  },
  {
    "origin": "Returns the specified element of the top-level mapping.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const char *nodename) const",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Closes the file and releases all the memory buffers.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Closes the file and releases all the memory buffers.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int streamidx=0) const",
    "local": ""
  },
  {
    "origin": "Returns the top-level mapping.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, int flags, const",
    "local": ""
  },
  {
    "origin": "&amp;typeName=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Starts to write a nested structure (sequence or a mapping).",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, int val)",
    "local": ""
  },
  {
    "origin": "Simplified writing API to use with bindings.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, double val)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&amp;val)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&amp;val)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;val)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;comment, bool append=false)",
    "local": ""
  },
  {
    "origin": "Writes a comment.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;fmt, const void *vec, size_t len)",
    "local": ""
  },
  {
    "origin": "Writes multiple numbers.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;filename)",
    "local": ""
  },
  {
    "origin": "Returns the normalized object name for the specified name of a file.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Attributes",
    "local": ""
  },
  {
    "origin": "std::string",
    "local": ""
  },
  {
    "origin": "&lt; Impl &gt;",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "Related Functions",
    "local": ""
  },
  {
    "origin": "(Note that these are not member functions.)",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;str)",
    "local": ""
  },
  {
    "origin": "Writes string to a file storage.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, int value)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, float value)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, double value)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&amp;value)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&amp;value)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&amp;value)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, int value)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, float value)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, double value)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;value)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const _Tp &amp;value)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const int &amp;value)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const float &amp;value)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const double &amp;value)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;value)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;pt)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;pt)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;sz)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;c)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;r)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int cn&gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, cn &gt; &amp;v)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;x)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;s)",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;r)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const std::vector&lt; _Tp &gt; &amp;vec)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;pt)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;pt)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;sz)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;c)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;r)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int cn&gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, cn &gt; &amp;v)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;x)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;s)",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&amp;r)",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&amp;kpt)",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&amp;m)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , typename std::enable_if&lt; std::is_enum&lt; _Tp &gt;::value &gt;::type * = nullptr&gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const _Tp &amp;val)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const std::vector&lt; _Tp &gt; &amp;vec)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name, const std::vector&lt; std::vector&lt; _Tp &gt; &gt; &amp;vec)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const _Tp &amp;value)",
    "local": ""
  },
  {
    "origin": "Writes data to a file storage.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, const char *str)",
    "local": ""
  },
  {
    "origin": "Writes data to a file storage.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs, char *value)",
    "local": ""
  },
  {
    "origin": "Writes data to a file storage.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "XML/YAML/JSON file storage class that encapsulates all the information necessary for writing or reading data to/from a file.",
    "local": ""
  },
  {
    "origin": "Examples:",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ", and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "Mode",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "file storage mode",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "READ",
    "local": ""
  },
  {
    "origin": "value, open the file for reading",
    "local": ""
  },
  {
    "origin": "WRITE",
    "local": ""
  },
  {
    "origin": "value, open the file for writing",
    "local": ""
  },
  {
    "origin": "APPEND",
    "local": ""
  },
  {
    "origin": "value, open the file for appending",
    "local": ""
  },
  {
    "origin": "MEMORY",
    "local": ""
  },
  {
    "origin": "returned by",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "flag, read data from source or write data to the internal buffer (which is",
    "local": ""
  },
  {
    "origin": "FORMAT_MASK",
    "local": ""
  },
  {
    "origin": "mask for format flags",
    "local": ""
  },
  {
    "origin": "FORMAT_AUTO",
    "local": ""
  },
  {
    "origin": "flag, auto format",
    "local": ""
  },
  {
    "origin": "FORMAT_XML",
    "local": ""
  },
  {
    "origin": "flag, XML format",
    "local": ""
  },
  {
    "origin": "FORMAT_YAML",
    "local": ""
  },
  {
    "origin": "flag, YAML format",
    "local": ""
  },
  {
    "origin": "FORMAT_JSON",
    "local": ""
  },
  {
    "origin": "flag, JSON format",
    "local": ""
  },
  {
    "origin": "BASE64",
    "local": ""
  },
  {
    "origin": "flag, write rawdata in Base64 by default. (consider using WRITE_BASE64)",
    "local": ""
  },
  {
    "origin": "WRITE_BASE64",
    "local": ""
  },
  {
    "origin": "flag, enable both WRITE and BASE64",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "State",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "UNDEFINED",
    "local": ""
  },
  {
    "origin": "VALUE_EXPECTED",
    "local": ""
  },
  {
    "origin": "NAME_EXPECTED",
    "local": ""
  },
  {
    "origin": "INSIDE_MAP",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "FileStorage()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "cv::FileStorage::FileStorage",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;FileStorage object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;FileStorage object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage(",
    "local": ""
  },
  {
    "origin": "filename, flags[, encoding]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "The constructors.",
    "local": ""
  },
  {
    "origin": "The full constructor opens the file. Alternatively you can use the default constructor and then call",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "FileStorage()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "cv::FileStorage::FileStorage",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "filename",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "flags",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "encoding",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;FileStorage object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;FileStorage object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage(",
    "local": ""
  },
  {
    "origin": "filename, flags[, encoding]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Opens a file.",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. See description of parameters in",
    "local": ""
  },
  {
    "origin": ". The method calls",
    "local": ""
  },
  {
    "origin": "before opening the file.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "filename",
    "local": ""
  },
  {
    "origin": "Name of the file to open or the text string to read the data from. Extension of the file (.xml, .yml/.yaml or .json) determines its format (XML, YAML or JSON respectively). Also you can append .gz to work with compressed files, for example myHugeMatrix.xml.gz. If both",
    "local": ""
  },
  {
    "origin": "and",
    "local": ""
  },
  {
    "origin": "flags are specified, source is used just to specify the output file format (e.g. mydata.xml, .yml etc.). A file name can also contain parameters. You can use this format, \"*?base64\" (e.g. \"file.json?base64\" (case sensitive)), as an alternative to",
    "local": ""
  },
  {
    "origin": "flag.",
    "local": ""
  },
  {
    "origin": "flags",
    "local": ""
  },
  {
    "origin": "Mode of operation. One of",
    "local": ""
  },
  {
    "origin": "encoding",
    "local": ""
  },
  {
    "origin": "Encoding of the file. Note that UTF-16 XML encoding is not supported currently and you should use 8-bit encoding instead of it.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "~FileStorage()",
    "local": ""
  },
  {
    "origin": "virtual cv::FileStorage::~FileStorage",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "the destructor. calls",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "endWriteStruct()",
    "local": ""
  },
  {
    "origin": "void cv::FileStorage::endWriteStruct",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.endWriteStruct(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Finishes writing nested structure (should pair",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getDefaultObjectName()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::FileStorage::getDefaultObjectName",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "filename",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Returns the normalized object name for the specified name of a file.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "filename",
    "local": ""
  },
  {
    "origin": "Name of a file",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "The normalized object name.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getFirstTopLevelNode()",
    "local": ""
  },
  {
    "origin": "cv::FileStorage::getFirstTopLevelNode",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.getFirstTopLevelNode(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the first element of the top-level mapping.",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "The first element of the top-level mapping.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getFormat()",
    "local": ""
  },
  {
    "origin": "int cv::FileStorage::getFormat",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.getFormat(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the current format.",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "The current format, see",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "isOpened()",
    "local": ""
  },
  {
    "origin": "virtual bool cv::FileStorage::isOpened",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.isOpened(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Checks whether the file is opened.",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "true if the object is associated with the current file and false otherwise. It is a good practice to call this method after you tried to open a file.",
    "local": ""
  },
  {
    "origin": "Examples:",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "open()",
    "local": ""
  },
  {
    "origin": "virtual bool cv::FileStorage::open",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "filename",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "flags",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "encoding",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.open(",
    "local": ""
  },
  {
    "origin": "filename, flags[, encoding]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Opens a file.",
    "local": ""
  },
  {
    "origin": "See description of parameters in",
    "local": ""
  },
  {
    "origin": ". The method calls",
    "local": ""
  },
  {
    "origin": "before opening the file.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "filename",
    "local": ""
  },
  {
    "origin": "Name of the file to open or the text string to read the data from. Extension of the file (.xml, .yml/.yaml or .json) determines its format (XML, YAML or JSON respectively). Also you can append .gz to work with compressed files, for example myHugeMatrix.xml.gz. If both",
    "local": ""
  },
  {
    "origin": "and",
    "local": ""
  },
  {
    "origin": "flags are specified, source is used just to specify the output file format (e.g. mydata.xml, .yml etc.). A file name can also contain parameters. You can use this format, \"*?base64\" (e.g. \"file.json?base64\" (case sensitive)), as an alternative to",
    "local": ""
  },
  {
    "origin": "flag.",
    "local": ""
  },
  {
    "origin": "flags",
    "local": ""
  },
  {
    "origin": "Mode of operation. One of",
    "local": ""
  },
  {
    "origin": "encoding",
    "local": ""
  },
  {
    "origin": "Encoding of the file. Note that UTF-16 XML encoding is not supported currently and you should use 8-bit encoding instead of it.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "operator[]()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "cv::FileStorage::operator[]",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "nodename",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.getNode(",
    "local": ""
  },
  {
    "origin": "nodename",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the specified element of the top-level mapping.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "nodename",
    "local": ""
  },
  {
    "origin": "Name of the file node.",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "with the given name.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "operator[]()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "cv::FileStorage::operator[]",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const char *",
    "local": ""
  },
  {
    "origin": "nodename",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.getNode(",
    "local": ""
  },
  {
    "origin": "nodename",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "release()",
    "local": ""
  },
  {
    "origin": "virtual void cv::FileStorage::release",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.release(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Closes the file and releases all the memory buffers.",
    "local": ""
  },
  {
    "origin": "Call this method after all I/O operations with the storage are finished.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "releaseAndGetString()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "cv::FileStorage::releaseAndGetString",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.releaseAndGetString(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Closes the file and releases all the memory buffers.",
    "local": ""
  },
  {
    "origin": "Call this method after all I/O operations with the storage are finished. If the storage was opened for writing data and",
    "local": ""
  },
  {
    "origin": "was specified",
    "local": ""
  },
  {
    "origin": "Examples:",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "root()",
    "local": ""
  },
  {
    "origin": "cv::FileStorage::root",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "streamidx",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.root(",
    "local": ""
  },
  {
    "origin": "[, streamidx]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the top-level mapping.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "streamidx",
    "local": ""
  },
  {
    "origin": "Zero-based index of the stream. In most cases there is only one stream in the file. However, YAML supports multiple streams and so there can be several.",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "The top-level mapping.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "startWriteStruct()",
    "local": ""
  },
  {
    "origin": "void cv::FileStorage::startWriteStruct",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "flags",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "typeName",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.startWriteStruct(",
    "local": ""
  },
  {
    "origin": "name, flags[, typeName]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Starts to write a nested structure (sequence or a mapping).",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "name of the structure. When writing to sequences (a.k.a. \"arrays\"), pass an empty string.",
    "local": ""
  },
  {
    "origin": "flags",
    "local": ""
  },
  {
    "origin": "type of the structure (",
    "local": ""
  },
  {
    "origin": "or",
    "local": ""
  },
  {
    "origin": "(both with optional",
    "local": ""
  },
  {
    "origin": ")).",
    "local": ""
  },
  {
    "origin": "typeName",
    "local": ""
  },
  {
    "origin": "optional name of the type you store. The effect of setting this depends on the storage format. I.e. if the format has a specification for storing type information, this parameter is used.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[1/5]",
    "local": ""
  },
  {
    "origin": "void cv::FileStorage::write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Simplified writing API to use with bindings.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "Name of the written object. When writing to sequences (a.k.a. \"arrays\"), pass an empty string.",
    "local": ""
  },
  {
    "origin": "val",
    "local": ""
  },
  {
    "origin": "Value of the written object.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[2/5]",
    "local": ""
  },
  {
    "origin": "void cv::FileStorage::write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[3/5]",
    "local": ""
  },
  {
    "origin": "void cv::FileStorage::write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[4/5]",
    "local": ""
  },
  {
    "origin": "void cv::FileStorage::write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[5/5]",
    "local": ""
  },
  {
    "origin": "void cv::FileStorage::write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "writeComment()",
    "local": ""
  },
  {
    "origin": "void cv::FileStorage::writeComment",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "comment",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "append",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.writeComment(",
    "local": ""
  },
  {
    "origin": "comment[, append]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Writes a comment.",
    "local": ""
  },
  {
    "origin": "The function writes a comment into file storage. The comments are skipped when the storage is read.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "comment",
    "local": ""
  },
  {
    "origin": "The written comment, single-line or multi-line",
    "local": ""
  },
  {
    "origin": "append",
    "local": ""
  },
  {
    "origin": "If true, the function tries to put the comment at the end of current line. Else if the comment is multi-line, or if it does not fit at the end of the current line, the comment starts a new line.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "writeRaw()",
    "local": ""
  },
  {
    "origin": "void cv::FileStorage::writeRaw",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fmt",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const void *",
    "local": ""
  },
  {
    "origin": "vec",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "len",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Writes multiple numbers.",
    "local": ""
  },
  {
    "origin": "Writes one or more numbers of the specified format to the currently written structure. Usually it is more convenient to use operator",
    "local": ""
  },
  {
    "origin": "instead of this method.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "fmt",
    "local": ""
  },
  {
    "origin": "Specification of each array element, see",
    "local": ""
  },
  {
    "origin": "vec",
    "local": ""
  },
  {
    "origin": "Pointer to the written array.",
    "local": ""
  },
  {
    "origin": "len",
    "local": ""
  },
  {
    "origin": "Number of the uchar elements to write.",
    "local": ""
  },
  {
    "origin": "Friends And Related Function Documentation",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "operator&lt;&lt;()",
    "local": ""
  },
  {
    "origin": "[1/4]",
    "local": ""
  },
  {
    "origin": "&amp; operator&lt;&lt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "str",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Writes string to a file storage.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "operator&lt;&lt;()",
    "local": ""
  },
  {
    "origin": "[2/4]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&amp; operator&lt;&lt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const _Tp &amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Writes data to a file storage.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "operator&lt;&lt;()",
    "local": ""
  },
  {
    "origin": "[3/4]",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&amp; operator&lt;&lt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const char *",
    "local": ""
  },
  {
    "origin": "str",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Writes data to a file storage.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "operator&lt;&lt;()",
    "local": ""
  },
  {
    "origin": "[4/4]",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&amp; operator&lt;&lt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "char *",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Writes data to a file storage.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[1/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[2/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[3/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[4/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[5/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[6/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[7/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const _Tp &amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[8/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const int &amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[9/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const float &amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[10/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const double &amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[11/35]",
    "local": ""
  },
  {
    "origin": "void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[12/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "pt",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[13/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "pt",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[14/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "sz",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[15/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "c",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[16/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "r",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[17/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int cn&gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, cn &gt; &amp;",
    "local": ""
  },
  {
    "origin": "v",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[18/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;",
    "local": ""
  },
  {
    "origin": "x",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[19/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "s",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[20/35]",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "r",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[21/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "vec",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[22/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "pt",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[23/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "pt",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[24/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "sz",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[25/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "c",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[26/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "r",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[27/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int cn&gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, cn &gt; &amp;",
    "local": ""
  },
  {
    "origin": "v",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[28/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;",
    "local": ""
  },
  {
    "origin": "x",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[29/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "s",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[30/35]",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "r",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[31/35]",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "kpt",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[32/35]",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "m",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[33/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , typename std::enable_if&lt; std::is_enum&lt; _Tp &gt;::value &gt;::type * = nullptr&gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const _Tp &amp;",
    "local": ""
  },
  {
    "origin": "val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[34/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt; _Tp &gt; &amp;",
    "local": ""
  },
  {
    "origin": "vec",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "[35/35]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static void write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt; std::vector&lt; _Tp &gt; &gt; &amp;",
    "local": ""
  },
  {
    "origin": "vec",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.FileStorage.write(",
    "local": ""
  },
  {
    "origin": "name, val",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "writeScalar()",
    "local": ""
  },
  {
    "origin": "[1/4]",
    "local": ""
  },
  {
    "origin": "void writeScalar",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "writeScalar()",
    "local": ""
  },
  {
    "origin": "[2/4]",
    "local": ""
  },
  {
    "origin": "void writeScalar",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "writeScalar()",
    "local": ""
  },
  {
    "origin": "[3/4]",
    "local": ""
  },
  {
    "origin": "void writeScalar",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "writeScalar()",
    "local": ""
  },
  {
    "origin": "[4/4]",
    "local": ""
  },
  {
    "origin": "void writeScalar",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Member Data Documentation",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "elname",
    "local": ""
  },
  {
    "origin": "std::string cv::FileStorage::elname",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "p",
    "local": ""
  },
  {
    "origin": "&lt;Impl&gt; cv::FileStorage::p",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "state",
    "local": ""
  },
  {
    "origin": "int cv::FileStorage::state",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/core/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:42 for OpenCV by",
    "local": ""
  }
]