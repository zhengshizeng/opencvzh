[
  {
    "origin": "OpenCV: opencv2/ximgproc/color_match.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "color_match.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "\"black box\" representation of the file storage associated with a file on disk.",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "(InputArray img, InputArray templ, OutputArray result)",
    "local": ""
  },
  {
    "origin": "Compares a color template against overlapped color image regions.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray img, OutputArray qimg)",
    "local": ""
  },
  {
    "origin": "creates a quaternion image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray qimg, OutputArray qcimg)",
    "local": ""
  },
  {
    "origin": "calculates conjugate of a quaternion image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray img, OutputArray qimg, int flags, bool sideLeft)",
    "local": ""
  },
  {
    "origin": "Performs a forward or inverse Discrete quaternion Fourier transform of a 2D quaternion array.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray src1, InputArray src2, OutputArray dst)",
    "local": ""
  },
  {
    "origin": "Calculates the per-element quaternion product of two arrays.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray qimg, OutputArray qnimg)",
    "local": ""
  },
  {
    "origin": "divides each element by its modulus.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:33 for OpenCV by &#160;",
    "local": ""
  }
]