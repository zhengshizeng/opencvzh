[
  {
    "origin": "OpenCV: cv::detail::BundleAdjusterRay Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::detail::BundleAdjusterRay Class Reference",
    "local": ""
  },
  {
    "origin": "»",
    "local": ""
  },
  {
    "origin": "Implementation of the camera parameters refinement algorithm which minimizes sum of the distances between the rays passing through the camera center and a feature. :",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Inheritance diagram for cv::detail::BundleAdjusterRay:",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(double conf_thresh)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;mask)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;term_criteria)",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;features, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;pairwise_matches, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;cameras)",
    "local": ""
  },
  {
    "origin": "Estimates camera parameters.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Additional Inherited Members",
    "local": ""
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "(int num_params_per_cam, int num_errs_per_measurement)",
    "local": ""
  },
  {
    "origin": "Construct a bundle adjuster base instance.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual bool",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;features, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;pairwise_matches, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;cameras)",
    "local": ""
  },
  {
    "origin": "This method must implement camera parameters estimation logic in order to make the wrapper detail::Estimator::operator()_ work.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Protected Attributes inherited from",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "std::vector&lt; std::pair&lt; int, int &gt; &gt;",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "*",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "*",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Implementation of the camera parameters refinement algorithm which minimizes sum of the distances between the rays passing through the camera center and a feature. :",
    "local": ""
  },
  {
    "origin": "It can estimate focal length. It ignores the refinement mask for now.",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "BundleAdjusterRay()",
    "local": ""
  },
  {
    "origin": "cv::detail::BundleAdjusterRay::BundleAdjusterRay",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;detail_BundleAdjusterRay object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.detail_BundleAdjusterRay(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/stitching/detail/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:46 for OpenCV by",
    "local": ""
  }
]