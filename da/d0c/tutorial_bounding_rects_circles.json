[
  {
    "origin": "OpenCV: Creating Bounding boxes and circles for contours",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Creating Bounding boxes and circles for contours",
    "local": ""
  },
  {
    "origin": "Prev Tutorial:",
    "local": ""
  },
  {
    "origin": "Next Tutorial:",
    "local": ""
  },
  {
    "origin": "Original author",
    "local": ""
  },
  {
    "origin": "Ana Huam√°n",
    "local": ""
  },
  {
    "origin": "Compatibility",
    "local": ""
  },
  {
    "origin": "OpenCV &gt;= 3.0",
    "local": ""
  },
  {
    "origin": "Goal",
    "local": ""
  },
  {
    "origin": "In this tutorial you will learn how to:",
    "local": ""
  },
  {
    "origin": "Use the OpenCV function",
    "local": ""
  },
  {
    "origin": "Use the OpenCV function",
    "local": ""
  },
  {
    "origin": "Theory",
    "local": ""
  },
  {
    "origin": "Code",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "This tutorial code's is shown lines below. You can also download it from",
    "local": ""
  },
  {
    "origin": "here",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "This tutorial code's is shown lines below. You can also download it from",
    "local": ""
  },
  {
    "origin": "here",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "This tutorial code's is shown lines below. You can also download it from",
    "local": ""
  },
  {
    "origin": "here",
    "local": ""
  },
  {
    "origin": "Explanation",
    "local": ""
  },
  {
    "origin": "The main function is rather simple, as follows from the comments we do the following:",
    "local": ""
  },
  {
    "origin": "Open the image, convert it into grayscale and blur it to get rid of the noise.",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "Create a window with header \"Source\" and display the source file in it.",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "Create a trackbar on the",
    "local": ""
  },
  {
    "origin": "and assign a callback function to it. In general callback functions are used to react to some kind of signal, in our case it's trackbar's state change. Explicit one-time call of",
    "local": ""
  },
  {
    "origin": "is necessary to display the \"Contours\" window simultaniously with the \"Source\" window.",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "The callback function does all the interesting job.",
    "local": ""
  },
  {
    "origin": "Use",
    "local": ""
  },
  {
    "origin": "to detect edges in the images.",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "Finds contours and saves them to the vectors",
    "local": ""
  },
  {
    "origin": "and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "For every found contour we now apply approximation to polygons with accuracy +-3 and stating that the curve must be closed. After that we find a bounding rect for every polygon and save it to",
    "local": ""
  },
  {
    "origin": ". At last we find a minimum enclosing circle for every polygon and save it to",
    "local": ""
  },
  {
    "origin": "and",
    "local": ""
  },
  {
    "origin": "vectors.",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "We found everything we need, all we have to do is to draw.",
    "local": ""
  },
  {
    "origin": "Create new Mat of unsigned 8-bit chars, filled with zeros. It will contain all the drawings we are going to make (rects and circles).",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "For every contour: pick a random color, draw the contour, the bounding rectangle and the minimal enclosing circle with it.",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "Display the results: create a new window \"Contours\" and show everything we added to drawings on it.",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "Result",
    "local": ""
  },
  {
    "origin": "Here it is:",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:36 for OpenCV by &#160;",
    "local": ""
  }
]