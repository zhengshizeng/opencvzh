[
  {
    "origin": "OpenCV: silhouette based 3D object tracking",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "silhouette based 3D object tracking",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "wrapper around",
    "local": ""
  },
  {
    "origin": "function for uniform access",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Abstract base class for stateful silhouette trackers.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "cols,",
    "local": ""
  },
  {
    "origin": "srcLocations,",
    "local": ""
  },
  {
    "origin": "pts2d,",
    "local": ""
  },
  {
    "origin": "pts3d=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "mask=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "bundle,",
    "local": ""
  },
  {
    "origin": "cols,",
    "local": ""
  },
  {
    "origin": "colors=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img,",
    "local": ""
  },
  {
    "origin": "locations, const",
    "local": ""
  },
  {
    "origin": "&amp;color)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img,",
    "local": ""
  },
  {
    "origin": "pts2d,",
    "local": ""
  },
  {
    "origin": "tris, const",
    "local": ""
  },
  {
    "origin": "&amp;color, int type=",
    "local": ""
  },
  {
    "origin": ", bool cullBackface=false)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(int num, int len,",
    "local": ""
  },
  {
    "origin": "pts3d,",
    "local": ""
  },
  {
    "origin": "rvec,",
    "local": ""
  },
  {
    "origin": "tvec,",
    "local": ""
  },
  {
    "origin": "K, const",
    "local": ""
  },
  {
    "origin": "&amp;imsize,",
    "local": ""
  },
  {
    "origin": "tris,",
    "local": ""
  },
  {
    "origin": "ctl2d,",
    "local": ""
  },
  {
    "origin": "ctl3d)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(int len,",
    "local": ""
  },
  {
    "origin": "ctl2d,",
    "local": ""
  },
  {
    "origin": "img,",
    "local": ""
  },
  {
    "origin": "bundle,",
    "local": ""
  },
  {
    "origin": "srcLocations)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "bundle,",
    "local": ""
  },
  {
    "origin": "cols,",
    "local": ""
  },
  {
    "origin": "response=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img, int num, int len,",
    "local": ""
  },
  {
    "origin": "pts3d,",
    "local": ""
  },
  {
    "origin": "tris,",
    "local": ""
  },
  {
    "origin": "K,",
    "local": ""
  },
  {
    "origin": "rvec,",
    "local": ""
  },
  {
    "origin": "tvec, double *rmsd=0)",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "implements \"RAPID-a video rate object tracker\"",
    "local": ""
  },
  {
    "origin": "with the dynamic control point extraction of",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "convertCorrespondencies()",
    "local": ""
  },
  {
    "origin": "void cv::rapid::convertCorrespondencies",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "cols",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "srcLocations",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "pts2d",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "pts3d",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "mask",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "pts2d, pts3d",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.rapid.convertCorrespondencies(",
    "local": ""
  },
  {
    "origin": "cols, srcLocations[, pts2d[, pts3d[, mask]]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Collect corresponding 2d and 3d points based on correspondencies and mask",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "cols",
    "local": ""
  },
  {
    "origin": "correspondence-position per line in line-bundle-space",
    "local": ""
  },
  {
    "origin": "srcLocations",
    "local": ""
  },
  {
    "origin": "the source image location",
    "local": ""
  },
  {
    "origin": "pts2d",
    "local": ""
  },
  {
    "origin": "2d points",
    "local": ""
  },
  {
    "origin": "pts3d",
    "local": ""
  },
  {
    "origin": "3d points",
    "local": ""
  },
  {
    "origin": "mask",
    "local": ""
  },
  {
    "origin": "mask containing non-zero values for the elements to be retained",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "drawCorrespondencies()",
    "local": ""
  },
  {
    "origin": "void cv::rapid::drawCorrespondencies",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "bundle",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "cols",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "colors",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "bundle",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.rapid.drawCorrespondencies(",
    "local": ""
  },
  {
    "origin": "bundle, cols[, colors]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Debug draw markers of matched correspondences onto a lineBundle",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "bundle",
    "local": ""
  },
  {
    "origin": "the lineBundle",
    "local": ""
  },
  {
    "origin": "cols",
    "local": ""
  },
  {
    "origin": "column coordinates in the line bundle",
    "local": ""
  },
  {
    "origin": "colors",
    "local": ""
  },
  {
    "origin": "colors for the markers. Defaults to white.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "drawSearchLines()",
    "local": ""
  },
  {
    "origin": "void cv::rapid::drawSearchLines",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "locations",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "color",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.rapid.drawSearchLines(",
    "local": ""
  },
  {
    "origin": "img, locations, color",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Debug draw search lines onto an image",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "the output image",
    "local": ""
  },
  {
    "origin": "locations",
    "local": ""
  },
  {
    "origin": "the source locations of a line bundle",
    "local": ""
  },
  {
    "origin": "color",
    "local": ""
  },
  {
    "origin": "the line color",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "drawWireframe()",
    "local": ""
  },
  {
    "origin": "void cv::rapid::drawWireframe",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "pts2d",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tris",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "color",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "type",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "cullBackface",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.rapid.drawWireframe(",
    "local": ""
  },
  {
    "origin": "img, pts2d, tris, color[, type[, cullBackface]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Draw a wireframe of a triangle mesh",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "the output image",
    "local": ""
  },
  {
    "origin": "pts2d",
    "local": ""
  },
  {
    "origin": "the 2d points obtained by",
    "local": ""
  },
  {
    "origin": "tris",
    "local": ""
  },
  {
    "origin": "triangle face connectivity",
    "local": ""
  },
  {
    "origin": "color",
    "local": ""
  },
  {
    "origin": "line color",
    "local": ""
  },
  {
    "origin": "type",
    "local": ""
  },
  {
    "origin": "line type. See",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "cullBackface",
    "local": ""
  },
  {
    "origin": "enable back-face culling based on CCW order",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "extractControlPoints()",
    "local": ""
  },
  {
    "origin": "void cv::rapid::extractControlPoints",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "num",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "len",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "pts3d",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rvec",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "K",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "imsize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tris",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ctl2d",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ctl3d",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "ctl2d, ctl3d",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.rapid.extractControlPoints(",
    "local": ""
  },
  {
    "origin": "num, len, pts3d, rvec, tvec, K, imsize, tris[, ctl2d[, ctl3d]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Extract control points from the projected silhouette of a mesh",
    "local": ""
  },
  {
    "origin": "see",
    "local": ""
  },
  {
    "origin": "Sec 2.1, Step b",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "num",
    "local": ""
  },
  {
    "origin": "number of control points",
    "local": ""
  },
  {
    "origin": "len",
    "local": ""
  },
  {
    "origin": "search radius (used to restrict the ROI)",
    "local": ""
  },
  {
    "origin": "pts3d",
    "local": ""
  },
  {
    "origin": "the 3D points of the mesh",
    "local": ""
  },
  {
    "origin": "rvec",
    "local": ""
  },
  {
    "origin": "rotation between mesh and camera",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation between mesh and camera",
    "local": ""
  },
  {
    "origin": "K",
    "local": ""
  },
  {
    "origin": "camera intrinsic",
    "local": ""
  },
  {
    "origin": "imsize",
    "local": ""
  },
  {
    "origin": "size of the video frame",
    "local": ""
  },
  {
    "origin": "tris",
    "local": ""
  },
  {
    "origin": "triangle face connectivity",
    "local": ""
  },
  {
    "origin": "ctl2d",
    "local": ""
  },
  {
    "origin": "the 2D locations of the control points",
    "local": ""
  },
  {
    "origin": "ctl3d",
    "local": ""
  },
  {
    "origin": "matching 3D points of the mesh",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "extractLineBundle()",
    "local": ""
  },
  {
    "origin": "void cv::rapid::extractLineBundle",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "len",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ctl2d",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "bundle",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "srcLocations",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "bundle, srcLocations",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.rapid.extractLineBundle(",
    "local": ""
  },
  {
    "origin": "len, ctl2d, img[, bundle[, srcLocations]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Extract the line bundle from an image",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "len",
    "local": ""
  },
  {
    "origin": "the search radius. The bundle will have",
    "local": ""
  },
  {
    "origin": "columns.",
    "local": ""
  },
  {
    "origin": "ctl2d",
    "local": ""
  },
  {
    "origin": "the search lines will be centered at this points and orthogonal to the contour defined by them. The bundle will have as many rows.",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "the image to read the pixel intensities values from",
    "local": ""
  },
  {
    "origin": "bundle",
    "local": ""
  },
  {
    "origin": "line bundle image with size",
    "local": ""
  },
  {
    "origin": "and the same type as",
    "local": ""
  },
  {
    "origin": "srcLocations",
    "local": ""
  },
  {
    "origin": "the source pixel locations of",
    "local": ""
  },
  {
    "origin": "in",
    "local": ""
  },
  {
    "origin": "as CV_16SC2",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "findCorrespondencies()",
    "local": ""
  },
  {
    "origin": "void cv::rapid::findCorrespondencies",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "bundle",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "cols",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "response",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "cols, response",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.rapid.findCorrespondencies(",
    "local": ""
  },
  {
    "origin": "bundle[, cols[, response]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Find corresponding image locations by searching for a maximal sobel edge along the search line (a single row in the bundle)",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "bundle",
    "local": ""
  },
  {
    "origin": "the line bundle",
    "local": ""
  },
  {
    "origin": "cols",
    "local": ""
  },
  {
    "origin": "correspondence-position per line in line-bundle-space",
    "local": ""
  },
  {
    "origin": "response",
    "local": ""
  },
  {
    "origin": "the sobel response for the selected point",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "rapid()",
    "local": ""
  },
  {
    "origin": "float cv::rapid::rapid",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "num",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "len",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "pts3d",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tris",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "K",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rvec",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "double *",
    "local": ""
  },
  {
    "origin": "rmsd",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval, rvec, tvec, rmsd",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.rapid.rapid(",
    "local": ""
  },
  {
    "origin": "img, num, len, pts3d, tris, K, rvec, tvec",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "High level function to execute a single rapid",
    "local": ""
  },
  {
    "origin": "iteration",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "the video frame",
    "local": ""
  },
  {
    "origin": "num",
    "local": ""
  },
  {
    "origin": "number of search lines",
    "local": ""
  },
  {
    "origin": "len",
    "local": ""
  },
  {
    "origin": "search line radius",
    "local": ""
  },
  {
    "origin": "pts3d",
    "local": ""
  },
  {
    "origin": "the 3D points of the mesh",
    "local": ""
  },
  {
    "origin": "tris",
    "local": ""
  },
  {
    "origin": "triangle face connectivity",
    "local": ""
  },
  {
    "origin": "K",
    "local": ""
  },
  {
    "origin": "camera matrix",
    "local": ""
  },
  {
    "origin": "rvec",
    "local": ""
  },
  {
    "origin": "rotation between mesh and camera. Input values are used as an initial solution.",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation between mesh and camera. Input values are used as an initial solution.",
    "local": ""
  },
  {
    "origin": "rmsd",
    "local": ""
  },
  {
    "origin": "the 2d reprojection difference",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "ratio of search lines that could be extracted and matched",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by",
    "local": ""
  }
]