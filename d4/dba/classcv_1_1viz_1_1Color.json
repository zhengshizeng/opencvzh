[
  {
    "origin": "OpenCV: cv::viz::Color Class Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::viz::Color Class Reference",
    "local": ""
  },
  {
    "origin": "This class represents color in BGR order.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Inheritance diagram for cv::viz::Color:",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(double",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "The three channels will have the same value equal to gray.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double",
    "local": ""
  },
  {
    "origin": ", double",
    "local": ""
  },
  {
    "origin": ", double",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;color)",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "default constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2=0, double v3=0)",
    "local": ""
  },
  {
    "origin": "(double v0)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;s)",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;&amp;s)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp2, cn &gt; &amp;v)",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "returns (v0, -v1, -v2, -v3)",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "returns true iff v1 == v2 == v3 == 0",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double &gt; &amp;a, double scale=1) const",
    "local": ""
  },
  {
    "origin": "per-element product",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "conversion to another data type",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;s)",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;&amp;s)",
    "local": ""
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "default constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0)",
    "local": ""
  },
  {
    "origin": "1-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1)",
    "local": ""
  },
  {
    "origin": "2-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2)",
    "local": ""
  },
  {
    "origin": "3-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3)",
    "local": ""
  },
  {
    "origin": "4-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4)",
    "local": ""
  },
  {
    "origin": "5-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5)",
    "local": ""
  },
  {
    "origin": "6-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6)",
    "local": ""
  },
  {
    "origin": "7-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7)",
    "local": ""
  },
  {
    "origin": "8-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7, double v8)",
    "local": ""
  },
  {
    "origin": "9-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7, double v8, double v9)",
    "local": ""
  },
  {
    "origin": "10-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7, double v8, double v9, double v10, double v11, double v12, double v13)",
    "local": ""
  },
  {
    "origin": "14-element vector constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const double *values)",
    "local": ""
  },
  {
    "origin": "(std::initializer_list&lt; double &gt;)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;v)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn, 1 &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn, 1 &gt; &amp;b, Matx_AddOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn, 1 &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn, 1 &gt; &amp;b, Matx_SubOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn, 1 &gt; &amp;a, _T2 alpha, Matx_ScaleOp)",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "conjugation (makes sense for complex numbers and quaternions)",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;v) const",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;v) const",
    "local": ""
  },
  {
    "origin": "per-element multiplication",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "conversion to another data type",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int i) const",
    "local": ""
  },
  {
    "origin": "(int i)",
    "local": ""
  },
  {
    "origin": "(int i) const",
    "local": ""
  },
  {
    "origin": "(int i)",
    "local": ""
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "default constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0)",
    "local": ""
  },
  {
    "origin": "1x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1)",
    "local": ""
  },
  {
    "origin": "1x2 or 2x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2)",
    "local": ""
  },
  {
    "origin": "1x3 or 3x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3)",
    "local": ""
  },
  {
    "origin": "1x4, 2x2 or 4x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4)",
    "local": ""
  },
  {
    "origin": "1x5 or 5x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5)",
    "local": ""
  },
  {
    "origin": "1x6, 2x3, 3x2 or 6x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6)",
    "local": ""
  },
  {
    "origin": "1x7 or 7x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7)",
    "local": ""
  },
  {
    "origin": "1x8, 2x4, 4x2 or 8x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7, double v8)",
    "local": ""
  },
  {
    "origin": "1x9, 3x3 or 9x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7, double v8, double v9)",
    "local": ""
  },
  {
    "origin": "1x10, 2x5 or 5x2 or 10x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7, double v8, double v9, double v10, double v11)",
    "local": ""
  },
  {
    "origin": "1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7, double v8, double v9, double v10, double v11, double v12, double v13)",
    "local": ""
  },
  {
    "origin": "1x14, 2x7, 7x2 or 14x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7, double v8, double v9, double v10, double v11, double v12, double v13, double v14, double v15)",
    "local": ""
  },
  {
    "origin": "1x16, 4x4 or 16x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const double *vals)",
    "local": ""
  },
  {
    "origin": "initialize from a plain array",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(std::initializer_list&lt; double &gt;)",
    "local": ""
  },
  {
    "origin": "initialize from an initializer list",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;b, Matx_AddOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;b, Matx_SubOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, _T2 alpha, Matx_ScaleOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;b, Matx_MulOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;b, Matx_DivOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, l &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, l, n &gt; &amp;b, Matx_MatMulOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, n, m &gt; &amp;a, Matx_TOp)",
    "local": ""
  },
  {
    "origin": "&lt; double, m, 1 &gt;&#160;",
    "local": ""
  },
  {
    "origin": "(int i) const",
    "local": ""
  },
  {
    "origin": "extract the matrix column",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;v) const",
    "local": ""
  },
  {
    "origin": "dot product computed in double-precision arithmetics",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "extract the matrix diagonal",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a) const",
    "local": ""
  },
  {
    "origin": "divide two matrices element-wise",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;v) const",
    "local": ""
  },
  {
    "origin": "dot product computed with the default precision",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt; double, m1, n1 &gt;&#160;",
    "local": ""
  },
  {
    "origin": "(int base_row, int base_col) const",
    "local": ""
  },
  {
    "origin": "extract part of the matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int method=DECOMP_LU, bool *p_is_ok=NULL) const",
    "local": ""
  },
  {
    "origin": "invert the matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a) const",
    "local": ""
  },
  {
    "origin": "multiply two matrices element-wise",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "conversion to another data type",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int",
    "local": ""
  },
  {
    "origin": ", int",
    "local": ""
  },
  {
    "origin": ") const",
    "local": ""
  },
  {
    "origin": "element access",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int",
    "local": ""
  },
  {
    "origin": ", int",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "(int i) const",
    "local": ""
  },
  {
    "origin": "1D element access",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int i)",
    "local": ""
  },
  {
    "origin": "&lt; double, m1, n1 &gt;&#160;",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "change the matrix shape",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt; double, 1, n &gt;&#160;",
    "local": ""
  },
  {
    "origin": "(int i) const",
    "local": ""
  },
  {
    "origin": "extract the matrix row",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, l &gt; &amp;rhs, int flags=DECOMP_LU) const",
    "local": ""
  },
  {
    "origin": "solve linear system",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m &gt; &amp;rhs, int method) const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "transpose the matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(double v0)",
    "local": ""
  },
  {
    "origin": "returns a scalar with all elements set to v0",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(double alpha)",
    "local": ""
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(double alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;d)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(double a, double b)",
    "local": ""
  },
  {
    "origin": "Generates normally distributed random numbers.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(double a, double b)",
    "local": ""
  },
  {
    "origin": "Generates uniformly distributed random numbers.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Additional Inherited Members",
    "local": ""
  },
  {
    "origin": "&#160;Public Types inherited from",
    "local": ""
  },
  {
    "origin": "&#160;Public Types inherited from",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "&lt; double,",
    "local": ""
  },
  {
    "origin": ", 1 &gt;&#160;",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "&#160;Public Attributes inherited from",
    "local": ""
  },
  {
    "origin": "[m *n]",
    "local": ""
  },
  {
    "origin": "&#160;Related Functions inherited from",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, cn &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, cn &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp2, cn &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, cn &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, cn &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp2, cn &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, int alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "&lt; double, 4 &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, 4 &gt; &amp;v1, const",
    "local": ""
  },
  {
    "origin": "&lt; double, 4 &gt; &amp;v2)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, int alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, int alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int alpha, const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(float alpha, const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(double alpha, const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "&lt; double, 4 &gt;&#160;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, 4 &gt; &amp;v1, const",
    "local": ""
  },
  {
    "origin": "&lt; double, 4 &gt; &amp;v2)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, int alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, cn &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "&#160;Related Functions inherited from",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp2, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp2, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, int alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, int alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int alpha, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(float alpha, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(double alpha, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, l &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, l, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; double, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "This class represents color in BGR order.",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Color()",
    "local": ""
  },
  {
    "origin": "[1/4]",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::Color",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Color()",
    "local": ""
  },
  {
    "origin": "[2/4]",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::Color",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "gray",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "The three channels will have the same value equal to gray.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Color()",
    "local": ""
  },
  {
    "origin": "[3/4]",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::Color",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "blue",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "green",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "red",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Color()",
    "local": ""
  },
  {
    "origin": "[4/4]",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::Color",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "color",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "amethyst()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::amethyst",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "apricot()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::apricot",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "azure()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::azure",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "black()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::black",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "bluberry()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::bluberry",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "blue()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::blue",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "brown()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::brown",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "celestial_blue()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::celestial_blue",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "chartreuse()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::chartreuse",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cherry()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::cherry",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cyan()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::cyan",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "gold()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::gold",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "gray()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::gray",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "green()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::green",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "indigo()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::indigo",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "lime()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::lime",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "magenta()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::magenta",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "maroon()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::maroon",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "mlab()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::mlab",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "navy()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::navy",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "not_set()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::not_set",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "olive()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::olive",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator Vec3b()",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::operator",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "orange()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::orange",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "orange_red()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::orange_red",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "pink()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::pink",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "purple()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::purple",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "raspberry()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::raspberry",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "red()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::red",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "rose()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::rose",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "silver()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::silver",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "teal()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::teal",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "turquoise()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::turquoise",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "violet()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::violet",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "white()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::white",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "yellow()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "cv::viz::Color::yellow",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/viz/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:49 for OpenCV by &#160;",
    "local": ""
  }
]