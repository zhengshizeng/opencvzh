[
  {
    "origin": "OpenCV: cv::xphoto::LearningBasedWB Class Reference",
    "local": "OpenCV:cv:：xphoto:：LearningBasedWB类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::xphoto::LearningBasedWB Class Reference",
    "local": "cv:：xphoto:：LearningBasedWB类引用"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "More sophisticated learning-based automatic white balance algorithm.",
    "local": "更复杂的基于学习的自动白平衡算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::xphoto::LearningBasedWB:",
    "local": "cv:：xphoto:：LearningBasedWB的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src,",
    "local": "src公司，"
  },
  {
    "origin": "Implements the feature extraction part of the algorithm.",
    "local": "实现了算法的特征提取部分。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "Defines the size of one dimension of a three-dimensional RGB histogram that is used internally by the algorithm. It often makes sense to increase the number of bins for images with higher bit depth (e.g. 256 bins for a 12 bit image).",
    "local": "定义算法内部使用的三维RGB直方图的一维大小。对于位深度较高的图像，增加存储箱的数量通常是有意义的（例如，对于12位图像，增加256个存储箱）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "Maximum possible value of the input image (e.g. 255 for 8 bit images, 4095 for 12 bit images)",
    "local": "输入图像的最大可能值（例如，8位图像为255，12位图像为4095）"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "Threshold that is used to determine saturated pixels, i.e. pixels where at least one of the channels exceeds \\(\\texttt{saturation_threshold}\\times\\texttt{range_max_val}\\) are ignored.",
    "local": "用于确定饱和像素的阈值，即至少一个通道超过\\（\\texttt{saturation\\u Threshold}\\times\\texttt{range\\u max\\u val}）的像素被忽略。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "Defines the size of one dimension of a three-dimensional RGB histogram that is used internally by the algorithm. It often makes sense to increase the number of bins for images with higher bit depth (e.g. 256 bins for a 12 bit image).",
    "local": "定义算法内部使用的三维RGB直方图的一维大小。对于位深度较高的图像，增加存储箱的数量通常是有意义的（例如，对于12位图像，增加256个存储箱）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "Maximum possible value of the input image (e.g. 255 for 8 bit images, 4095 for 12 bit images)",
    "local": "输入图像的最大可能值（例如，8位图像为255，12位图像为4095）"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "Threshold that is used to determine saturated pixels, i.e. pixels where at least one of the channels exceeds \\(\\texttt{saturation_threshold}\\times\\texttt{range_max_val}\\) are ignored.",
    "local": "用于确定饱和像素的阈值，即至少一个通道超过\\（\\texttt{saturation\\u Threshold}\\times\\texttt{range\\u max\\u val}）的像素被忽略。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src,",
    "local": "src公司，"
  },
  {
    "origin": "Applies white balancing to the input image.",
    "local": "对输入图像应用白平衡。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "More sophisticated learning-based automatic white balance algorithm.",
    "local": "更复杂的基于学习的自动白平衡算法。"
  },
  {
    "origin": "As",
    "local": "作为"
  },
  {
    "origin": ", this algorithm works by applying different gains to the input image channels, but their computation is a bit more involved compared to the simple gray-world assumption. More details about the algorithm can be found in",
    "local": "，该算法通过对输入图像通道应用不同的增益来工作，但是与简单的灰色世界假设相比，它们的计算要复杂一些。有关该算法的更多详细信息，请参阅"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "To mask out saturated pixels this function uses only pixels that satisfy the following condition:",
    "local": "要屏蔽饱和像素，此函数仅使用满足以下条件的像素："
  },
  {
    "origin": "\\[ \\frac{\\textrm{max}(R,G,B)}{\\texttt{range_max_val}} &lt; \\texttt{saturation_thresh} \\]",
    "local": "\\[\\frac{\\textrm{max}（R，G，B）}{\\texttt{range\\u max\\u val}}&lt\\texttt{饱和阈值}\\]"
  },
  {
    "origin": "Currently supports images of type",
    "local": "当前支持类型的图像"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "extractSimpleFeatures()",
    "local": "extractSimpleFeatures（）"
  },
  {
    "origin": "virtual void cv::xphoto::LearningBasedWB::extractSimpleFeatures",
    "local": "虚拟void cv:：xphoto:：LearningBasedWB:：extractSimpleFeatures"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xphoto_LearningBasedWB.extractSimpleFeatures(",
    "local": "cv.xphoto learningbasedwb.extractsimplefeatures（"
  },
  {
    "origin": "src[, dst]",
    "local": "src[，dst]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Implements the feature extraction part of the algorithm.",
    "local": "实现了算法的特征提取部分。"
  },
  {
    "origin": "In accordance with",
    "local": "按照"
  },
  {
    "origin": ", computes the following features for the input image:",
    "local": "，为输入图像计算以下功能："
  },
  {
    "origin": "Chromaticity of an average (R,G,B) tuple",
    "local": "平均（R，G，B）元组的色性"
  },
  {
    "origin": "Chromaticity of the brightest (R,G,B) tuple (while ignoring saturated pixels)",
    "local": "最亮（R，G，B）元组的色度（忽略饱和像素）"
  },
  {
    "origin": "Chromaticity of the dominant (R,G,B) tuple (the one that has the highest value in the RGB histogram)",
    "local": "主要（R，G，B）元组的色度（RGB直方图中具有最高值的元组）"
  },
  {
    "origin": "Mode of the chromaticity palette, that is constructed by taking 300 most common colors according to the RGB histogram and projecting them on the chromaticity plane. Mode is the most high-density point of the palette, which is computed by a straightforward fixed-bandwidth kernel density estimator with a Epanechnikov kernel function.",
    "local": "色度调色板的模式，即根据RGB直方图选取300种最常见的颜色，并将它们投影到色度平面上。模式是调色板中密度最高的点，它由一个简单的固定带宽核密度估计器和一个Epanechnikov核函数来计算。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input three-channel image (BGR color space is assumed).",
    "local": "输入三通道图像（假定为BGR颜色空间）。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "An array of four (r,g) chromaticity tuples corresponding to the features listed above.",
    "local": "四个（r，g）色度元组的数组，对应于上面列出的特征。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getHistBinNum()",
    "local": "getHistBinNum（）"
  },
  {
    "origin": "virtual int cv::xphoto::LearningBasedWB::getHistBinNum",
    "local": "虚拟int cv:：xphoto:：LearningBasedWB:：getHistBinNum"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xphoto_LearningBasedWB.getHistBinNum(",
    "local": "cv.xphoto learningbasedwb.gethistbinnum（"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Defines the size of one dimension of a three-dimensional RGB histogram that is used internally by the algorithm. It often makes sense to increase the number of bins for images with higher bit depth (e.g. 256 bins for a 12 bit image).",
    "local": "定义算法内部使用的三维RGB直方图的一维大小。对于位深度较高的图像，增加存储箱的数量通常是有意义的（例如，对于12位图像，增加256个存储箱）。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getRangeMaxVal()",
    "local": "getRangeMaxVal（）"
  },
  {
    "origin": "virtual int cv::xphoto::LearningBasedWB::getRangeMaxVal",
    "local": "virtual int cv::xphoto::learningbasedwb::getrangemaxval"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xphoto_LearningBasedWB.getRangeMaxVal(",
    "local": "cv.xphoto learningbasedwb.getrangemaxval（"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Maximum possible value of the input image (e.g. 255 for 8 bit images, 4095 for 12 bit images)",
    "local": "输入图像的最大可能值（例如，8位图像为255，12位图像为4095）"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getSaturationThreshold()",
    "local": "getSaturationThreshold（）"
  },
  {
    "origin": "virtual float cv::xphoto::LearningBasedWB::getSaturationThreshold",
    "local": "虚拟浮点cv:：xphoto:：LearningBasedWB:：getSaturationThreshold"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xphoto_LearningBasedWB.getSaturationThreshold(",
    "local": "cv.xphoto learningbasedwb.getsaturationthreshold（"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Threshold that is used to determine saturated pixels, i.e. pixels where at least one of the channels exceeds \\(\\texttt{saturation_threshold}\\times\\texttt{range_max_val}\\) are ignored.",
    "local": "用于确定饱和像素的阈值，即至少一个通道超过\\（\\texttt{saturation\\u Threshold}\\times\\texttt{range\\u max\\u val}）的像素被忽略。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setHistBinNum()",
    "local": "setHistBinNum（）"
  },
  {
    "origin": "virtual void cv::xphoto::LearningBasedWB::setHistBinNum",
    "local": "虚拟void cv:：xphoto:：LearningBasedWB:：setHistBinNum"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xphoto_LearningBasedWB.setHistBinNum(",
    "local": "cv.xphoto\\u LearningBasedWB.setHistBinNum("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Defines the size of one dimension of a three-dimensional RGB histogram that is used internally by the algorithm. It often makes sense to increase the number of bins for images with higher bit depth (e.g. 256 bins for a 12 bit image).",
    "local": "定义算法内部使用的三维RGB直方图的一维大小。对于位深度较高的图像，增加存储箱的数量通常是有意义的（例如，对于12位图像，增加256个存储箱）。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setRangeMaxVal()",
    "local": "setRangeMaxVal（）"
  },
  {
    "origin": "virtual void cv::xphoto::LearningBasedWB::setRangeMaxVal",
    "local": "虚拟void cv::xphoto::learningbasedwb::setrangemaxval"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xphoto_LearningBasedWB.setRangeMaxVal(",
    "local": "cv.xphoto learningbasedwb.setrangemaxval（"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Maximum possible value of the input image (e.g. 255 for 8 bit images, 4095 for 12 bit images)",
    "local": "输入图像的最大可能值（例如，8位图像为255，12位图像为4095）"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setSaturationThreshold()",
    "local": "设置饱和度阈值（）"
  },
  {
    "origin": "virtual void cv::xphoto::LearningBasedWB::setSaturationThreshold",
    "local": "虚拟void cv:：xphoto:：LearningBasedWB:：setSaturationThreshold"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xphoto_LearningBasedWB.setSaturationThreshold(",
    "local": "cv.xphoto learningbasedwb.setsaturationthreshold（"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Threshold that is used to determine saturated pixels, i.e. pixels where at least one of the channels exceeds \\(\\texttt{saturation_threshold}\\times\\texttt{range_max_val}\\) are ignored.",
    "local": "用于确定饱和像素的阈值，即至少一个通道超过\\（\\texttt{saturation\\u Threshold}\\times\\texttt{range\\u max\\u val}）的像素被忽略。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/xphoto/",
    "local": "OpenCV2/XPhoto/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:49 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:49为OpenCV生成"
  }
]