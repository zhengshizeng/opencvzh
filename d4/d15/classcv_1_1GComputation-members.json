[
  {
    "origin": "OpenCV: Member List",
    "local": "OpenCV:成员列表"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "cv::GComputation Member List",
    "local": "cv:：G计算成员列表"
  },
  {
    "origin": "This is the complete list of members for",
    "local": "这是您的完整成员列表"
  },
  {
    "origin": ", including all inherited members.",
    "local": "，包括所有继承的成员。"
  },
  {
    "origin": "(GRunArgs &amp;&amp;ins, GRunArgsP &amp;&amp;outs, GCompileArgs &amp;&amp;args={})",
    "local": "（GRunArgs&amp&amp；ins、GRunArgsP和&amp；输出、G组件和&amp；参数={}）"
  },
  {
    "origin": "(cv::Mat in, cv::Mat &amp;out, GCompileArgs &amp;&amp;args={})",
    "local": "（cv：：Mat in，cv：：Mat&amp；out、GCompileArgs和&amp；参数={}）"
  },
  {
    "origin": "(cv::Mat in, cv::Scalar &amp;out, GCompileArgs &amp;&amp;args={})",
    "local": "（cv:：Mat in，cv:：Scalar&amp；out、GCompileArgs和&amp；参数={}）"
  },
  {
    "origin": "(cv::Mat in1, cv::Mat in2, cv::Mat &amp;out, GCompileArgs &amp;&amp;args={})",
    "local": "（cv：：Mat in1，cv：：Mat in2，cv：：Mat&amp；out、GCompileArgs和&amp；参数={}）"
  },
  {
    "origin": "(cv::Mat in1, cv::Mat in2, cv::Scalar &amp;out, GCompileArgs &amp;&amp;args={})",
    "local": "（cv：：Mat in1，cv：：Mat in2，cv：：标量&amp；out、GCompileArgs和&amp；参数={}）"
  },
  {
    "origin": "(const std::vector&lt; cv::Mat &gt; &amp;ins, std::vector&lt; cv::Mat &gt; &amp;outs, GCompileArgs &amp;&amp;args={})",
    "local": "（const std：：向量&lt；简历：：Mat&gt&amp；ins，std：：向量&lt；简历：：Mat&gt&amp；输出、G组件和&amp；参数={}）"
  },
  {
    "origin": "(GMetaArgs &amp;&amp;in_metas, GCompileArgs &amp;&amp;args={})",
    "local": "（GMetaArgs&amp；amp；在元中，GCompileArgs&amp&amp；参数={}）"
  },
  {
    "origin": "(const Ts &amp;... metas) -&gt; typename std::enable_if&lt; detail::are_meta_descrs&lt; Ts... &gt;::value, GCompiled &gt;::type",
    "local": "（常数）；。。。元）—&gt；typename std：：启用\\u if&lt；细节：：是否描述（&lt；它&gt；：：值，GCompiled&gt；：：类型"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "(const Ts &amp;... meta_and_compile_args) -&gt; typename std::enable_if&lt; detail::are_meta_descrs_but_last&lt; Ts... &gt;::value &amp;&amp;std::is_same&lt; GCompileArgs, detail::last_type_t&lt; Ts... &gt; &gt;::value, GCompiled &gt;::type",
    "local": "（常数）；。。。元和编译参数）—&gt；typename std：：启用\\u if&lt；细节：：是否是元描述但最后一个&lt；它&gt；：：价值观&amp；std：：是否相同&lt；GCompileArgs，detail:：last\\u type\\lt；它&燃气轮机&gt；：：值，GCompiled&gt；：：类型"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "(GMetaArgs &amp;&amp;in_metas, GCompileArgs &amp;&amp;args={})",
    "local": "（GMetaArgs&amp；amp；在元中，GCompileArgs&amp&amp；参数={}）"
  },
  {
    "origin": "(GCompileArgs &amp;&amp;args={})",
    "local": "（GCompileArgs&amp；）amp；参数={}）"
  },
  {
    "origin": "(const Ts &amp;... metas) -&gt; typename std::enable_if&lt; detail::are_meta_descrs&lt; Ts... &gt;::value, GStreamingCompiled &gt;::type",
    "local": "（常数）；。。。元）—&gt；typename std：：启用\\u if&lt；细节：：是否描述（&lt；它&gt；：：值，GStreamingCompiled&gt；：：类型"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "(const Ts &amp;... meta_and_compile_args) -&gt; typename std::enable_if&lt; detail::are_meta_descrs_but_last&lt; Ts... &gt;::value &amp;&amp;std::is_same&lt; GCompileArgs, detail::last_type_t&lt; Ts... &gt; &gt;::value, GStreamingCompiled &gt;::type",
    "local": "（常数）；。。。元和编译参数）—&gt；typename std：：启用\\u if&lt；细节：：是否是元描述但最后一个&lt；它&gt；：：价值观&amp；std：：是否相同&lt；GCompileArgs，detail:：last\\u type\\lt；它&燃气轮机&gt；：：值，GStreamingCompiled&gt；：：类型"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "(const std::tuple&lt; Ts... &gt; &amp;meta_and_compile_args, detail::Seq&lt; IIs... &gt;)",
    "local": "（const std：：元组&lt；它&燃气轮机&amp；元和编译参数，细节：：Seq&lt；IIs&gt；）"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "(const Generator &amp;gen)",
    "local": "（const生成器和；发电机）"
  },
  {
    "origin": "(GProtoInputArgs &amp;&amp;ins, GProtoOutputArgs &amp;&amp;outs)",
    "local": "（GProtoInputArgs&amp；amp；ins，GProtoOutputArgs&amp；amp；输出）"
  },
  {
    "origin": "(GMat in, GMat out)",
    "local": "（GMat输入，GMat输出）"
  },
  {
    "origin": "(GMat in, GScalar out)",
    "local": "（GMat输入，GScalar输出）"
  },
  {
    "origin": "(GMat in1, GMat in2, GMat out)",
    "local": "（GMat输入，GMat输入，GMat输出）"
  },
  {
    "origin": "(GMat in1, GMat in2, GScalar out)",
    "local": "（GMat输入，GMat输入，GScalar输出）"
  },
  {
    "origin": "(const std::vector&lt; GMat &gt; &amp;ins, const std::vector&lt; GMat &gt; &amp;outs)",
    "local": "（const std：：向量&lt；GMat&gt&amp；ins，const std：：向量&lt；GMat&gt&amp；出局）"
  },
  {
    "origin": "typedef",
    "local": "类型定义"
  },
  {
    "origin": "(GMetaArgs &amp;&amp;in_metas, GCompileArgs &amp;&amp;args)",
    "local": "（GMetaArgs&amp；amp；在元中，GCompileArgs&amp&amp；参数）"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:43为OpenCV生成，&#160；"
  }
]