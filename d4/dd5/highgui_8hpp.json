[
  {
    "origin": "OpenCV: opencv2/highgui.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Typedefs",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "highgui.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "available only for Qt. See",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "\"black box\" representation of the file storage associated with a file on disk.",
    "local": ""
  },
  {
    "origin": "Typedefs",
    "local": ""
  },
  {
    "origin": "typedef void(*&#160;",
    "local": ""
  },
  {
    "origin": ") (int state, void *userdata)",
    "local": ""
  },
  {
    "origin": "Callback function for a button created by",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "typedef void(*&#160;",
    "local": ""
  },
  {
    "origin": ") (int event, int x, int y, int flags, void *userdata)",
    "local": ""
  },
  {
    "origin": "Callback function for mouse events. see",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "typedef void(*&#160;",
    "local": ""
  },
  {
    "origin": ") (void *userdata)",
    "local": ""
  },
  {
    "origin": "Callback function defined to be called every frame. See",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "typedef void(*&#160;",
    "local": ""
  },
  {
    "origin": ") (int pos, void *userdata)",
    "local": ""
  },
  {
    "origin": "Callback function for Trackbar see",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= 16,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Mouse Event Flags see",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Mouse Events see",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Qt \"button\" type.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Qt font style.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= 25,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Qt font weight.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= 0x00000000,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= 0x00000001,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= 0x00001000,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= 0x00000100,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= 0x00000000,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "=0x00000000,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= 0x00000010",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Flags for",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Flags for",
    "local": ""
  },
  {
    "origin": "/",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;img, const String &amp;text, Point org, const QtFont &amp;font)",
    "local": ""
  },
  {
    "origin": "Draws a text on the image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;img, const String &amp;text, Point org, const String &amp;nameFont, int pointSize=-1, Scalar color=Scalar::all(0), int weight=QT_FONT_NORMAL, int style=QT_STYLE_NORMAL, int spacing=0)",
    "local": ""
  },
  {
    "origin": "Draws a text on the image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;bar_name, ButtonCallback on_change, void *userdata=0, int type=QT_PUSH_BUTTON, bool initial_button_state=false)",
    "local": ""
  },
  {
    "origin": "Attaches a button to the control panel.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;trackbarname, const String &amp;winname, int *value, int count, TrackbarCallback onChange=0, void *userdata=0)",
    "local": ""
  },
  {
    "origin": "Creates a trackbar and attaches it to the specified window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Destroys all of the HighGUI windows.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname)",
    "local": ""
  },
  {
    "origin": "Destroys the specified window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, const String &amp;text, int delayms=0)",
    "local": ""
  },
  {
    "origin": "Displays a text on a window image as an overlay for a specified duration.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, const String &amp;text, int delayms=0)",
    "local": ""
  },
  {
    "origin": "Displays a text on the window statusbar during the specified period of time.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;nameFont, int pointSize=-1, Scalar color=Scalar::all(0), int weight=QT_FONT_NORMAL, int style=QT_STYLE_NORMAL, int spacing=0)",
    "local": ""
  },
  {
    "origin": "Creates the font to draw a text on an image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int flags)",
    "local": ""
  },
  {
    "origin": "Gets the mouse-wheel motion delta, when handling mouse-wheel events",
    "local": ""
  },
  {
    "origin": "and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;trackbarname, const String &amp;winname)",
    "local": ""
  },
  {
    "origin": "Returns the trackbar position.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname)",
    "local": ""
  },
  {
    "origin": "Provides rectangle of image in the window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, int prop_id)",
    "local": ""
  },
  {
    "origin": "Provides parameters of a window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, InputArray mat)",
    "local": ""
  },
  {
    "origin": "Displays an image in the specified window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, const ogl::Texture2D &amp;tex)",
    "local": ""
  },
  {
    "origin": "Displays OpenGL 2D texture in the specified window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;windowName)",
    "local": ""
  },
  {
    "origin": "Loads parameters of the specified window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, int x, int y)",
    "local": ""
  },
  {
    "origin": "Moves the window to the specified position.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, int flags=WINDOW_AUTOSIZE)",
    "local": ""
  },
  {
    "origin": "Creates a window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Polls for a pressed key.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, int width, int height)",
    "local": ""
  },
  {
    "origin": "Resizes the window to the specified size.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, const",
    "local": ""
  },
  {
    "origin": "&amp;size)",
    "local": ""
  },
  {
    "origin": "(const String &amp;windowName)",
    "local": ""
  },
  {
    "origin": "Saves parameters of the specified window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;windowName, InputArray img, bool showCrosshair=true, bool fromCenter=false)",
    "local": ""
  },
  {
    "origin": "Allows users to select a ROI on the given image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray img, bool showCrosshair=true, bool fromCenter=false)",
    "local": ""
  },
  {
    "origin": "(const String &amp;windowName, InputArray img, std::vector&lt; Rect &gt; &amp;boundingBoxes, bool showCrosshair=true, bool fromCenter=false)",
    "local": ""
  },
  {
    "origin": "Allows users to select multiple ROIs on the given image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, MouseCallback onMouse, void *userdata=0)",
    "local": ""
  },
  {
    "origin": "Sets mouse handler for the specified window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname)",
    "local": ""
  },
  {
    "origin": "Sets the specified window as current OpenGL context.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, OpenGlDrawCallback onOpenGlDraw, void *userdata=0)",
    "local": ""
  },
  {
    "origin": "Sets a callback function to be called to draw on top of displayed image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;trackbarname, const String &amp;winname, int maxval)",
    "local": ""
  },
  {
    "origin": "Sets the trackbar maximum position.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;trackbarname, const String &amp;winname, int minval)",
    "local": ""
  },
  {
    "origin": "Sets the trackbar minimum position.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;trackbarname, const String &amp;winname, int pos)",
    "local": ""
  },
  {
    "origin": "Sets the trackbar position.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, int prop_id, double prop_value)",
    "local": ""
  },
  {
    "origin": "Changes parameters of a window dynamically.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname, const String &amp;title)",
    "local": ""
  },
  {
    "origin": "Updates window title.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int(*pt2Func)(int argc, char *argv[]), int argc, char *argv[])",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(const String &amp;winname)",
    "local": ""
  },
  {
    "origin": "Force window to redraw its context and call draw callback ( See",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int delay=0)",
    "local": ""
  },
  {
    "origin": "Waits for a pressed key.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int delay=0)",
    "local": ""
  },
  {
    "origin": "Similar to",
    "local": ""
  },
  {
    "origin": ", but returns full key code.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:33 for OpenCV by &#160;",
    "local": ""
  }
]