[
  {
    "origin": "OpenCV: cv::face Namespace Reference",
    "local": "OpenCV:cv:：face命名空间引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Typedefs",
    "local": "类型定义"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "cv::face Namespace Reference",
    "local": "cv:：face命名空间引用"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "struct",
    "local": "结构"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Abstract base class for all facemark models.",
    "local": "所有facemark模型的抽象基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Abstract base class for trainable facemark models.",
    "local": "可训练facemark模型的抽象基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Abstract base class for all face recognition models.",
    "local": "所有人脸识别模型的抽象基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Minimum Average Correlation Energy Filter useful for authentication with (cancellable) biometrical features. (does not need many positives to train (10-50), and no negatives at all, also robust to noise/salting)",
    "local": "最小平均相关能量滤波器，用于（可取消的）生物特征认证(不需要太多的积极因素来训练（10-50），完全没有消极因素，对噪音/盐渍也很强）"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Abstract base class for all strategies of prediction result handling.",
    "local": "所有预测结果处理策略的抽象基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Default predict collector.",
    "local": "默认预测收集器。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Typedefs",
    "local": "类型定义"
  },
  {
    "origin": "typedef bool(*",
    "local": "布尔(*"
  },
  {
    "origin": ") (",
    "local": ") ("
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", void *userData)",
    "local": "，void*用户数据）"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "construct an AAM facemark detector",
    "local": "构造一个AAM面标记探测器"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "construct a Kazemi facemark detector",
    "local": "构造一个Kazemi面部标记探测器"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "construct an LBF facemark detector",
    "local": "构造一个LBF面标记检测器"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image,",
    "local": "图像，"
  },
  {
    "origin": "points,",
    "local": "点数，"
  },
  {
    "origin": "color=",
    "local": "颜色="
  },
  {
    "origin": "(255, 0, 0))",
    "local": "(255, 0, 0))"
  },
  {
    "origin": "Utility to draw the detected facial landmark points.",
    "local": "工具来绘制检测到的面部地标点。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image,",
    "local": "图像，"
  },
  {
    "origin": "faces,",
    "local": "面孔，"
  },
  {
    "origin": "*params)",
    "local": "*参数）"
  },
  {
    "origin": "Default face detector This function is mainly utilized by the implementation of a",
    "local": "默认的人脸检测器这个功能主要是由一个"
  },
  {
    "origin": ". End users are advised to use function Facemark::getFaces which can be manually defined and circumvented to the algorithm by Facemark::setFaceDetector.",
    "local": ". 建议最终用户使用Facemark:：getFaces函数，该函数可以通过Facemark:：setFaceDetector手动定义并绕过算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image,",
    "local": "图像，"
  },
  {
    "origin": "faces, const",
    "local": "面，常数"
  },
  {
    "origin": "&amp;face_cascade_name)",
    "local": "&amp；面（名称）"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "imageList,",
    "local": "图像列表，"
  },
  {
    "origin": "annotationList, std::vector&lt;",
    "local": "注释列表，std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;images, std::vector&lt;",
    "local": "&燃气轮机&amp；图像，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;annotations)",
    "local": "&燃气轮机&amp；注释）"
  },
  {
    "origin": "A utility to load list of paths to training image and annotation file.",
    "local": "一个实用程序加载路径列表到训练图像和注释文件。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "filename,",
    "local": "文件名，"
  },
  {
    "origin": "points, float offset=0.0f)",
    "local": "点，浮动偏移=0.0f）"
  },
  {
    "origin": "A utility to load facial landmark information from a given file.",
    "local": "从给定文件加载面部地标信息的实用程序。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "filename, std::vector&lt;",
    "local": "文件名，std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;images,",
    "local": "&燃气轮机&amp；图像，"
  },
  {
    "origin": "facePoints, char delim=' ', float offset=0.0f)",
    "local": "面点，char delim=''，float offset=0.0f）"
  },
  {
    "origin": "A utility to load facial landmark dataset from a single file.",
    "local": "从单个文件加载面部地标数据集的实用程序。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "imageList,",
    "local": "图像列表，"
  },
  {
    "origin": "groundTruth, std::vector&lt;",
    "local": "基本事实，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;images,",
    "local": "&燃气轮机&amp；图像，"
  },
  {
    "origin": "facePoints, float offset=0.0f)",
    "local": "面点，浮动偏移=0.0f）"
  },
  {
    "origin": "A utility to load facial landmark information from the dataset.",
    "local": "从数据集中加载面部地标信息的实用程序。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(std::vector&lt;",
    "local": "（标准：：向量&lt；"
  },
  {
    "origin": "&gt; filename, std::vector&lt; std::vector&lt;",
    "local": "&燃气轮机；文件名，std:：vector&lt；标准：：向量&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;trainlandmarks, std::vector&lt;",
    "local": "&燃气轮机&燃气轮机&amp；列车地标，标准：：矢量&lt；"
  },
  {
    "origin": "&gt; &amp;trainimages)",
    "local": "&gt；&个安培；培训图片）"
  },
  {
    "origin": "This function extracts the data for training from .txt files which contains the corresponding image name and landmarks. The first file in each file should give the path of the image whose landmarks are being described in the file. Then in the subsequent lines there should be coordinates of the landmarks in the image i.e each line should be of the form x,y where x represents the x coordinate of the landmark and y represents the y coordinate of the landmark.",
    "local": "此函数从包含相应图像名称和地标的.txt文件中提取用于训练的数据。每个文件中的第一个文件应该给出在文件中描述其地标的图像的路径。在随后的几行中，应该有图像中地标的坐标，即每一行的形式应该是x，y，其中x代表地标的x坐标，y代表地标的y坐标。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createFacemarkAAM()",
    "local": "createFacemarkAAM（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::face::createFacemarkAAM",
    "local": "&燃气轮机；简历：：面：：createFacemarkAAM"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.face.createFacemarkAAM(",
    "local": "cv.face.createFacemarkAAM公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "construct an AAM facemark detector",
    "local": "构造一个AAM面标记探测器"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createFacemarkKazemi()",
    "local": "createFacemarkKazemi（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::face::createFacemarkKazemi",
    "local": "&燃气轮机；简历：：面：：createFacemarkKazemi"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.face.createFacemarkKazemi(",
    "local": "简历：face.createFacemarkKazemi("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "construct a Kazemi facemark detector",
    "local": "构造一个Kazemi面部标记探测器"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createFacemarkLBF()",
    "local": "createFacemarkLBF（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::face::createFacemarkLBF",
    "local": "&燃气轮机；cv：：面：：createFacemarkLBF"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.face.createFacemarkLBF(",
    "local": "cv.face.createFacemarkLBF创建面标记("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "construct an LBF facemark detector",
    "local": "构造一个LBF面标记检测器"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:47为OpenCV生成"
  }
]