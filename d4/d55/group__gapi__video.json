[
  {
    "origin": "OpenCV: G-API Video processing functionality",
    "local": "OpenCV:G-API视频处理功能"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "G-API Video processing functionality",
    "local": "G-API视频处理功能"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；SRC，const"
  },
  {
    "origin": "&amp;bsParams)",
    "local": "&amp；b参数）"
  },
  {
    "origin": "Gaussian Mixture-based or K-nearest neighbours-based Background/Foreground Segmentation",
    "local": "基于高斯混合或K近邻的背景/前景分割"
  },
  {
    "origin": ". The operation generates a foreground mask.",
    "local": ". 该操作生成前景掩码。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;img, const",
    "local": "&amp；IMG，const"
  },
  {
    "origin": "&amp;winSize, const",
    "local": "&amp；winSize，常量"
  },
  {
    "origin": "&amp;maxLevel, bool withDerivatives=true, int pyrBorder=",
    "local": "&amp；maxLevel，bool with derivatives=真，int="
  },
  {
    "origin": ", int derivBorder=",
    "local": "int派生顺序="
  },
  {
    "origin": ", bool tryReuseInputImage=true)",
    "local": "，bool tryReuseInputImage=真）"
  },
  {
    "origin": "Constructs the image pyramid which can be passed to calcOpticalFlowPyrLK.",
    "local": "构造可以传递给calcOpticalFlowPyrLK的图像金字塔。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;prevImg, const",
    "local": "&amp；Previmg，const"
  },
  {
    "origin": "&amp;nextImg, const",
    "local": "&amp；NextImg，const"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;prevPts, const",
    "local": "&gt；gt；amp；前文，常量"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;predPts, const",
    "local": "&gt；gt；amp；预测，常数"
  },
  {
    "origin": "&amp;winSize=",
    "local": "&amp；winSize公司="
  },
  {
    "origin": "(21, 21), const",
    "local": "（21.21），常数"
  },
  {
    "origin": "&amp;maxLevel=3, const",
    "local": "&amp；最大电平=3，常数"
  },
  {
    "origin": "&amp;criteria=",
    "local": "&amp；标准="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ", 30, 0.01), int flags=0, double minEigThresh=1e-4)",
    "local": "，30，0.01），int flags=0，double minEigThresh=1e-4）"
  },
  {
    "origin": "Calculates an optical flow for a sparse feature set using the iterative Lucas-Kanade method with pyramids.",
    "local": "使用带金字塔的迭代Lucas-Kanade方法计算稀疏特征集的光流。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;prevPyr, const",
    "local": "&gt；gt；amp；普雷维，康斯特"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;nextPyr, const",
    "local": "&gt；gt；amp；下一年，康斯特"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;prevPts, const",
    "local": "&gt；gt；amp；前文，常量"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;predPts, const",
    "local": "&gt；gt；amp；预测，常数"
  },
  {
    "origin": "&amp;winSize=",
    "local": "&amp；winSize公司="
  },
  {
    "origin": "(21, 21), const",
    "local": "（21.21），常数"
  },
  {
    "origin": "&amp;maxLevel=3, const",
    "local": "&amp；最大电平=3，常数"
  },
  {
    "origin": "&amp;criteria=",
    "local": "&amp；标准="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ", 30, 0.01), int flags=0, double minEigThresh=1e-4)",
    "local": "，30，0.01），int flags=0，double minEigThresh=1e-4）"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;measurement, const",
    "local": "&amp；测量，常数"
  },
  {
    "origin": "&lt; bool &gt; &amp;haveMeasurement, const",
    "local": "&lt；布尔&gt；&gt；amp；测量，常数"
  },
  {
    "origin": "&amp;control, const",
    "local": "&amp；控制，const"
  },
  {
    "origin": "&amp;kfParams)",
    "local": "&amp；（参数）"
  },
  {
    "origin": "Standard Kalman filter algorithm",
    "local": "标准卡尔曼滤波算法"
  },
  {
    "origin": "http://en.wikipedia.org/wiki/Kalman_filter",
    "local": "http://en.wikipedia.org/wiki/Kalman_filter"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;measurement, const",
    "local": "&amp；测量，常数"
  },
  {
    "origin": "&lt; bool &gt; &amp;haveMeasurement, const",
    "local": "&lt；布尔&gt；&gt；amp；测量，常数"
  },
  {
    "origin": "&amp;kfParams)",
    "local": "&amp；（参数）"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "BackgroundSubtractor()",
    "local": "背景减法器（）"
  },
  {
    "origin": "cv::gapi::BackgroundSubtractor",
    "local": "cv：：gapi：：背景减法器"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "bsParams",
    "local": "B参数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Gaussian Mixture-based or K-nearest neighbours-based Background/Foreground Segmentation",
    "local": "基于高斯混合或K近邻的背景/前景分割"
  },
  {
    "origin": ". The operation generates a foreground mask.",
    "local": ". 该操作生成前景掩码。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "Output image is foreground mask, i.e. 8-bit unsigned 1-channel (binary) matrix",
    "local": "输出图像是前景掩码，即8位无符号1通道（二进制）矩阵"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Functional textual ID is \"org.opencv.video.BackgroundSubtractor\"",
    "local": "函数文本ID是“org.opencv.video.BackgroundSubtractor”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input image: Floating point frame is used without scaling and should be in range [0,255].",
    "local": "输入图像：使用浮点帧时不进行缩放，应在[0255]范围内。"
  },
  {
    "origin": "bsParams",
    "local": "B参数"
  },
  {
    "origin": "Set of initialization parameters for Background Subtractor kernel.",
    "local": "背景减法器内核的初始化参数集。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "buildOpticalFlowPyramid()",
    "local": "buildOpticalFlowPyramid（）"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "&gt; cv::gapi::buildOpticalFlowPyramid",
    "local": "&燃气轮机；cv:：gapi:：buildOpticalFlowPyramid"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "winSize",
    "local": "窗口大小"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "maxLevel",
    "local": "最大电平"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "withDerivatives",
    "local": "衍生产品"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "pyrBorder",
    "local": "pyrBorders公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "derivBorder",
    "local": "衍生订单"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "tryReuseInputImage",
    "local": "tryReuseInputImage公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Constructs the image pyramid which can be passed to calcOpticalFlowPyrLK.",
    "local": "构造可以传递给calcOpticalFlowPyrLK的图像金字塔。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.video.buildOpticalFlowPyramid\"",
    "local": "函数文本ID为“org.opencv.video.buildOpticalFlowPyramid”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": "8-bit input image.",
    "local": "8位输入图像。"
  },
  {
    "origin": "winSize",
    "local": "窗口大小"
  },
  {
    "origin": "window size of optical flow algorithm. Must be not less than winSize argument of calcOpticalFlowPyrLK. It is needed to calculate required padding for pyramid levels.",
    "local": "光流算法的窗口大小。必须不小于calcOpticalFlowPyrLK的winSize参数。需要计算金字塔级别所需的填充。"
  },
  {
    "origin": "maxLevel",
    "local": "最大电平"
  },
  {
    "origin": "0-based maximal pyramid level number.",
    "local": "基于0的最大金字塔层数。"
  },
  {
    "origin": "withDerivatives",
    "local": "衍生产品"
  },
  {
    "origin": "set to precompute gradients for the every pyramid level. If pyramid is constructed without the gradients then calcOpticalFlowPyrLK will calculate them internally.",
    "local": "设置为预计算每个金字塔级别的渐变。如果金字塔没有梯度，那么calcOpticalFlowPyrLK将在内部计算它们。"
  },
  {
    "origin": "pyrBorder",
    "local": "pyrBorders公司"
  },
  {
    "origin": "the border mode for pyramid layers.",
    "local": "金字塔层的边界模式。"
  },
  {
    "origin": "derivBorder",
    "local": "衍生订单"
  },
  {
    "origin": "the border mode for gradients.",
    "local": "渐变的边框模式。"
  },
  {
    "origin": "tryReuseInputImage",
    "local": "tryReuseInputImage公司"
  },
  {
    "origin": "put ROI of input image into the pyramid if possible. You can pass false to force data copying.",
    "local": "如果可能，将输入图像的ROI放入金字塔中。可以传递false以强制复制数据。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "output pyramid.",
    "local": "输出金字塔。"
  },
  {
    "origin": "number of levels in constructed pyramid. Can be less than maxLevel.",
    "local": "构造金字塔中的层数。可以小于maxLevel。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "calcOpticalFlowPyrLK()",
    "local": "计算光学"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "&lt;float&gt; &gt; cv::gapi::calcOpticalFlowPyrLK",
    "local": "&lt；浮动&gt；&gt；工作组；cv：：gapi：：钙钛矿"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "prevImg",
    "local": "预防"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "nextImg",
    "local": "下一个"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "prevPts",
    "local": "前文"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "predPts",
    "local": "predPts公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "winSize",
    "local": "窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "maxLevel",
    "local": "最大电平"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "criteria",
    "local": "标准"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "minEigThresh",
    "local": "minEigThresh公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates an optical flow for a sparse feature set using the iterative Lucas-Kanade method with pyramids.",
    "local": "使用带金字塔的迭代Lucas-Kanade方法计算稀疏特征集的光流。"
  },
  {
    "origin": "See",
    "local": "看到了吗"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.video.calcOpticalFlowPyrLK\"",
    "local": "函数文本ID为“org.opencv.video.calcOpticalFlowPyrLK”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "prevImg",
    "local": "预防"
  },
  {
    "origin": "first 8-bit input image (",
    "local": "第一个8位输入图像("
  },
  {
    "origin": ") or pyramid (GArray&lt;GMat&gt;) constructed by buildOpticalFlowPyramid.",
    "local": ")或金字塔（加里&lt；GMat&gt；）由buildOpticalFlowPyramid构建。"
  },
  {
    "origin": "nextImg",
    "local": "下一个"
  },
  {
    "origin": "second input image (",
    "local": "第二个输入图像("
  },
  {
    "origin": ") or pyramid (GArray&lt;GMat&gt;) of the same size and the same type as prevImg.",
    "local": ")或金字塔（加里&lt；GMat&gt；）大小和类型与上一个相同。"
  },
  {
    "origin": "prevPts",
    "local": "前文"
  },
  {
    "origin": "of 2D points for which the flow needs to be found; point coordinates must be single-precision floating-point numbers.",
    "local": "需要找到流动的2D点的数量；点坐标必须是单精度浮点数。"
  },
  {
    "origin": "predPts",
    "local": "predPts公司"
  },
  {
    "origin": "of 2D points initial for the flow search; make sense only when OPTFLOW_USE_INITIAL_FLOW flag is passed; in that case the vector must have the same size as in the input.",
    "local": "二维点的初始流动搜索；只有在通过OPTFLOW\\u USE\\u INITIAL\\u FLOW标志时才有意义；在这种情况下，向量的大小必须与输入中的大小相同。"
  },
  {
    "origin": "winSize",
    "local": "窗口大小"
  },
  {
    "origin": "size of the search window at each pyramid level.",
    "local": "每个金字塔级别上搜索窗口的大小。"
  },
  {
    "origin": "maxLevel",
    "local": "最大电平"
  },
  {
    "origin": "0-based maximal pyramid level number; if set to 0, pyramids are not used (single level), if set to 1, two levels are used, and so on; if pyramids are passed to input then algorithm will use as many levels as pyramids have but no more than maxLevel.",
    "local": "基于0的最大金字塔层数；如果设置为0，则不使用金字塔（单个级别），如果设置为1，则使用两个级别，依此类推；若金字塔被传递给输入，那个么算法将使用和金字塔一样多的级别，但不超过maxLevel。"
  },
  {
    "origin": "criteria",
    "local": "标准"
  },
  {
    "origin": "parameter, specifying the termination criteria of the iterative search algorithm (after the specified maximum number of iterations criteria.maxCount or when the search window moves by less than criteria.epsilon).",
    "local": "参数，指定迭代搜索算法的终止条件（在指定的最大迭代次数criteria.maxCount之后或搜索窗口的移动量小于criteria.epsilon时）。"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "operation flags:",
    "local": "操作标志："
  },
  {
    "origin": "OPTFLOW_USE_INITIAL_FLOW",
    "local": "选择流使用初始流"
  },
  {
    "origin": "uses initial estimations, stored in nextPts; if the flag is not set, then prevPts is copied to nextPts and is considered the initial estimate.",
    "local": "使用存储在nextPts中的初始估计值；如果没有设置标志，则prevPts被复制到nextPts，并被视为初始估计。"
  },
  {
    "origin": "OPTFLOW_LK_GET_MIN_EIGENVALS",
    "local": "选择流\\u LK \\u GET \\u MIN \\u特征值"
  },
  {
    "origin": "use minimum eigen values as an error measure (see minEigThreshold description); if the flag is not set, then",
    "local": "使用最小特征值作为误差度量（参见阈值描述）；如果未设置标志，则"
  },
  {
    "origin": "distance between patches around the original and a moved point, divided by number of pixels in a window, is used as a error measure.",
    "local": "原始点和移动点周围的面片之间的距离除以窗口中的像素数，用作误差度量。"
  },
  {
    "origin": "minEigThresh",
    "local": "minEigThresh公司"
  },
  {
    "origin": "the algorithm calculates the minimum eigen value of a 2x2 normal matrix of optical flow equations (this matrix is called a spatial gradient matrix in",
    "local": "该算法计算光流方程的2x2正规矩阵的最小特征值（该矩阵在理论上称为空间梯度矩阵）"
  },
  {
    "origin": "), divided by number of pixels in a window; if this value is less than minEigThreshold, then a corresponding feature is filtered out and its flow is not processed, so it allows to remove bad points and get a performance boost.",
    "local": ")，除以窗口中的像素数；如果这个值小于minEigThreshold，那么相应的特征就会被过滤掉，并且它的流不会被处理，因此它允许删除坏点并获得性能提升。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "of 2D points (with single-precision floating-point coordinates) containing the calculated new positions of input features in the second image.",
    "local": "包含第二个图像中输入特征的计算新位置的二维点（使用单精度浮点坐标）。"
  },
  {
    "origin": "status",
    "local": "地位"
  },
  {
    "origin": "(of unsigned chars); each element of the vector is set to 1 if the flow for the corresponding features has been found, otherwise, it is set to 0.",
    "local": "（指未签名字符）；如果找到了对应特征的流，则向量的每个元素都设置为1，否则设置为0。"
  },
  {
    "origin": "of errors (doubles); each element of the vector is set to an error for the corresponding feature, type of the error measure can be set in flags parameter; if the flow wasn't found then the error is not defined (use the status parameter to find such cases).",
    "local": "错误数（双倍）；将向量的每个元素设置为一个误差对应的特征，可以在flags参数中设置误差度量的类型；如果未找到流，则未定义错误（使用status参数查找此类情况）。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "calcOpticalFlowPyrLK()",
    "local": "计算光学"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;,",
    "local": "&gt；，"
  },
  {
    "origin": "&lt;float&gt; &gt; cv::gapi::calcOpticalFlowPyrLK",
    "local": "&lt；浮动&gt；&gt；工作组；cv：：gapi：：钙钛矿"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "prevPyr",
    "local": "普雷维"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "nextPyr",
    "local": "下一年"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "prevPts",
    "local": "前文"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "predPts",
    "local": "predPts公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "winSize",
    "local": "窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "maxLevel",
    "local": "最大电平"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "criteria",
    "local": "标准"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "minEigThresh",
    "local": "minEigThresh公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.video.calcOpticalFlowPyrLKForPyr\"",
    "local": "函数文本ID为“org.opencv.video.calcOpticalFlowPyrLKForPyr”"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "KalmanFilter()",
    "local": "Kalman过滤器（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "cv::gapi::KalmanFilter",
    "local": "cv:：gapi:：Kalman过滤器"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "measurement",
    "local": "测量"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "haveMeasurement",
    "local": "Have测量"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "control",
    "local": "控制"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "kfParams",
    "local": "kfParams公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Standard Kalman filter algorithm",
    "local": "标准卡尔曼滤波算法"
  },
  {
    "origin": "http://en.wikipedia.org/wiki/Kalman_filter",
    "local": "http://en.wikipedia.org/wiki/Kalman_filter"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Functional textual ID is \"org.opencv.video.KalmanFilter\"",
    "local": "函数文本ID是“org.opencv.video.KalmanFilter”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "measurement",
    "local": "测量"
  },
  {
    "origin": "input matrix: 32-bit or 64-bit float 1-channel matrix containing measurements.",
    "local": "输入矩阵：32位或64位浮点1通道矩阵，包含测量值。"
  },
  {
    "origin": "haveMeasurement",
    "local": "Have测量"
  },
  {
    "origin": "dynamic input flag that indicates whether we get measurements at a particular iteration .",
    "local": "动态输入标志，指示是否在特定迭代中获得度量值。"
  },
  {
    "origin": "control",
    "local": "控制"
  },
  {
    "origin": "input matrix: 32-bit or 64-bit float 1-channel matrix contains control data for changing dynamic system.",
    "local": "输入矩阵：32位或64位浮点单通道矩阵包含用于改变动态系统的控制数据。"
  },
  {
    "origin": "kfParams",
    "local": "kfParams公司"
  },
  {
    "origin": "Set of initialization parameters for Kalman filter kernel.",
    "local": "卡尔曼滤波核的初始化参数集。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "Output matrix is predicted or corrected state. They can be 32-bit or 64-bit float 1-channel matrix",
    "local": "输出矩阵是预测或修正的状态。它们可以是32位或64位浮点单通道矩阵"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "If measurement matrix is given (haveMeasurements == true), corrected state will be returned which corresponds to the pipeline cv::KalmanFilter::predict(control) -&gt; cv::KalmanFilter::correct(measurement). Otherwise, predicted state will be returned which corresponds to the call of cv::KalmanFilter::predict(control).",
    "local": "如果给定了度量矩阵（haveMeasurements==true），则将返回与管道cv:：KalmanFilter:：predict（control）->；cv：：KalmanFilter：：正确（测量）。否则，将返回与cv:：KalmanFilter:：predict（control）调用相对应的预测状态。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "KalmanFilter()",
    "local": "Kalman过滤器（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "cv::gapi::KalmanFilter",
    "local": "cv:：gapi:：Kalman过滤器"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "measurement",
    "local": "测量"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "haveMeasurement",
    "local": "Have测量"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "kfParams",
    "local": "kfParams公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. The case of Standard Kalman filter algorithm when there is no control in a dynamic system. In this case the controlMatrix is empty and control vector is absent.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。标准卡尔曼滤波算法在动态系统无控制时的情况。在这种情况下，控制矩阵是空的，控制向量是不存在的。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.video.KalmanFilterNoControl\"",
    "local": "函数文本ID为“org.opencv.video.KalmanFilterNoControl”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "measurement",
    "local": "测量"
  },
  {
    "origin": "input matrix: 32-bit or 64-bit float 1-channel matrix containing measurements.",
    "local": "输入矩阵：32位或64位浮点1通道矩阵，包含测量值。"
  },
  {
    "origin": "haveMeasurement",
    "local": "Have测量"
  },
  {
    "origin": "dynamic input flag that indicates whether we get measurements at a particular iteration.",
    "local": "动态输入标志，指示是否在特定迭代中获得度量值。"
  },
  {
    "origin": "kfParams",
    "local": "kfParams公司"
  },
  {
    "origin": "Set of initialization parameters for Kalman filter kernel.",
    "local": "卡尔曼滤波核的初始化参数集。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "Output matrix is predicted or corrected state. They can be 32-bit or 64-bit float 1-channel matrix",
    "local": "输出矩阵是预测或修正的状态。它们可以是32位或64位浮点单通道矩阵"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by &#160;",
    "local": "于2021年4月2日星期五11:36:41为OpenCV生成，&#160；"
  }
]