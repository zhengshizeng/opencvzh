[
  {
    "origin": "OpenCV: cv::dynafu Namespace Reference",
    "local": "OpenCV:cv:：dynafu命名空间引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Typedefs",
    "local": "类型定义"
  },
  {
    "origin": "cv::dynafu Namespace Reference",
    "local": "cv:：dynafu命名空间引用"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Typedefs",
    "local": "类型定义"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "DynamicFusion implementation.",
    "local": "DynamicFusion实现。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Typedef Documentation",
    "local": "Typedef文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "Params",
    "local": "参数"
  },
  {
    "origin": "using",
    "local": "使用"
  },
  {
    "origin": "= typedef",
    "local": "=类型定义"
  },
  {
    "origin": "DynamicFusion implementation.",
    "local": "DynamicFusion实现。"
  },
  {
    "origin": "This class implements a 3d reconstruction algorithm as described in",
    "local": "此类实现如中所述的三维重建算法"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "It takes a sequence of depth images taken from depth sensor (or any depth images source such as stereo camera matching algorithm or even raymarching renderer). The output can be obtained as a vector of points and their normals or can be Phong-rendered from given camera pose.",
    "local": "它从深度传感器（或任何深度图像源，如立体相机匹配算法，甚至光线渲染器）获取一系列深度图像。输出可以作为点及其法线的向量获得，也可以从给定的相机姿势进行Phong渲染。"
  },
  {
    "origin": "It extends the KinectFusion algorithm to handle non-rigidly deforming scenes by maintaining a sparse set of nodes covering the geometry such that each node contains a warp to transform it from a canonical space to the live frame.",
    "local": "它扩展了KinectFusion算法来处理非刚性变形场景，通过保持覆盖几何体的稀疏节点集，使得每个节点包含一个扭曲，从而将其从规范空间转换到活动帧。"
  },
  {
    "origin": "An internal representation of a model is a voxel cuboid that keeps TSDF values which are a sort of distances to the surface (for details read the",
    "local": "模型的内部表示是一个体素长方体，它保持TSDF值，TSDF值是到曲面的一种距离（有关详细信息，请阅读"
  },
  {
    "origin": "article about TSDF). There is no interface to that representation yet.",
    "local": "关于TSDF的文章）。目前还没有与该表示的接口。"
  },
  {
    "origin": "Note that DynamicFusion is based on the KinectFusion algorithm which is patented and its use may be restricted by the list of patents mentioned in",
    "local": "请注意，DynamicFusion基于获得专利的KinectFusion算法，其使用可能受到中提到的专利列表的限制"
  },
  {
    "origin": "file in this module directory.",
    "local": "此模块目录中的文件。"
  },
  {
    "origin": "That's why you need to set the OPENCV_ENABLE_NONFREE option in CMake to use DynamicFusion.Backwards compatibility for old versions",
    "local": "这就是为什么您需要在CMake中设置OPENCV\\u ENABLE\\u NONFREE选项，以便对旧版本使用DynamicFusion.Backwards兼容性"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:47为OpenCV生成，&#160；"
  }
]