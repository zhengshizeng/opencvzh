[
  {
    "origin": "OpenCV: cv::ximgproc::SparseMatchInterpolator Class Reference",
    "local": "OpenCV:cv:：ximgproc:：SparseMatchInterpolator类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::ximgproc::SparseMatchInterpolator Class Reference",
    "local": "cv:：ximgproc:：SparseMatchInterpolator类引用"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "»",
    "local": "»"
  },
  {
    "origin": "Main interface for all filters, that take sparse matches as an input and produce a dense per-pixel matching (optical flow) as an output.",
    "local": "所有滤波器的主接口，以稀疏匹配作为输入，产生密集的每像素匹配（光流）作为输出。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::ximgproc::SparseMatchInterpolator:",
    "local": "cv:：ximgproc:：SparseMatchInterpolator的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "from_image,",
    "local": "从你的形象，"
  },
  {
    "origin": "from_points,",
    "local": "从各点来看，"
  },
  {
    "origin": "to_image,",
    "local": "为了你的形象，"
  },
  {
    "origin": "to_points,",
    "local": "对你来说，"
  },
  {
    "origin": "Interpolate input sparse matches.",
    "local": "插值输入稀疏匹配。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Main interface for all filters, that take sparse matches as an input and produce a dense per-pixel matching (optical flow) as an output.",
    "local": "所有滤波器的主接口，以稀疏匹配作为输入，产生密集的每像素匹配（光流）作为输出。"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "interpolate()",
    "local": "插值（）"
  },
  {
    "origin": "virtual void cv::ximgproc::SparseMatchInterpolator::interpolate",
    "local": "虚拟void cv:：ximgproc:：SparseMatchInterpolator:：interpolated"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "from_image",
    "local": "从\\u图像"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "from_points",
    "local": "从\\u点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "to_image",
    "local": "到\\u图像"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "to_points",
    "local": "到\\u点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dense_flow",
    "local": "密流"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dense_flow",
    "local": "密流"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ximgproc_SparseMatchInterpolator.interpolate(",
    "local": "SparseMatchInterpolator.interpolate文件("
  },
  {
    "origin": "from_image, from_points, to_image, to_points[, dense_flow]",
    "local": "从\\图像，从\\点，到\\图像，到\\点[，稠密\\流]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Interpolate input sparse matches.",
    "local": "插值输入稀疏匹配。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "from_image",
    "local": "从\\u图像"
  },
  {
    "origin": "first of the two matched images, 8-bit single-channel or three-channel.",
    "local": "两个匹配图像中的第一个，8位单通道或三通道。"
  },
  {
    "origin": "from_points",
    "local": "从\\u点"
  },
  {
    "origin": "points of the from_image for which there are correspondences in the to_image (Point2f vector or",
    "local": "在to\\图像中有对应关系的from\\图像的点（点2f矢量或"
  },
  {
    "origin": "of depth CV_32F)",
    "local": "深度CV32f）"
  },
  {
    "origin": "to_image",
    "local": "到\\u图像"
  },
  {
    "origin": "second of the two matched images, 8-bit single-channel or three-channel.",
    "local": "两个匹配图像中的第二个，8位单通道或三通道。"
  },
  {
    "origin": "to_points",
    "local": "到\\u点"
  },
  {
    "origin": "points in the to_image corresponding to from_points (Point2f vector or",
    "local": "to\\图像中的点对应于from\\点（点2f矢量或"
  },
  {
    "origin": "of depth CV_32F)",
    "local": "深度CV32f）"
  },
  {
    "origin": "dense_flow",
    "local": "密流"
  },
  {
    "origin": "output dense matching (two-channel CV_32F image)",
    "local": "输出密集匹配（双通道CV32f图像）"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/ximgproc/",
    "local": "opencv2/ximgproc/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:49 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:49为OpenCV生成"
  }
]