[
  {
    "origin": "OpenCV: Image file reading and writing",
    "local": "OpenCV：图像文件读写"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Modules",
    "local": "模块"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "Image file reading and writing",
    "local": "图像文件读写"
  },
  {
    "origin": "Modules",
    "local": "模块"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename)",
    "local": "&amp；文件名）"
  },
  {
    "origin": "Returns true if the specified image can be decoded by OpenCV.",
    "local": "如果指定的图像可以由OpenCV解码，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename)",
    "local": "&amp；文件名）"
  },
  {
    "origin": "Returns true if an image with the specified filename can be encoded by OpenCV.",
    "local": "如果OpenCV可以对具有指定文件名的图像进行编码，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "buf, int flags)",
    "local": "buf，int标志）"
  },
  {
    "origin": "Reads an image from a buffer in memory.",
    "local": "从内存中的缓冲区读取图像。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "buf, int flags,",
    "local": "buf，int标志，"
  },
  {
    "origin": "*dst)",
    "local": "*（夏时制）"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;ext,",
    "local": "&amp；提取，"
  },
  {
    "origin": "img, std::vector&lt;",
    "local": "img，std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;buf, const std::vector&lt; int &gt; &amp;params=std::vector&lt; int &gt;())",
    "local": "&燃气轮机&amp；buf，const std：：向量&lt；内部&gt&amp；参数=标准：：向量&lt；int&gt；（））"
  },
  {
    "origin": "Encodes an image into a memory buffer.",
    "local": "将图像编码到内存缓冲区。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, int flags=",
    "local": "&amp；文件名，int标志="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Loads an image from a file.",
    "local": "从文件加载图像。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, std::vector&lt;",
    "local": "&amp；文件名，std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;mats, int flags=",
    "local": "&燃气轮机&amp；垫子，内景旗="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Loads a multi-page image from a file.",
    "local": "从文件加载多页图像。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename,",
    "local": "&amp；文件名，"
  },
  {
    "origin": "img, const std::vector&lt; int &gt; &amp;params=std::vector&lt; int &gt;())",
    "local": "img，const std：：向量&lt；内部&gt&amp；参数=标准：：向量&lt；int&gt；（））"
  },
  {
    "origin": "Saves an image to a specified file.",
    "local": "将图像保存到指定文件。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "static bool",
    "local": "静态布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename,",
    "local": "&amp；文件名，"
  },
  {
    "origin": "img, const std::vector&lt; int &gt; &amp;params=std::vector&lt; int &gt;())",
    "local": "img，const std：：向量&lt；内部&gt&amp；参数=标准：：向量&lt；int&gt；（））"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "haveImageReader()",
    "local": "haveImageReader（）"
  },
  {
    "origin": "bool cv::haveImageReader",
    "local": "布尔简历：：haveImageReader"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.haveImageReader(",
    "local": "简历：haveImageReader("
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns true if the specified image can be decoded by OpenCV.",
    "local": "如果指定的图像可以由OpenCV解码，则返回true。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": "File name of the image",
    "local": "图像的文件名"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "haveImageWriter()",
    "local": "海"
  },
  {
    "origin": "bool cv::haveImageWriter",
    "local": "bool简历：：haveImageWriter"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.haveImageWriter(",
    "local": "哈维写手简历("
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns true if an image with the specified filename can be encoded by OpenCV.",
    "local": "如果OpenCV可以对具有指定文件名的图像进行编码，则返回true。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": "File name of the image",
    "local": "图像的文件名"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "imdecode()",
    "local": "imdecode（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "cv::imdecode",
    "local": "cv：：imdecode"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "buf",
    "local": "缓冲器"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.imdecode(",
    "local": "简历imdecode("
  },
  {
    "origin": "buf, flags",
    "local": "布夫，旗子"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Reads an image from a buffer in memory.",
    "local": "从内存中的缓冲区读取图像。"
  },
  {
    "origin": "The function imdecode reads an image from the specified buffer in the memory. If the buffer is too short or contains invalid data, the function returns an empty matrix (",
    "local": "imdecode函数从内存中指定的缓冲区读取图像。如果缓冲区太短或包含无效数据，则函数返回空矩阵("
  },
  {
    "origin": "==NULL ).",
    "local": "==空）。"
  },
  {
    "origin": "See",
    "local": "看到了吗"
  },
  {
    "origin": "for the list of supported formats and flags description.",
    "local": "有关支持的格式和标志说明的列表。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "In the case of color images, the decoded images will have the channels stored in",
    "local": "在彩色图像的情况下，解码图像将具有存储在图像中的信道"
  },
  {
    "origin": "B G R",
    "local": "B G R公司"
  },
  {
    "origin": "order.",
    "local": "命令。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "buf",
    "local": "缓冲器"
  },
  {
    "origin": "Input array or vector of bytes.",
    "local": "输入字节数组或矢量。"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "The same flags as in",
    "local": "与中相同的标志"
  },
  {
    "origin": ", see",
    "local": "，请参见"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "imdecode()",
    "local": "imdecode（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "cv::imdecode",
    "local": "cv：：imdecode"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "buf",
    "local": "缓冲器"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "*",
    "local": "*"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.imdecode(",
    "local": "简历imdecode("
  },
  {
    "origin": "buf, flags",
    "local": "布夫，旗子"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "buf",
    "local": "缓冲器"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "The optional output placeholder for the decoded matrix. It can save the image reallocations when the function is called repeatedly for images of the same size.",
    "local": "解码矩阵的可选输出占位符。当对相同大小的图像重复调用函数时，它可以保存图像的重新分配。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "imencode()",
    "local": "imencode（）"
  },
  {
    "origin": "bool cv::imencode",
    "local": "布尔cv：：imencode"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "ext",
    "local": "提取"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "buf",
    "local": "缓冲器"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt; int &gt; &amp;",
    "local": "常量标准：：向量&lt；内部&gt&amp；"
  },
  {
    "origin": "params",
    "local": "参数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, buf",
    "local": "返回，buf"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.imencode(",
    "local": "cv.imencode公司("
  },
  {
    "origin": "ext, img[, params]",
    "local": "外部，img[，参数]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Encodes an image into a memory buffer.",
    "local": "将图像编码到内存缓冲区。"
  },
  {
    "origin": "The function imencode compresses the image and stores it in the memory buffer that is resized to fit the result. See",
    "local": "函数imencode压缩图像并将其存储在调整大小以适应结果的内存缓冲区中。看到了吗"
  },
  {
    "origin": "for the list of supported formats and flags description.",
    "local": "有关支持的格式和标志说明的列表。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "ext",
    "local": "提取"
  },
  {
    "origin": "File extension that defines the output format.",
    "local": "定义输出格式的文件扩展名。"
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": "Image to be written.",
    "local": "要写入的图像。"
  },
  {
    "origin": "buf",
    "local": "缓冲器"
  },
  {
    "origin": "Output buffer resized to fit the compressed image.",
    "local": "调整输出缓冲区大小以适应压缩图像。"
  },
  {
    "origin": "params",
    "local": "参数"
  },
  {
    "origin": "Format-specific parameters. See",
    "local": "设置特定参数的格式。看到了吗"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "imread()",
    "local": "imread（）"
  },
  {
    "origin": "cv::imread",
    "local": "简历：imread"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.imread(",
    "local": "伊姆雷德简历("
  },
  {
    "origin": "filename[, flags]",
    "local": "文件名[，标志]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Loads an image from a file.",
    "local": "从文件加载图像。"
  },
  {
    "origin": "The function imread loads an image from the specified file and returns it. If the image cannot be read (because of missing file, improper permissions, unsupported or invalid format), the function returns an empty matrix (",
    "local": "函数imread从指定的文件加载一个图像并返回它。如果无法读取图像（由于缺少文件、权限不正确、格式不受支持或无效），函数将返回一个空矩阵("
  },
  {
    "origin": "==NULL ).",
    "local": "==空）。"
  },
  {
    "origin": "Currently, the following file formats are supported:",
    "local": "目前，支持以下文件格式："
  },
  {
    "origin": "Windows bitmaps - *.bmp, *.dib (always supported)",
    "local": "Windows位图-*.bmp，*.dib（始终支持）"
  },
  {
    "origin": "JPEG files - *.jpeg, *.jpg, *.jpe (see the",
    "local": "JPEG文件-*.JPEG，*.jpg，*.jpe（请参阅"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "section)",
    "local": "（节）"
  },
  {
    "origin": "JPEG 2000 files - *.jp2 (see the",
    "local": "JPEG 2000文件-*.jp2（请参阅"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "section)",
    "local": "（节）"
  },
  {
    "origin": "Portable Network Graphics - *.png (see the",
    "local": "便携式网络图形-*.png（请参阅"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "section)",
    "local": "（节）"
  },
  {
    "origin": "WebP - *.webp (see the",
    "local": "WebP**WebP（参见"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "section)",
    "local": "（节）"
  },
  {
    "origin": "Portable image format - *.pbm, *.pgm, *.ppm *.pxm, *.pnm (always supported)",
    "local": "便携式图像格式-*.pbm，*.pgm，*.ppm*.pxm，*.pnm（始终支持）"
  },
  {
    "origin": "PFM files - *.pfm (see the",
    "local": "PFM文件-*.PFM（请参阅"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "section)",
    "local": "（节）"
  },
  {
    "origin": "Sun rasters - *.sr, *.ras (always supported)",
    "local": "太阳光栅-*.sr，*.ras（始终支持）"
  },
  {
    "origin": "TIFF files - *.tiff, *.tif (see the",
    "local": "TIFF文件-*.TIFF，*.tif（请参阅"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "section)",
    "local": "（节）"
  },
  {
    "origin": "OpenEXR Image files - *.exr (see the",
    "local": "OpenEXR图像文件-*.exr（请参阅"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "section)",
    "local": "（节）"
  },
  {
    "origin": "Radiance HDR - *.hdr, *.pic (always supported)",
    "local": "Radiance HDR-*.HDR，*.pic（始终支持）"
  },
  {
    "origin": "Raster and Vector geospatial data supported by GDAL (see the",
    "local": "GDAL支持的栅格和矢量地理空间数据（请参见"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "section)",
    "local": "（节）"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "The function determines the type of an image by the content, not by the file extension.",
    "local": "该函数通过内容而不是文件扩展名来确定图像的类型。"
  },
  {
    "origin": "In the case of color images, the decoded images will have the channels stored in",
    "local": "在彩色图像的情况下，解码图像将具有存储在图像中的信道"
  },
  {
    "origin": "B G R",
    "local": "B G R公司"
  },
  {
    "origin": "order.",
    "local": "命令。"
  },
  {
    "origin": "When using IMREAD_GRAYSCALE, the codec's internal grayscale conversion will be used, if available. Results may differ to the output of",
    "local": "使用IMREAD\\u灰度时，将使用编解码器的内部灰度转换（如果可用）。结果可能不同于"
  },
  {
    "origin": "On Microsoft Windows* OS and MacOSX*, the codecs shipped with an OpenCV image (libjpeg, libpng, libtiff, and libjasper) are used by default. So, OpenCV can always read JPEGs, PNGs, and TIFFs. On MacOSX, there is also an option to use native MacOSX image readers. But beware that currently these native image loaders give images with different pixel values because of the color management embedded into MacOSX.",
    "local": "在Microsoft Windows*操作系统和MacOSX*上，默认情况下使用OpenCV图像附带的编解码器（libjpeg、libpng、libtiff和libjasper）。因此，OpenCV总是可以读取jpeg、png和tiff。在MacOSX上，还可以选择使用本机MacOSX图像读取器。但是请注意，由于MacOSX中嵌入了颜色管理，因此当前这些原生图像加载程序提供的图像具有不同的像素值。"
  },
  {
    "origin": "On Linux*, BSD flavors and other Unix-like open-source operating systems, OpenCV looks for codecs supplied with an OS image. Install the relevant packages (do not forget the development files, for example, \"libjpeg-dev\", in Debian* and Ubuntu*) to get the codec support or turn on the OPENCV_BUILD_3RDPARTY_LIBS flag in CMake.",
    "local": "在Linux*、BSD风格和其他类似Unix的开放源代码操作系统上，OpenCV寻找与OS映像一起提供的编解码器。安装相关软件包（不要忘记开发文件，例如Debian*和Ubuntu*中的“libjpeg dev”），以获得编解码器支持或在CMake中打开OPENCV\\u BUILD\\u 3RDPARTY\\u LIBS标志。"
  },
  {
    "origin": "In the case you set",
    "local": "在你设置的情况下"
  },
  {
    "origin": "WITH_GDAL",
    "local": "和你的孩子在一起"
  },
  {
    "origin": "flag to true in CMake and",
    "local": "在CMake中标记为true，并且"
  },
  {
    "origin": "to load the image, then the",
    "local": "加载图像，然后"
  },
  {
    "origin": "GDAL",
    "local": "格达尔"
  },
  {
    "origin": "driver will be used in order to decode the image, supporting the following formats:",
    "local": "驱动程序将用于解码图像，支持以下格式："
  },
  {
    "origin": "Raster",
    "local": "光栅"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Vector",
    "local": "矢量"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "If EXIF information is embedded in the image file, the EXIF orientation will be taken into account and thus the image will be rotated accordingly except if the flags",
    "local": "如果EXIF信息嵌入到图像文件中，将考虑EXIF方向，因此图像将相应地旋转，除非标记"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "are passed.",
    "local": "都通过了。"
  },
  {
    "origin": "Use the IMREAD_UNCHANGED flag to keep the floating point values from PFM image.",
    "local": "使用IMREAD\\u UNCHANGED标志保留PFM图像中的浮点值。"
  },
  {
    "origin": "By default number of pixels must be less than 2^30. Limit can be set using system variable OPENCV_IO_MAX_IMAGE_PIXELS",
    "local": "默认情况下，像素数必须小于2^30。可以使用系统变量OPENCV\\u IO\\u MAX\\u IMAGE\\u pixels设置限制"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": "Name of file to be loaded.",
    "local": "要加载的文件名。"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "Flag that can take values of",
    "local": "可以接受的值的标志"
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", and",
    "local": "，和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "imreadmulti()",
    "local": "imreadmulti（）"
  },
  {
    "origin": "bool cv::imreadmulti",
    "local": "bool cv：：imreadmulti"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "mats",
    "local": "垫子"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, mats",
    "local": "复述，数学"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.imreadmulti(",
    "local": "简历：imreadmulti("
  },
  {
    "origin": "filename[, mats[, flags]]",
    "local": "文件名[，mats[，flags]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Loads a multi-page image from a file.",
    "local": "从文件加载多页图像。"
  },
  {
    "origin": "The function imreadmulti loads a multi-page image from the specified file into a vector of",
    "local": "函数imreadmulti将指定文件中的多页图像加载到"
  },
  {
    "origin": "objects.",
    "local": "物体。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": "Name of file to be loaded.",
    "local": "要加载的文件名。"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "Flag that can take values of",
    "local": "可以接受的值的标志"
  },
  {
    "origin": ", default with",
    "local": "，默认为"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "mats",
    "local": "垫子"
  },
  {
    "origin": "A vector of",
    "local": "向量"
  },
  {
    "origin": "objects holding each page, if more than one.",
    "local": "包含每个页面的对象（如果不止一个）。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "imwrite()",
    "local": "imwrite（）"
  },
  {
    "origin": "bool cv::imwrite",
    "local": "bool简历：：imwrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt; int &gt; &amp;",
    "local": "常量标准：：向量&lt；内部&gt&amp；"
  },
  {
    "origin": "params",
    "local": "参数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.imwrite(",
    "local": "简历imwrite("
  },
  {
    "origin": "filename, img[, params]",
    "local": "文件名，img[，params]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Saves an image to a specified file.",
    "local": "将图像保存到指定文件。"
  },
  {
    "origin": "The function imwrite saves the image to the specified file. The image format is chosen based on the filename extension (see",
    "local": "函数imwrite将图像保存到指定的文件中。根据文件扩展名选择图像格式（请参见"
  },
  {
    "origin": "for the list of extensions). In general, only 8-bit single-channel or 3-channel (with 'BGR' channel order) images can be saved using this function, with these exceptions:",
    "local": "扩展名列表）。通常，使用此功能只能保存8位单通道或3通道（具有“BGR”通道顺序）图像，但以下情况除外："
  },
  {
    "origin": "16-bit unsigned (CV_16U) images can be saved in the case of PNG, JPEG 2000, and TIFF formats",
    "local": "在PNG、JPEG2000和TIFF格式的情况下，可以保存16位无符号（CV\\ U 16U）图像"
  },
  {
    "origin": "32-bit float (CV_32F) images can be saved in PFM, TIFF, OpenEXR, and Radiance HDR formats; 3-channel (CV_32FC3) TIFF images will be saved using the LogLuv high dynamic range encoding (4 bytes per pixel)",
    "local": "32位浮点（CV32f）图像可以以PFM、TIFF、OpenEXR和Radiance HDR格式保存；3通道（CV32fc3）TIFF图像将使用LogLuv高动态范围编码（每像素4字节）保存"
  },
  {
    "origin": "PNG images with an alpha channel can be saved using this function. To do this, create 8-bit (or 16-bit) 4-channel image BGRA, where the alpha channel goes last. Fully transparent pixels should have alpha set to 0, fully opaque pixels should have alpha set to 255/65535 (see the code sample below).",
    "local": "使用此函数可以保存带有alpha通道的PNG图像。为此，创建8位（或16位）4通道图像BGRA，其中alpha通道位于最后。完全透明像素的alpha值应设置为0，完全不透明像素的alpha值应设置为255/65535（请参见下面的代码示例）。"
  },
  {
    "origin": "Multiple images (vector of",
    "local": "多个图像（矢量"
  },
  {
    "origin": ") can be saved in TIFF format (see the code sample below).",
    "local": ")可以以TIFF格式保存（请参见下面的代码示例）。"
  },
  {
    "origin": "If the format, depth or channel order is different, use",
    "local": "如果格式、深度或频道顺序不同，请使用"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "to convert it before saving. Or, use the universal",
    "local": "保存前将其转换。或者，使用通用"
  },
  {
    "origin": "I/O functions to save the image to XML or YAML format.",
    "local": "I/O函数将图像保存为XML或YAML格式。"
  },
  {
    "origin": "The sample below shows how to create a BGRA image, how to set custom compression parameters and save it to a PNG file. It also demonstrates how to save multiple images in a TIFF file:",
    "local": "下面的示例演示如何创建BGRA图像，如何设置自定义压缩参数并将其保存到PNG文件。它还演示了如何在TIFF文件中保存多个图像："
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": "Name of the file.",
    "local": "文件名。"
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "or vector of",
    "local": "或向量"
  },
  {
    "origin": ") Image or Images to be saved.",
    "local": ")要保存的一个或多个图像。"
  },
  {
    "origin": "params",
    "local": "参数"
  },
  {
    "origin": "Format-specific parameters encoded as pairs (paramId_1, paramValue_1, paramId_2, paramValue_2, ... .) see",
    "local": "格式化成对编码的特定参数（paramId_1、paramValue_1、paramId_2、paramValue_2，…）看见"
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", and",
    "local": "，和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "imwritemulti()",
    "local": "imwritemulti（）"
  },
  {
    "origin": "static bool cv::imwritemulti",
    "local": "静态bool cv:：imwritemulti"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt; int &gt; &amp;",
    "local": "常量标准：：向量&lt；内部&gt&amp；"
  },
  {
    "origin": "params",
    "local": "参数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.imwritemulti(",
    "local": "简历imwritemulti("
  },
  {
    "origin": "filename, img[, params]",
    "local": "文件名，img[，params]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:40 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:40为OpenCV生成"
  }
]