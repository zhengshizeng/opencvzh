[
  {
    "origin": "OpenCV: cv::ShapeContextDistanceExtractor Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::ShapeContextDistanceExtractor Class Reference",
    "local": ""
  },
  {
    "origin": "abstract",
    "local": ""
  },
  {
    "origin": "Implementation of the Shape Context descriptor and matching algorithm.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Inheritance diagram for cv::ShapeContextDistanceExtractor:",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "virtual int",
    "local": ""
  },
  {
    "origin": "virtual float",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "virtual float",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "image1,",
    "local": ""
  },
  {
    "origin": "image2) const =0",
    "local": ""
  },
  {
    "origin": "virtual float",
    "local": ""
  },
  {
    "origin": "virtual int",
    "local": ""
  },
  {
    "origin": "virtual float",
    "local": ""
  },
  {
    "origin": "virtual int",
    "local": ""
  },
  {
    "origin": "virtual bool",
    "local": ""
  },
  {
    "origin": "virtual float",
    "local": ""
  },
  {
    "origin": "virtual float",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Establish the number of angular bins for the Shape Context Descriptor used in the shape matching pipeline.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Set the weight of the Bending Energy in the final value of the shape distance. The bending energy definition depends on what transformation is being used to align the shapes. The final value of the shape distance is a user-defined linear combination of the shape context distance, an image appearance distance, and a bending energy.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "Set the algorithm used for building the shape context descriptor cost matrix.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Set the weight of the Image Appearance cost in the final value of the shape distance. The image appearance cost is defined as the sum of squared brightness differences in Gaussian windows around corresponding image points. The final value of the shape distance is a user-defined linear combination of the shape context distance, an image appearance distance, and a bending energy. If this value is set to a number different from 0, is mandatory to set the images that correspond to each shape.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "image1,",
    "local": ""
  },
  {
    "origin": "image2)=0",
    "local": ""
  },
  {
    "origin": "Set the images that correspond to each shape. This images are used in the calculation of the Image Appearance cost.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Set the inner radius of the shape context descriptor.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Set the outer radius of the shape context descriptor.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Establish the number of radial bins for the Shape Context Descriptor used in the shape matching pipeline.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Set the weight of the shape context distance in the final value of the shape distance. The shape context distance between two shapes is defined as the symmetric sum of shape context matching costs over best matching points. The final value of the shape distance is a user-defined linear combination of the shape context distance, an image appearance distance, and a bending energy.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Set the value of the standard deviation for the Gaussian window for the image appearance cost.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "Set the algorithm used for aligning the shapes.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "virtual float",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "contour1,",
    "local": ""
  },
  {
    "origin": "contour2)=0",
    "local": ""
  },
  {
    "origin": "Compute the shape distance between two shapes defined by its contours.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Clears the algorithm state.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "Returns true if the",
    "local": ""
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;fn)",
    "local": ""
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;filename) const",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs) const",
    "local": ""
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name=",
    "local": ""
  },
  {
    "origin": "()) const",
    "local": ""
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Additional Inherited Members",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;filename, const",
    "local": ""
  },
  {
    "origin": "&amp;objname=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;strModel, const",
    "local": ""
  },
  {
    "origin": "&amp;objname=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;fn)",
    "local": ""
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs) const",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Implementation of the Shape Context descriptor and matching algorithm.",
    "local": ""
  },
  {
    "origin": "proposed by Belongie et al. in \"Shape Matching and Object Recognition Using Shape Contexts\" (PAMI 2002). This implementation is packaged in a generic scheme, in order to allow you the implementation of the common variations of the original pipeline.",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getAngularBins()",
    "local": ""
  },
  {
    "origin": "virtual int cv::ShapeContextDistanceExtractor::getAngularBins",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getAngularBins(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getBendingEnergyWeight()",
    "local": ""
  },
  {
    "origin": "virtual float cv::ShapeContextDistanceExtractor::getBendingEnergyWeight",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getBendingEnergyWeight(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getCostExtractor()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::ShapeContextDistanceExtractor::getCostExtractor",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getCostExtractor(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getImageAppearanceWeight()",
    "local": ""
  },
  {
    "origin": "virtual float cv::ShapeContextDistanceExtractor::getImageAppearanceWeight",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getImageAppearanceWeight(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getImages()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::getImages",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "image1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "image2",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "image1, image2",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getImages(",
    "local": ""
  },
  {
    "origin": "[, image1[, image2]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getInnerRadius()",
    "local": ""
  },
  {
    "origin": "virtual float cv::ShapeContextDistanceExtractor::getInnerRadius",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getInnerRadius(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getIterations()",
    "local": ""
  },
  {
    "origin": "virtual int cv::ShapeContextDistanceExtractor::getIterations",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getIterations(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getOuterRadius()",
    "local": ""
  },
  {
    "origin": "virtual float cv::ShapeContextDistanceExtractor::getOuterRadius",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getOuterRadius(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getRadialBins()",
    "local": ""
  },
  {
    "origin": "virtual int cv::ShapeContextDistanceExtractor::getRadialBins",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getRadialBins(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getRotationInvariant()",
    "local": ""
  },
  {
    "origin": "virtual bool cv::ShapeContextDistanceExtractor::getRotationInvariant",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getRotationInvariant(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getShapeContextWeight()",
    "local": ""
  },
  {
    "origin": "virtual float cv::ShapeContextDistanceExtractor::getShapeContextWeight",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getShapeContextWeight(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getStdDev()",
    "local": ""
  },
  {
    "origin": "virtual float cv::ShapeContextDistanceExtractor::getStdDev",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getStdDev(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getTransformAlgorithm()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::ShapeContextDistanceExtractor::getTransformAlgorithm",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.getTransformAlgorithm(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setAngularBins()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setAngularBins",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "nAngularBins",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setAngularBins(",
    "local": ""
  },
  {
    "origin": "nAngularBins",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Establish the number of angular bins for the Shape Context Descriptor used in the shape matching pipeline.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "nAngularBins",
    "local": ""
  },
  {
    "origin": "The number of angular bins in the shape context descriptor.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setBendingEnergyWeight()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setBendingEnergyWeight",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "bendingEnergyWeight",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setBendingEnergyWeight(",
    "local": ""
  },
  {
    "origin": "bendingEnergyWeight",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set the weight of the Bending Energy in the final value of the shape distance. The bending energy definition depends on what transformation is being used to align the shapes. The final value of the shape distance is a user-defined linear combination of the shape context distance, an image appearance distance, and a bending energy.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "bendingEnergyWeight",
    "local": ""
  },
  {
    "origin": "The weight of the Bending Energy in the final distance value.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setCostExtractor()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setCostExtractor",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "comparer",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setCostExtractor(",
    "local": ""
  },
  {
    "origin": "comparer",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set the algorithm used for building the shape context descriptor cost matrix.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "comparer",
    "local": ""
  },
  {
    "origin": "Smart pointer to a",
    "local": ""
  },
  {
    "origin": ", an algorithm that defines the cost matrix between descriptors.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setImageAppearanceWeight()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setImageAppearanceWeight",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "imageAppearanceWeight",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setImageAppearanceWeight(",
    "local": ""
  },
  {
    "origin": "imageAppearanceWeight",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set the weight of the Image Appearance cost in the final value of the shape distance. The image appearance cost is defined as the sum of squared brightness differences in Gaussian windows around corresponding image points. The final value of the shape distance is a user-defined linear combination of the shape context distance, an image appearance distance, and a bending energy. If this value is set to a number different from 0, is mandatory to set the images that correspond to each shape.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "imageAppearanceWeight",
    "local": ""
  },
  {
    "origin": "The weight of the appearance cost in the final distance value.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setImages()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setImages",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "image1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "image2",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setImages(",
    "local": ""
  },
  {
    "origin": "image1, image2",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set the images that correspond to each shape. This images are used in the calculation of the Image Appearance cost.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "image1",
    "local": ""
  },
  {
    "origin": "Image corresponding to the shape defined by contours1.",
    "local": ""
  },
  {
    "origin": "image2",
    "local": ""
  },
  {
    "origin": "Image corresponding to the shape defined by contours2.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setInnerRadius()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setInnerRadius",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "innerRadius",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setInnerRadius(",
    "local": ""
  },
  {
    "origin": "innerRadius",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set the inner radius of the shape context descriptor.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "innerRadius",
    "local": ""
  },
  {
    "origin": "The value of the inner radius.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setIterations()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setIterations",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "iterations",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setIterations(",
    "local": ""
  },
  {
    "origin": "iterations",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setOuterRadius()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setOuterRadius",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "outerRadius",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setOuterRadius(",
    "local": ""
  },
  {
    "origin": "outerRadius",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set the outer radius of the shape context descriptor.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "outerRadius",
    "local": ""
  },
  {
    "origin": "The value of the outer radius.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setRadialBins()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setRadialBins",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "nRadialBins",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setRadialBins(",
    "local": ""
  },
  {
    "origin": "nRadialBins",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Establish the number of radial bins for the Shape Context Descriptor used in the shape matching pipeline.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "nRadialBins",
    "local": ""
  },
  {
    "origin": "The number of radial bins in the shape context descriptor.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setRotationInvariant()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setRotationInvariant",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "rotationInvariant",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setRotationInvariant(",
    "local": ""
  },
  {
    "origin": "rotationInvariant",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setShapeContextWeight()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setShapeContextWeight",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "shapeContextWeight",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setShapeContextWeight(",
    "local": ""
  },
  {
    "origin": "shapeContextWeight",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set the weight of the shape context distance in the final value of the shape distance. The shape context distance between two shapes is defined as the symmetric sum of shape context matching costs over best matching points. The final value of the shape distance is a user-defined linear combination of the shape context distance, an image appearance distance, and a bending energy.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "shapeContextWeight",
    "local": ""
  },
  {
    "origin": "The weight of the shape context distance in the final distance value.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setStdDev()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setStdDev",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "sigma",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setStdDev(",
    "local": ""
  },
  {
    "origin": "sigma",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set the value of the standard deviation for the Gaussian window for the image appearance cost.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "sigma",
    "local": ""
  },
  {
    "origin": "Standard Deviation.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setTransformAlgorithm()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ShapeContextDistanceExtractor::setTransformAlgorithm",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "transformer",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ShapeContextDistanceExtractor.setTransformAlgorithm(",
    "local": ""
  },
  {
    "origin": "transformer",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set the algorithm used for aligning the shapes.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "transformer",
    "local": ""
  },
  {
    "origin": "Smart pointer to a",
    "local": ""
  },
  {
    "origin": ", an algorithm that defines the aligning transformation.",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/shape/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by",
    "local": ""
  }
]