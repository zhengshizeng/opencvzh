[
  {
    "origin": "OpenCV: Color Space Conversions",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "Color Space Conversions",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= COLOR_BGR2BGRA,",
    "local": ""
  },
  {
    "origin": "= COLOR_BGRA2BGR,",
    "local": ""
  },
  {
    "origin": "= COLOR_BGR2RGBA,",
    "local": ""
  },
  {
    "origin": "= COLOR_RGBA2BGR,",
    "local": ""
  },
  {
    "origin": "= COLOR_BGR2RGB,",
    "local": ""
  },
  {
    "origin": "= COLOR_BGRA2RGBA,",
    "local": ""
  },
  {
    "origin": "= COLOR_GRAY2BGR,",
    "local": ""
  },
  {
    "origin": "= COLOR_GRAY2BGRA,",
    "local": ""
  },
  {
    "origin": "= 13,",
    "local": ""
  },
  {
    "origin": "= 14,",
    "local": ""
  },
  {
    "origin": "= 15,",
    "local": ""
  },
  {
    "origin": "= 16,",
    "local": ""
  },
  {
    "origin": "= 17,",
    "local": ""
  },
  {
    "origin": "= 18,",
    "local": ""
  },
  {
    "origin": "= 19,",
    "local": ""
  },
  {
    "origin": "= 20,",
    "local": ""
  },
  {
    "origin": "= 21,",
    "local": ""
  },
  {
    "origin": "= 22,",
    "local": ""
  },
  {
    "origin": "= 23,",
    "local": ""
  },
  {
    "origin": "= 24,",
    "local": ""
  },
  {
    "origin": "= 25,",
    "local": ""
  },
  {
    "origin": "= 26,",
    "local": ""
  },
  {
    "origin": "= 27,",
    "local": ""
  },
  {
    "origin": "= 28,",
    "local": ""
  },
  {
    "origin": "= 29,",
    "local": ""
  },
  {
    "origin": "= 30,",
    "local": ""
  },
  {
    "origin": "= 31,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGB_NV21,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGR_NV21,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGBA_NV21,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGRA_NV21,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGB_IYUV,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGR_IYUV,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGB_YV12,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGR_YV12,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGBA_IYUV,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGRA_IYUV,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGBA_YV12,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGRA_YV12,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_420,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_420,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_420,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_420,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_420,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_420,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_420,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGB_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGR_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGB_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGR_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGBA_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGRA_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGBA_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGRA_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGB_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGR_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGB_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGR_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGBA_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGRA_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2RGBA_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2BGRA_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_UYVY,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_YUV2GRAY_YUY2,",
    "local": ""
  },
  {
    "origin": "= COLOR_RGB2YUV_I420,",
    "local": ""
  },
  {
    "origin": "= COLOR_BGR2YUV_I420,",
    "local": ""
  },
  {
    "origin": "= COLOR_RGBA2YUV_I420,",
    "local": ""
  },
  {
    "origin": "= COLOR_BGRA2YUV_I420,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerRG2BGR,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerGR2BGR,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerBG2BGR,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerGB2BGR,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerRG2BGR_VNG,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerGR2BGR_VNG,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerBG2BGR_VNG,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerGB2BGR_VNG,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerRG2BGR_EA,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerGR2BGR_EA,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerBG2BGR_EA,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerGB2BGR_EA,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerRG2BGRA,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerGR2BGRA,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerBG2BGRA,",
    "local": ""
  },
  {
    "origin": "= COLOR_BayerGB2BGRA,",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src,",
    "local": ""
  },
  {
    "origin": "dst, int code, int dstCn=0)",
    "local": ""
  },
  {
    "origin": "Converts an image from one color space to another.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src1,",
    "local": ""
  },
  {
    "origin": "src2,",
    "local": ""
  },
  {
    "origin": "dst, int code)",
    "local": ""
  },
  {
    "origin": "Converts an image from one color space to another where the source image is stored in two planes.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src,",
    "local": ""
  },
  {
    "origin": "dst, int code, int dstCn=0)",
    "local": ""
  },
  {
    "origin": "main function for all demosaicing processes",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Enumeration Type Documentation",
    "local": ""
  },
  {
    "origin": "â—†",
    "local": ""
  },
  {
    "origin": "ColorConversionCodes",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "the color conversion codes",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2BGRA",
    "local": ""
  },
  {
    "origin": "add alpha channel to RGB or BGR image",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_BGRA2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGRA2BGR",
    "local": ""
  },
  {
    "origin": "remove alpha channel from RGB or BGR image",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2RGBA",
    "local": ""
  },
  {
    "origin": "convert between RGB and BGR color spaces (with or without alpha channel)",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_BGRA2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGRA2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_BGRA2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGRA2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2GRAY",
    "local": ""
  },
  {
    "origin": "convert between RGB/BGR and grayscale,",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_GRAY2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_GRAY2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_GRAY2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_GRAY2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_GRAY2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_GRAY2BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_GRAY2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_GRAY2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_BGRA2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGRA2GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2BGR565",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2BGR565",
    "local": ""
  },
  {
    "origin": "convert between RGB/BGR and BGR565 (16-bit images)",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2BGR565",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2BGR565",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5652BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5652BGR",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5652RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5652RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BGRA2BGR565",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGRA2BGR565",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2BGR565",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2BGR565",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5652BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5652BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5652RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5652RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_GRAY2BGR565",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_GRAY2BGR565",
    "local": ""
  },
  {
    "origin": "convert between grayscale to BGR565 (16-bit images)",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5652GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5652GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2BGR555",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2BGR555",
    "local": ""
  },
  {
    "origin": "convert between RGB/BGR and BGR555 (16-bit images)",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2BGR555",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2BGR555",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5552BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5552BGR",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5552RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5552RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BGRA2BGR555",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGRA2BGR555",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2BGR555",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2BGR555",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5552BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5552BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5552RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5552RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_GRAY2BGR555",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_GRAY2BGR555",
    "local": ""
  },
  {
    "origin": "convert between grayscale and BGR555 (16-bit images)",
    "local": ""
  },
  {
    "origin": "COLOR_BGR5552GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR5552GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2XYZ",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2XYZ",
    "local": ""
  },
  {
    "origin": "convert RGB/BGR to CIE XYZ,",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2XYZ",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2XYZ",
    "local": ""
  },
  {
    "origin": "COLOR_XYZ2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_XYZ2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_XYZ2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_XYZ2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2YCrCb",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2YCrCb",
    "local": ""
  },
  {
    "origin": "convert RGB/BGR to luma-chroma (aka YCC),",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2YCrCb",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2YCrCb",
    "local": ""
  },
  {
    "origin": "COLOR_YCrCb2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YCrCb2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_YCrCb2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YCrCb2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2HSV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2HSV",
    "local": ""
  },
  {
    "origin": "convert RGB/BGR to HSV (hue saturation value) with H range 0..180 if 8 bit image,",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2HSV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2HSV",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2Lab",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2Lab",
    "local": ""
  },
  {
    "origin": "convert RGB/BGR to CIE Lab,",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2Lab",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2Lab",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2Luv",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2Luv",
    "local": ""
  },
  {
    "origin": "convert RGB/BGR to CIE Luv,",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2Luv",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2Luv",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2HLS",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2HLS",
    "local": ""
  },
  {
    "origin": "convert RGB/BGR to HLS (hue lightness saturation) with H range 0..180 if 8 bit image,",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2HLS",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2HLS",
    "local": ""
  },
  {
    "origin": "COLOR_HSV2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_HSV2BGR",
    "local": ""
  },
  {
    "origin": "backward conversions HSV to RGB/BGR with H range 0..180 if 8 bit image",
    "local": ""
  },
  {
    "origin": "COLOR_HSV2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_HSV2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_Lab2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_Lab2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_Lab2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_Lab2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_Luv2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_Luv2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_Luv2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_Luv2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_HLS2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_HLS2BGR",
    "local": ""
  },
  {
    "origin": "backward conversions HLS to RGB/BGR with H range 0..180 if 8 bit image",
    "local": ""
  },
  {
    "origin": "COLOR_HLS2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_HLS2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2HSV_FULL",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2HSV_FULL",
    "local": ""
  },
  {
    "origin": "convert RGB/BGR to HSV (hue saturation value) with H range 0..255 if 8 bit image,",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2HSV_FULL",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2HSV_FULL",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2HLS_FULL",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2HLS_FULL",
    "local": ""
  },
  {
    "origin": "convert RGB/BGR to HLS (hue lightness saturation) with H range 0..255 if 8 bit image,",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2HLS_FULL",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2HLS_FULL",
    "local": ""
  },
  {
    "origin": "COLOR_HSV2BGR_FULL",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_HSV2BGR_FULL",
    "local": ""
  },
  {
    "origin": "backward conversions HSV to RGB/BGR with H range 0..255 if 8 bit image",
    "local": ""
  },
  {
    "origin": "COLOR_HSV2RGB_FULL",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_HSV2RGB_FULL",
    "local": ""
  },
  {
    "origin": "COLOR_HLS2BGR_FULL",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_HLS2BGR_FULL",
    "local": ""
  },
  {
    "origin": "backward conversions HLS to RGB/BGR with H range 0..255 if 8 bit image",
    "local": ""
  },
  {
    "origin": "COLOR_HLS2RGB_FULL",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_HLS2RGB_FULL",
    "local": ""
  },
  {
    "origin": "COLOR_LBGR2Lab",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_LBGR2Lab",
    "local": ""
  },
  {
    "origin": "COLOR_LRGB2Lab",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_LRGB2Lab",
    "local": ""
  },
  {
    "origin": "COLOR_LBGR2Luv",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_LBGR2Luv",
    "local": ""
  },
  {
    "origin": "COLOR_LRGB2Luv",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_LRGB2Luv",
    "local": ""
  },
  {
    "origin": "COLOR_Lab2LBGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_Lab2LBGR",
    "local": ""
  },
  {
    "origin": "COLOR_Lab2LRGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_Lab2LRGB",
    "local": ""
  },
  {
    "origin": "COLOR_Luv2LBGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_Luv2LBGR",
    "local": ""
  },
  {
    "origin": "COLOR_Luv2LRGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_Luv2LRGB",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2YUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2YUV",
    "local": ""
  },
  {
    "origin": "convert between RGB/BGR and YUV",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2YUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2YUV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_NV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_NV12",
    "local": ""
  },
  {
    "origin": "YUV 4:2:0 family to RGB.",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_NV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_NV12",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_NV21",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_NV21",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_NV21",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_NV21",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420sp2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420sp2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420sp2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420sp2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_NV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_NV12",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_NV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_NV12",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_NV21",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_NV21",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_NV21",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_NV21",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420sp2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420sp2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420sp2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420sp2BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_YV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_YV12",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_YV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_YV12",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_IYUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_IYUV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_IYUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_IYUV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_I420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_I420",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_I420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_I420",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420p2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420p2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420p2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420p2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_YV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_YV12",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_YV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_YV12",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_IYUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_IYUV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_IYUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_IYUV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_I420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_I420",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_I420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_I420",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420p2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420p2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420p2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420p2BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_420",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_NV21",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_NV21",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_NV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_NV12",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_YV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_YV12",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_IYUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_IYUV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_I420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_I420",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420sp2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420sp2GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_YUV420p2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV420p2GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_UYVY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_UYVY",
    "local": ""
  },
  {
    "origin": "YUV 4:2:2 family to RGB.",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_UYVY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_UYVY",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_Y422",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_Y422",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_Y422",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_Y422",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_UYNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_UYNV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_UYNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_UYNV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_UYVY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_UYVY",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_UYVY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_UYVY",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_Y422",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_Y422",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_Y422",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_Y422",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_UYNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_UYNV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_UYNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_UYNV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_YUY2",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_YUY2",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_YUY2",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_YUY2",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_YVYU",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_YVYU",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_YVYU",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_YVYU",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_YUYV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_YUYV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_YUYV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_YUYV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGB_YUNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGB_YUNV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGR_YUNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGR_YUNV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_YUY2",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_YUY2",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_YUY2",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_YUY2",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_YVYU",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_YVYU",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_YVYU",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_YVYU",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_YUYV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_YUYV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_YUYV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_YUYV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2RGBA_YUNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2RGBA_YUNV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2BGRA_YUNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2BGRA_YUNV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_UYVY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_UYVY",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_YUY2",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_YUY2",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_Y422",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_Y422",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_UYNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_UYNV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_YVYU",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_YVYU",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_YUYV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_YUYV",
    "local": ""
  },
  {
    "origin": "COLOR_YUV2GRAY_YUNV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_YUV2GRAY_YUNV",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2mRGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2mRGBA",
    "local": ""
  },
  {
    "origin": "alpha premultiplication",
    "local": ""
  },
  {
    "origin": "COLOR_mRGBA2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_mRGBA2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2YUV_I420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2YUV_I420",
    "local": ""
  },
  {
    "origin": "RGB to YUV 4:2:0 family.",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2YUV_I420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2YUV_I420",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2YUV_IYUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2YUV_IYUV",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2YUV_IYUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2YUV_IYUV",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2YUV_I420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2YUV_I420",
    "local": ""
  },
  {
    "origin": "COLOR_BGRA2YUV_I420",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGRA2YUV_I420",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2YUV_IYUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2YUV_IYUV",
    "local": ""
  },
  {
    "origin": "COLOR_BGRA2YUV_IYUV",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGRA2YUV_IYUV",
    "local": ""
  },
  {
    "origin": "COLOR_RGB2YUV_YV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGB2YUV_YV12",
    "local": ""
  },
  {
    "origin": "COLOR_BGR2YUV_YV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGR2YUV_YV12",
    "local": ""
  },
  {
    "origin": "COLOR_RGBA2YUV_YV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_RGBA2YUV_YV12",
    "local": ""
  },
  {
    "origin": "COLOR_BGRA2YUV_YV12",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BGRA2YUV_YV12",
    "local": ""
  },
  {
    "origin": "COLOR_BayerBG2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerBG2BGR",
    "local": ""
  },
  {
    "origin": "Demosaicing.",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGB2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGB2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_BayerRG2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerRG2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGR2BGR",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGR2BGR",
    "local": ""
  },
  {
    "origin": "COLOR_BayerBG2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerBG2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGB2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGB2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BayerRG2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerRG2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGR2RGB",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGR2RGB",
    "local": ""
  },
  {
    "origin": "COLOR_BayerBG2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerBG2GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGB2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGB2GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_BayerRG2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerRG2GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGR2GRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGR2GRAY",
    "local": ""
  },
  {
    "origin": "COLOR_BayerBG2BGR_VNG",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerBG2BGR_VNG",
    "local": ""
  },
  {
    "origin": "Demosaicing using Variable Number of Gradients.",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGB2BGR_VNG",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGB2BGR_VNG",
    "local": ""
  },
  {
    "origin": "COLOR_BayerRG2BGR_VNG",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerRG2BGR_VNG",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGR2BGR_VNG",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGR2BGR_VNG",
    "local": ""
  },
  {
    "origin": "COLOR_BayerBG2RGB_VNG",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerBG2RGB_VNG",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGB2RGB_VNG",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGB2RGB_VNG",
    "local": ""
  },
  {
    "origin": "COLOR_BayerRG2RGB_VNG",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerRG2RGB_VNG",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGR2RGB_VNG",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGR2RGB_VNG",
    "local": ""
  },
  {
    "origin": "COLOR_BayerBG2BGR_EA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerBG2BGR_EA",
    "local": ""
  },
  {
    "origin": "Edge-Aware Demosaicing.",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGB2BGR_EA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGB2BGR_EA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerRG2BGR_EA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerRG2BGR_EA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGR2BGR_EA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGR2BGR_EA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerBG2RGB_EA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerBG2RGB_EA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGB2RGB_EA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGB2RGB_EA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerRG2RGB_EA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerRG2RGB_EA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGR2RGB_EA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGR2RGB_EA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerBG2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerBG2BGRA",
    "local": ""
  },
  {
    "origin": "Demosaicing with alpha channel.",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGB2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGB2BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerRG2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerRG2BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGR2BGRA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGR2BGRA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerBG2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerBG2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGB2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGB2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerRG2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerRG2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_BayerGR2RGBA",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_BayerGR2RGBA",
    "local": ""
  },
  {
    "origin": "COLOR_COLORCVT_MAX",
    "local": ""
  },
  {
    "origin": "Python: cv.COLOR_COLORCVT_MAX",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "â—†",
    "local": ""
  },
  {
    "origin": "cvtColor()",
    "local": ""
  },
  {
    "origin": "void cv::cvtColor",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "code",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "dstCn",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cvtColor(",
    "local": ""
  },
  {
    "origin": "src, code[, dst[, dstCn]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Converts an image from one color space to another.",
    "local": ""
  },
  {
    "origin": "The function converts an input image from one color space to another. In case of a transformation to-from RGB color space, the order of the channels should be specified explicitly (RGB or BGR). Note that the default color format in OpenCV is often referred to as RGB but it is actually BGR (the bytes are reversed). So the first byte in a standard (24-bit) color image will be an 8-bit Blue component, the second byte will be Green, and the third byte will be Red. The fourth, fifth, and sixth bytes would then be the second pixel (Blue, then Green, then Red), and so on.",
    "local": ""
  },
  {
    "origin": "The conventional ranges for R, G, and B channel values are:",
    "local": ""
  },
  {
    "origin": "0 to 255 for CV_8U images",
    "local": ""
  },
  {
    "origin": "0 to 65535 for CV_16U images",
    "local": ""
  },
  {
    "origin": "0 to 1 for CV_32F images",
    "local": ""
  },
  {
    "origin": "In case of linear transformations, the range does not matter. But in case of a non-linear transformation, an input RGB image should be normalized to the proper value range to get the correct results, for example, for RGB \\(\\rightarrow\\) L*u*v* transformation. For example, if you have a 32-bit floating-point image directly converted from an 8-bit image without any scaling, then it will have the 0..255 value range instead of 0..1 assumed by the function. So, before calling",
    "local": ""
  },
  {
    "origin": ", you need first to scale the image down:",
    "local": ""
  },
  {
    "origin": "If you use",
    "local": ""
  },
  {
    "origin": "with 8-bit images, the conversion will have some information lost. For many applications, this will not be noticeable but it is recommended to use 32-bit images in applications that need the full range of colors or that convert an image before an operation and then convert back.",
    "local": ""
  },
  {
    "origin": "If conversion adds the alpha channel, its value will set to the maximum of corresponding channel range: 255 for CV_8U, 65535 for CV_16U, 1 for CV_32F.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": "input image: 8-bit unsigned, 16-bit unsigned ( CV_16UC... ), or single-precision floating-point.",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "output image of the same size and depth as src.",
    "local": ""
  },
  {
    "origin": "code",
    "local": ""
  },
  {
    "origin": "color space conversion code (see",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "dstCn",
    "local": ""
  },
  {
    "origin": "number of channels in the destination image; if the parameter is 0, the number of the channels is derived automatically from src and code.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "Examples:",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ", and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "â—†",
    "local": ""
  },
  {
    "origin": "cvtColorTwoPlane()",
    "local": ""
  },
  {
    "origin": "void cv::cvtColorTwoPlane",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "code",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cvtColorTwoPlane(",
    "local": ""
  },
  {
    "origin": "src1, src2, code[, dst]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Converts an image from one color space to another where the source image is stored in two planes.",
    "local": ""
  },
  {
    "origin": "This function only supports YUV420 to RGB conversion as of now.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "src1",
    "local": ""
  },
  {
    "origin": "8-bit image (",
    "local": ""
  },
  {
    "origin": ") of the Y plane.",
    "local": ""
  },
  {
    "origin": "src2",
    "local": ""
  },
  {
    "origin": "image containing interleaved U/V plane.",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "output image.",
    "local": ""
  },
  {
    "origin": "code",
    "local": ""
  },
  {
    "origin": "Specifies the type of conversion. It can take any of the following values:",
    "local": ""
  },
  {
    "origin": "â—†",
    "local": ""
  },
  {
    "origin": "demosaicing()",
    "local": ""
  },
  {
    "origin": "void cv::demosaicing",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "code",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "dstCn",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.demosaicing(",
    "local": ""
  },
  {
    "origin": "src, code[, dst[, dstCn]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "main function for all demosaicing processes",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": "input image: 8-bit unsigned or 16-bit unsigned.",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "output image of the same size and depth as src.",
    "local": ""
  },
  {
    "origin": "code",
    "local": ""
  },
  {
    "origin": "Color space conversion code (see the description below).",
    "local": ""
  },
  {
    "origin": "dstCn",
    "local": ""
  },
  {
    "origin": "number of channels in the destination image; if the parameter is 0, the number of the channels is derived automatically from src and code.",
    "local": ""
  },
  {
    "origin": "The function can do the following transformations:",
    "local": ""
  },
  {
    "origin": "Demosaicing using bilinear interpolation",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "Demosaicing using Variable Number of Gradients.",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "Edge-Aware Demosaicing.",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "Demosaicing with alpha channel",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:40 for OpenCV by",
    "local": ""
  }
]