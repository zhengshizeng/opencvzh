[
  {
    "origin": "OpenCV: Background Subtraction",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Background Subtraction",
    "local": ""
  },
  {
    "origin": "Goal",
    "local": ""
  },
  {
    "origin": "In this chapter,",
    "local": ""
  },
  {
    "origin": "We will familiarize with the background subtraction methods available in OpenCV.",
    "local": ""
  },
  {
    "origin": "Basics",
    "local": ""
  },
  {
    "origin": "Background subtraction is a major preprocessing step in many vision-based applications. For example, consider the case of a visitor counter where a static camera takes the number of visitors entering or leaving the room, or a traffic camera extracting information about the vehicles etc. In all these cases, first you need to extract the person or vehicles alone. Technically, you need to extract the moving foreground from static background.",
    "local": ""
  },
  {
    "origin": "If you have an image of background alone, like an image of the room without visitors, image of the road without vehicles etc, it is an easy job. Just subtract the new image from the background. You get the foreground objects alone. But in most of the cases, you may not have such an image, so we need to extract the background from whatever images we have. It becomes more complicated when there are shadows of the vehicles. Since shadows also move, simple subtraction will mark that also as foreground. It complicates things.",
    "local": ""
  },
  {
    "origin": "Several algorithms were introduced for this purpose. In the following, we will have a look at two algorithms from the",
    "local": ""
  },
  {
    "origin": "module.",
    "local": ""
  },
  {
    "origin": "BackgroundSubtractorMOG",
    "local": ""
  },
  {
    "origin": "It is a Gaussian Mixture-based Background/Foreground Segmentation Algorithm. It was introduced in the paper \"An improved adaptive background mixture model for real-time tracking with shadow detection\" by P. KadewTraKuPong and R. Bowden in 2001. It uses a method to model each background pixel by a mixture of K Gaussian distributions (K = 3 to 5). The weights of the mixture represent the time proportions that those colours stay in the scene. The probable background colours are the ones which stay longer and more static.",
    "local": ""
  },
  {
    "origin": "While coding, we need to create a background object using the function,",
    "local": ""
  },
  {
    "origin": ". It has some optional parameters like length of history, number of gaussian mixtures, threshold etc. It is all set to some default values. Then inside the video loop, use backgroundsubtractor.apply() method to get the foreground mask.",
    "local": ""
  },
  {
    "origin": "See a simple example below:",
    "local": ""
  },
  {
    "origin": "( All the results are shown at the end for comparison).",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Documentation on the newer method",
    "local": ""
  },
  {
    "origin": "can be found here:",
    "local": ""
  },
  {
    "origin": "BackgroundSubtractorGMG",
    "local": ""
  },
  {
    "origin": "This algorithm combines statistical background image estimation and per-pixel Bayesian segmentation. It was introduced by Andrew B. Godbehere, Akihiro Matsukawa, and Ken Goldberg in their paper \"Visual Tracking of Human Visitors under Variable-Lighting Conditions for a Responsive Audio Art Installation\" in 2012. As per the paper, the system ran a successful interactive audio art installation called “Are We There Yet?” from March 31 - July 31 2011 at the Contemporary Jewish Museum in San Francisco, California.",
    "local": ""
  },
  {
    "origin": "It uses first few (120 by default) frames for background modelling. It employs probabilistic foreground segmentation algorithm that identifies possible foreground objects using Bayesian inference. The estimates are adaptive; newer observations are more heavily weighted than old observations to accommodate variable illumination. Several morphological filtering operations like closing and opening are done to remove unwanted noise. You will get a black window during first few frames.",
    "local": ""
  },
  {
    "origin": "It would be better to apply morphological opening to the result to remove the noises.",
    "local": ""
  },
  {
    "origin": "Results",
    "local": ""
  },
  {
    "origin": "Original Frame",
    "local": ""
  },
  {
    "origin": "Below image shows the 200th frame of a video",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "Result of BackgroundSubtractorMOG",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "Result of BackgroundSubtractorGMG",
    "local": ""
  },
  {
    "origin": "Noise is removed with morphological opening.",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "Additional Resources",
    "local": ""
  },
  {
    "origin": "Exercises",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:38 for OpenCV by &#160;",
    "local": ""
  }
]