[
  {
    "origin": "OpenCV: cv::dnn_superres::DnnSuperResImpl Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::dnn_superres::DnnSuperResImpl Class Reference",
    "local": ""
  },
  {
    "origin": "A class to upscale images via convolutional neural networks. The following four models are implemented:",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Empty constructor.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;algo, int scale)",
    "local": ""
  },
  {
    "origin": "Constructor which immediately sets the desired model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Returns the scale factor of the model:",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Returns the scale factor of the model:",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;path)",
    "local": ""
  },
  {
    "origin": "Read the model from the given path.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;weights, const",
    "local": ""
  },
  {
    "origin": "&amp;definition)",
    "local": ""
  },
  {
    "origin": "Read the model from the given path.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;algo, int scale)",
    "local": ""
  },
  {
    "origin": "Set desired model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(int backendId)",
    "local": ""
  },
  {
    "origin": "Set computation backend.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(int targetId)",
    "local": ""
  },
  {
    "origin": "Set computation target.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img,",
    "local": ""
  },
  {
    "origin": "result)",
    "local": ""
  },
  {
    "origin": "Upsample via neural network.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;imgs_new, const std::vector&lt; int &gt; &amp;scale_factors, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;node_names)",
    "local": ""
  },
  {
    "origin": "Upsample via neural network of multiple outputs.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Empty constructor for python.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "A class to upscale images via convolutional neural networks. The following four models are implemented:",
    "local": ""
  },
  {
    "origin": "edsr",
    "local": ""
  },
  {
    "origin": "espcn",
    "local": ""
  },
  {
    "origin": "fsrcnn",
    "local": ""
  },
  {
    "origin": "lapsrn",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "DnnSuperResImpl()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "cv::dnn_superres::DnnSuperResImpl::DnnSuperResImpl",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Empty constructor.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "DnnSuperResImpl()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "cv::dnn_superres::DnnSuperResImpl::DnnSuperResImpl",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "algo",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Constructor which immediately sets the desired model.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "algo",
    "local": ""
  },
  {
    "origin": "String containing one of the desired models:",
    "local": ""
  },
  {
    "origin": "edsr",
    "local": ""
  },
  {
    "origin": "espcn",
    "local": ""
  },
  {
    "origin": "fsrcnn",
    "local": ""
  },
  {
    "origin": "lapsrn",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "Integer specifying the upscale factor",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "create()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::dnn_superres::DnnSuperResImpl::create",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres.DnnSuperResImpl_create(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Empty constructor for python.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getAlgorithm()",
    "local": ""
  },
  {
    "origin": "cv::dnn_superres::DnnSuperResImpl::getAlgorithm",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres_DnnSuperResImpl.getAlgorithm(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the scale factor of the model:",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "Current algorithm.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getScale()",
    "local": ""
  },
  {
    "origin": "int cv::dnn_superres::DnnSuperResImpl::getScale",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres_DnnSuperResImpl.getScale(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the scale factor of the model:",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "Current scale factor.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "readModel()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "void cv::dnn_superres::DnnSuperResImpl::readModel",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "path",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres_DnnSuperResImpl.readModel(",
    "local": ""
  },
  {
    "origin": "path",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Read the model from the given path.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "path",
    "local": ""
  },
  {
    "origin": "Path to the model file.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "readModel()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "void cv::dnn_superres::DnnSuperResImpl::readModel",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "weights",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "definition",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres_DnnSuperResImpl.readModel(",
    "local": ""
  },
  {
    "origin": "path",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Read the model from the given path.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "weights",
    "local": ""
  },
  {
    "origin": "Path to the model weights file.",
    "local": ""
  },
  {
    "origin": "definition",
    "local": ""
  },
  {
    "origin": "Path to the model definition file.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setModel()",
    "local": ""
  },
  {
    "origin": "void cv::dnn_superres::DnnSuperResImpl::setModel",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "algo",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres_DnnSuperResImpl.setModel(",
    "local": ""
  },
  {
    "origin": "algo, scale",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set desired model.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "algo",
    "local": ""
  },
  {
    "origin": "String containing one of the desired models:",
    "local": ""
  },
  {
    "origin": "edsr",
    "local": ""
  },
  {
    "origin": "espcn",
    "local": ""
  },
  {
    "origin": "fsrcnn",
    "local": ""
  },
  {
    "origin": "lapsrn",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "Integer specifying the upscale factor",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setPreferableBackend()",
    "local": ""
  },
  {
    "origin": "void cv::dnn_superres::DnnSuperResImpl::setPreferableBackend",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "backendId",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres_DnnSuperResImpl.setPreferableBackend(",
    "local": ""
  },
  {
    "origin": "backendId",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set computation backend.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setPreferableTarget()",
    "local": ""
  },
  {
    "origin": "void cv::dnn_superres::DnnSuperResImpl::setPreferableTarget",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "targetId",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres_DnnSuperResImpl.setPreferableTarget(",
    "local": ""
  },
  {
    "origin": "targetId",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Set computation target.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "upsample()",
    "local": ""
  },
  {
    "origin": "void cv::dnn_superres::DnnSuperResImpl::upsample",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "result",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "result",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres_DnnSuperResImpl.upsample(",
    "local": ""
  },
  {
    "origin": "img[, result]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Upsample via neural network.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "Image to upscale",
    "local": ""
  },
  {
    "origin": "result",
    "local": ""
  },
  {
    "origin": "Destination upscaled image",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "upsampleMultioutput()",
    "local": ""
  },
  {
    "origin": "void cv::dnn_superres::DnnSuperResImpl::upsampleMultioutput",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "imgs_new",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt; int &gt; &amp;",
    "local": ""
  },
  {
    "origin": "scale_factors",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "node_names",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.dnn_superres_DnnSuperResImpl.upsampleMultioutput(",
    "local": ""
  },
  {
    "origin": "img, imgs_new, scale_factors, node_names",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Upsample via neural network of multiple outputs.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "Image to upscale",
    "local": ""
  },
  {
    "origin": "imgs_new",
    "local": ""
  },
  {
    "origin": "Destination upscaled images",
    "local": ""
  },
  {
    "origin": "scale_factors",
    "local": ""
  },
  {
    "origin": "Scaling factors of the output nodes",
    "local": ""
  },
  {
    "origin": "node_names",
    "local": ""
  },
  {
    "origin": "Names of the output nodes in the neural network",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by",
    "local": ""
  }
]