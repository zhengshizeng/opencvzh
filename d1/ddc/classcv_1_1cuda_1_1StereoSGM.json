[
  {
    "origin": "OpenCV: cv::cuda::StereoSGM Class Reference",
    "local": "OpenCV:cv:：cuda:：stereosg类引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::cuda::StereoSGM Class Reference",
    "local": "cv:：cuda:：stereosg类引用"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "&raquo;",
    "local": "&引用；"
  },
  {
    "origin": "The class implements the modified H. Hirschmuller algorithm",
    "local": "类实现了修改后的H。赫氏算法"
  },
  {
    "origin": ". Limitation and difference are as follows:",
    "local": ". 限制和区别如下："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::cuda::StereoSGM:",
    "local": "cv:：cuda:：stereosg的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "left,",
    "local": "左边，"
  },
  {
    "origin": "right,",
    "local": "正确的，"
  },
  {
    "origin": "disparity)",
    "local": "差距）"
  },
  {
    "origin": "Computes disparity map for the specified stereo pair.",
    "local": "计算指定立体对的视差贴图。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "left,",
    "local": "左边，"
  },
  {
    "origin": "right,",
    "local": "正确的，"
  },
  {
    "origin": "disparity,",
    "local": "差距，"
  },
  {
    "origin": "Computes disparity map with specified CUDA",
    "local": "使用指定的CUDA计算视差图"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "&#160;Public Types inherited from",
    "local": "&#160;继承自的公共类型"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "&#160;Public Types inherited from",
    "local": "&#160;继承自的公共类型"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "= (1 &lt;&lt; DISP_SHIFT)",
    "local": "=（1&lt；）信息技术；显示（u移位）"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": "&#160;继承自的静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "(int minDisparity=0, int numDisparities=16, int blockSize=3, int P1=0, int P2=0, int disp12MaxDiff=0, int preFilterCap=0, int uniquenessRatio=0, int speckleWindowSize=0, int speckleRange=0, int mode=",
    "local": "（int minDisparity=0，int numDisparities=16，int blockSize=3，int P1=0，int P2=0，int disp12MaxDiff=0，int preFilterCap=0，int uniquenessRatio=0，int spoklewindowsize=0，int spoklerange=0，int mode）="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Creates",
    "local": "创建"
  },
  {
    "origin": "object.",
    "local": "对象。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": "&#160;继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Protected Member Functions inherited from",
    "local": "&#160;继承自的受保护成员函数"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "The class implements the modified H. Hirschmuller algorithm",
    "local": "类实现了修改后的H。赫氏算法"
  },
  {
    "origin": ". Limitation and difference are as follows:",
    "local": ". 限制和区别如下："
  },
  {
    "origin": "By default, the algorithm uses only 4 directions which are horizontal and vertical path instead of 8. Set mode=",
    "local": "默认情况下，该算法只使用4个方向，即水平和垂直路径，而不是8.Set模式="
  },
  {
    "origin": "in createStereoSGM to run the full variant of the algorithm.",
    "local": "在createStereoSGM中运行算法的完整变体。"
  },
  {
    "origin": "Mutual Information cost function is not implemented. Instead, Center-Symmetric Census Transform with \\(9 \\times 7\\) window size from",
    "local": "互信息成本函数未实现。取而代之的是，从"
  },
  {
    "origin": "is used for robustness.",
    "local": "用于健壮性。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "compute()",
    "local": "计算（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "virtual void cv::cuda::StereoSGM::compute",
    "local": "虚拟void cv:：cuda:：stereosg:：compute"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "left",
    "local": "左边"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "right",
    "local": "正确的"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "disparity",
    "local": "差距"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Computes disparity map for the specified stereo pair.",
    "local": "计算指定立体对的视差贴图。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "left",
    "local": "左边"
  },
  {
    "origin": "Left 8-bit or 16-bit unsigned single-channel image.",
    "local": "左8位或16位无符号单通道图像。"
  },
  {
    "origin": "right",
    "local": "正确的"
  },
  {
    "origin": "Right image of the same size and the same type as the left one.",
    "local": "与左图像大小和类型相同的右图像。"
  },
  {
    "origin": "disparity",
    "local": "差距"
  },
  {
    "origin": "Output disparity map. It has the same size as the input images.",
    "local": "输出视差图。它与输入图像的大小相同。"
  },
  {
    "origin": "computes 16-bit fixed-point disparity map (where each disparity value has 4 fractional bits).",
    "local": "计算16位定点视差图（其中每个视差值有4个分数位）。"
  },
  {
    "origin": "Implements",
    "local": "工具"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "compute()",
    "local": "计算（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "virtual void cv::cuda::StereoSGM::compute",
    "local": "虚拟void cv:：cuda:：stereosg:：compute"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "left",
    "local": "左边"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "right",
    "local": "正确的"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "disparity",
    "local": "差距"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Computes disparity map with specified CUDA",
    "local": "使用指定的CUDA计算视差图"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:44 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:44为OpenCV生成，&#160；"
  }
]