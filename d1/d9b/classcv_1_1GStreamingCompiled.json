[
  {
    "origin": "OpenCV: cv::GStreamingCompiled Class Reference",
    "local": "OpenCV:cv:：GStreamingCompiled类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::GStreamingCompiled Class Reference",
    "local": "cv:：GStreamingCompiled类引用"
  },
  {
    "origin": "»",
    "local": "»"
  },
  {
    "origin": "Represents a computation (graph) compiled for streaming.",
    "local": "表示为流式处理编译的计算（图形）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Vector of metadata this graph was compiled for.",
    "local": "此图是为其编译的元数据向量。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Check if compiled object is valid (non-empty)",
    "local": "检查编译对象是否有效（非空）"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Vector of metadata descriptions of graph outputs.",
    "local": "图形输出的元数据描述向量。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;outs)",
    "local": "&amp&amp；出局）"
  },
  {
    "origin": "Get the next processed frame from the pipeline.",
    "local": "从管道中获取下一个已处理的帧。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;outs)",
    "local": "&amp&amp；出局）"
  },
  {
    "origin": "Get some next available data from the pipeline.",
    "local": "从管道中获取下一个可用数据。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Test if the pipeline is running.",
    "local": "测试管道是否运行。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;ins)",
    "local": "&amp&amp；保险公司）"
  },
  {
    "origin": "Specify the input data to",
    "local": "指定要保存的输入数据"
  },
  {
    "origin": "for processing, a generic version.",
    "local": "对于处理，一个通用版本。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;s)",
    "local": "&amp；秒）"
  },
  {
    "origin": "Specify an input video stream for a single-input computation pipeline.",
    "local": "为单个输入计算管道指定输入视频流。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename T , typename... Args&gt;",
    "local": "模板&lt；键入T，键入名称。。。Args&gt；"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(Args &amp;&amp;... args)",
    "local": "（Args和&amp；。。。参数）"
  },
  {
    "origin": "Constructs and specifies an input video stream for a single-input computation pipeline with the given parameters.",
    "local": "使用给定参数为单个输入计算管道构造并指定输入视频流。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Start the pipeline execution.",
    "local": "启动管道执行。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Stop (abort) processing the pipeline.",
    "local": "停止（中止）处理管道。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;outs)",
    "local": "&amp&amp；出局）"
  },
  {
    "origin": "Try to get the next processed frame from the pipeline.",
    "local": "尝试从管道中获取下一个已处理的帧。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Represents a computation (graph) compiled for streaming.",
    "local": "表示为流式处理编译的计算（图形）。"
  },
  {
    "origin": "This class represents a product of graph compilation (calling",
    "local": "此类表示图形编译（调用"
  },
  {
    "origin": "). Objects of this class actually do stream processing, and the whole pipeline execution complexity is incapsulated into objects of this class. Execution model has two levels: at the very top, the execution of a heterogeneous graph is aggressively pipelined; at the very bottom the execution of every internal block is determined by its associated backend. Backends are selected based on kernel packages passed via compilation arguments ( see",
    "local": "). 这个类的对象实际上是做流处理的，整个管道执行的复杂性都被压缩到这个类的对象中。执行模型有两个层次：在最顶层，异类图的执行是主动流水线的；在最底层，每个内部块的执行由其关联的后端决定。后端是根据通过编译参数传递的内核包来选择的（请参阅"
  },
  {
    "origin": ", GNetworkPackage, GKernelPackage for details).",
    "local": "，GNetworkPackage，GKernelPackage了解详细信息）。"
  },
  {
    "origin": "objects have a \"player\" semantics – there are methods like",
    "local": "对象有一个“player”语义-有如下方法"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "has a full control over a videostream and so is stateful. You need to specify the input stream data using",
    "local": "拥有对视频流的完全控制权，因此是有状态的。您需要使用"
  },
  {
    "origin": "and then call",
    "local": "然后打电话"
  },
  {
    "origin": "to actually start processing. After that, use pull() or",
    "local": "开始处理。之后，使用pull（）或"
  },
  {
    "origin": "to obtain next processed data frame from the graph in a blocking or non-blocking way, respectively.",
    "local": "分别以分块或非分块的方式从图形中获取下一个经过处理的数据帧。"
  },
  {
    "origin": "Currently a single",
    "local": "目前只有一个"
  },
  {
    "origin": "can process only one video streat at time. Produce multiple",
    "local": "一次只能处理一个视频。产生多个"
  },
  {
    "origin": "objects to run the same graph on multiple video streams.",
    "local": "对象在多个视频流上运行同一图形。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "GStreamingCompiled()",
    "local": "GStreamingCompiled（）"
  },
  {
    "origin": "cv::GStreamingCompiled::GStreamingCompiled",
    "local": "简历：：GStreamingCompiled：：GStreamingCompiled"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "&lt;GStreamingCompiled object&gt;",
    "local": "&lt；GStreamingCompiled对象&gt；"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled(",
    "local": "简历GStreamingCompiled("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "metas()",
    "local": "目标（）"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp; cv::GStreamingCompiled::metas",
    "local": "&amp；cv:：GStreamingCompiled:：metas已编译"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "Vector of metadata this graph was compiled for.",
    "local": "此图是为其编译的元数据向量。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "Unless",
    "local": "除非"
  },
  {
    "origin": "reshape",
    "local": "重塑"
  },
  {
    "origin": "is not supported, return value is the same vector which was passed to",
    "local": "不支持，返回值与传递给的向量相同"
  },
  {
    "origin": "to produce this compiled object. Otherwise, it is the latest metadata vector passed to reshape() (if that call was successful).",
    "local": "生成此编译对象。否则，它是传递给reforme（）的最新元数据向量（如果调用成功）。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "operator bool()",
    "local": "运算符bool（）"
  },
  {
    "origin": "cv::GStreamingCompiled::operator bool",
    "local": "cv:：GStreamingCompiled:：运算符bool"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "Check if compiled object is valid (non-empty)",
    "local": "检查编译对象是否有效（非空）"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "true if the object is runnable (valid), false otherwise",
    "local": "如果对象是可运行的（有效），则为true，否则为false"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "outMetas()",
    "local": "Metaouts（）"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp; cv::GStreamingCompiled::outMetas",
    "local": "&amp；cv:：GStreamingCompiled:：outMetas"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "Vector of metadata descriptions of graph outputs.",
    "local": "图形输出的元数据描述向量。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "vector with formats/resolutions of graph's output objects, auto-inferred from input metadata vector by operations which form this computation.",
    "local": "具有图形输出对象格式/分辨率的向量，通过形成此计算的操作从输入元数据向量自动推断。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "objects produced from the same cv::GComputiation graph with different input metas may return different values in this vector.",
    "local": "从具有不同输入元的同一cv：：G计算图生成的对象可能在此向量中返回不同的值。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "pull()",
    "local": "拉（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "bool cv::GStreamingCompiled::pull",
    "local": "bool cv：：GStreamingCompiled：：拉"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;",
    "local": "&amp&amp；"
  },
  {
    "origin": "outs",
    "local": "出局"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.pull(",
    "local": "cv.GStreamingCompiled.pull型("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Get the next processed frame from the pipeline.",
    "local": "从管道中获取下一个已处理的帧。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "to create an output parameter vector.",
    "local": "创建输出参数向量。"
  },
  {
    "origin": "Output vectors must have the same number of elements as defined in the",
    "local": "输出向量的元素数必须与"
  },
  {
    "origin": "protocol (at the moment of its construction). Shapes of elements also must conform to protocol (e.g.",
    "local": "协议（在构建时）。元素的形状也必须符合协议（例如。"
  },
  {
    "origin": "needs to be passed where",
    "local": "需要经过哪里"
  },
  {
    "origin": "has been declared as output, and so on). Run-time exception is generated on type mismatch.",
    "local": "已声明为输出，以此类推）。类型不匹配时生成运行时异常。"
  },
  {
    "origin": "This method writes new data into objects passed via output vector. If there is no data ready yet, this method blocks. Use",
    "local": "此方法将新数据写入通过输出向量传递的对象。如果尚未准备好数据，则此方法将阻塞。使用"
  },
  {
    "origin": "if you need a non-blocking version.",
    "local": "如果你需要一个非阻塞版本。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "outs",
    "local": "出局"
  },
  {
    "origin": "vector of output parameters to obtain.",
    "local": "获取输出参数向量。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "true if next result has been obtained, false marks end of the stream.",
    "local": "如果获得下一个结果，则为true，为false将标记流的结束。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "pull()",
    "local": "拉（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "bool cv::GStreamingCompiled::pull",
    "local": "bool cv：：GStreamingCompiled：：拉"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;",
    "local": "&amp&amp；"
  },
  {
    "origin": "outs",
    "local": "出局"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.pull(",
    "local": "cv.GStreamingCompiled.pull型("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Get some next available data from the pipeline.",
    "local": "从管道中获取下一个可用数据。"
  },
  {
    "origin": "This method takes a vector of",
    "local": "此方法采用"
  },
  {
    "origin": "object. An object is assigned to some value if this value is available (ready) at the time of the call, and resets the object to empty() if it is not.",
    "local": "对象。如果某个值在调用时可用（就绪），则将该对象指定给该值，如果不可用，则将该对象重置为empty（）。"
  },
  {
    "origin": "This is a blocking method which guarantees that some data has been written to the output vector on return.",
    "local": "这是一种阻塞方法，它保证在返回时将一些数据写入输出向量。"
  },
  {
    "origin": "Using this method only makes sense if the graph has desynchronized parts (see cv::gapi::desync). If there is no desynchronized parts in the graph, the behavior of this method is identical to the regular pull() (all data objects are produced synchronously in the output vector).",
    "local": "使用此方法只有在图形具有取消同步的部分时才有意义（请参见cv:：gapi:：desync）。如果图中没有取消同步的部分，则此方法的行为与常规pull（）相同（所有数据对象都在输出向量中同步生成）。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "to create an output parameter vector.",
    "local": "创建输出参数向量。"
  },
  {
    "origin": "Output vectors must have the same number of elements as defined in the",
    "local": "输出向量的元素数必须与"
  },
  {
    "origin": "protocol (at the moment of its construction). Shapes of elements also must conform to protocol (e.g.",
    "local": "协议（在构建时）。元素的形状也必须符合协议（例如。"
  },
  {
    "origin": "needs to be passed where",
    "local": "需要经过哪里"
  },
  {
    "origin": "has been declared as output, and so on). Run-time exception is generated on type mismatch.",
    "local": "已声明为输出，以此类推）。类型不匹配时生成运行时异常。"
  },
  {
    "origin": "This method writes new data into objects passed via output vector. If there is no data ready yet, this method blocks. Use",
    "local": "此方法将新数据写入通过输出向量传递的对象。如果尚未准备好数据，则此方法将阻塞。使用"
  },
  {
    "origin": "if you need a non-blocking version.",
    "local": "如果你需要一个非阻塞版本。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "outs",
    "local": "出局"
  },
  {
    "origin": "vector of output parameters to obtain.",
    "local": "获取输出参数向量。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "true if next result has been obtained, false marks end of the stream.",
    "local": "如果获得下一个结果，则为true，为false将标记流的结束。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "cv::gapi::desync",
    "local": "cv:：gapi:：去同步"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "running()",
    "local": "正在运行（）"
  },
  {
    "origin": "bool cv::GStreamingCompiled::running",
    "local": "bool cv：：GStreamingCompiled：：正在运行"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.running(",
    "local": "cv.GStreamingCompiled.running运行("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Test if the pipeline is running.",
    "local": "测试管道是否运行。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "This method is not thread-safe (with respect to the user side) at the moment. Protect the access if",
    "local": "这个方法目前不是线程安全的（相对于用户端）。如果需要，请保护通道"
  },
  {
    "origin": "/stop()/setSource() may be called on the same object in multiple threads in your application.",
    "local": "/可以在应用程序的多个线程中对同一对象调用stop（）/setSource（）。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "true if the current stream is not over yet.",
    "local": "如果当前流尚未结束，则为true。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setSource()",
    "local": "设置源（）"
  },
  {
    "origin": "[1/3]",
    "local": "[1/3]"
  },
  {
    "origin": "void cv::GStreamingCompiled::setSource",
    "local": "void cv:：GStreamingCompiled:：setSource"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;",
    "local": "&amp&amp；"
  },
  {
    "origin": "ins",
    "local": "ins公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.setSource(",
    "local": "cv.GStreamingCompiled.setSource文件("
  },
  {
    "origin": "callback",
    "local": "回拨"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.setSource(",
    "local": "cv.GStreamingCompiled.setSource文件("
  },
  {
    "origin": "s",
    "local": "s"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Specify the input data to",
    "local": "指定要保存的输入数据"
  },
  {
    "origin": "for processing, a generic version.",
    "local": "对于处理，一个通用版本。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "to create an input parameter vector.",
    "local": "创建输入参数向量。"
  },
  {
    "origin": "Input vectors must have the same number of elements as defined in the",
    "local": "输入向量的元素数必须与"
  },
  {
    "origin": "protocol (at the moment of its construction). Shapes of elements also must conform to protocol (e.g.",
    "local": "协议（在构建时）。元素的形状也必须符合协议（例如。"
  },
  {
    "origin": "needs to be passed where",
    "local": "需要经过哪里"
  },
  {
    "origin": "has been declared as input, and so on). Run-time exception is generated on type mismatch.",
    "local": "已声明为输入，以此类推）。类型不匹配时生成运行时异常。"
  },
  {
    "origin": "In contrast with regular",
    "local": "与常规相比"
  },
  {
    "origin": ", user can also pass an object of type GVideoCapture for a",
    "local": "，用户还可以为"
  },
  {
    "origin": "parameter of the parent",
    "local": "父级的参数"
  },
  {
    "origin": ". The compiled pipeline will start fetching data from that GVideoCapture and feeding it into the pipeline. Pipeline stops when a GVideoCapture marks end of the stream (or when",
    "local": ". 编译后的管道将开始从该GVideoCapture获取数据并将其送入管道。当GVideoCapture标记流结束时（或"
  },
  {
    "origin": "is called).",
    "local": "称为）。"
  },
  {
    "origin": "Passing a regular",
    "local": "通过常规考试"
  },
  {
    "origin": "for a",
    "local": "为了一个"
  },
  {
    "origin": "parameter makes it \"infinite\" source – pipeline may run forever feeding with this",
    "local": "参数使其成为“无限”源-管道可能永远运行，并与此一起馈电"
  },
  {
    "origin": "until stopped explicitly.",
    "local": "直到明确停止。"
  },
  {
    "origin": "Currently only a single GVideoCapture is supported as input. If the parent",
    "local": "目前只支持单个GVideoCapture作为输入。如果父母"
  },
  {
    "origin": "is declared with multiple input",
    "local": "用多个输入声明"
  },
  {
    "origin": "'s, one of those can be specified as GVideoCapture but all others must be regular",
    "local": "的，其中一个可以指定为GVideoCapture，但所有其他必须是常规的"
  },
  {
    "origin": "objects.",
    "local": "物体。"
  },
  {
    "origin": "Throws if pipeline is already running. Use",
    "local": "如果管道已在运行，则引发。使用"
  },
  {
    "origin": "and then",
    "local": "然后"
  },
  {
    "origin": "to run the graph on a new video stream.",
    "local": "在新的视频流上运行图形。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "This method is not thread-safe (with respect to the user side) at the moment. Protect the access if",
    "local": "这个方法目前不是线程安全的（相对于用户端）。如果需要，请保护通道"
  },
  {
    "origin": "/stop()/setSource() may be called on the same object in multiple threads in your application.",
    "local": "/可以在应用程序的多个线程中对同一对象调用stop（）/setSource（）。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "ins",
    "local": "ins公司"
  },
  {
    "origin": "vector of inputs to process.",
    "local": "要处理的输入向量。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setSource()",
    "local": "设置源（）"
  },
  {
    "origin": "[2/3]",
    "local": "[2/3]"
  },
  {
    "origin": "void cv::GStreamingCompiled::setSource",
    "local": "void cv:：GStreamingCompiled:：setSource"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "s",
    "local": "s"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.setSource(",
    "local": "cv.GStreamingCompiled.setSource文件("
  },
  {
    "origin": "callback",
    "local": "回拨"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.setSource(",
    "local": "cv.GStreamingCompiled.setSource文件("
  },
  {
    "origin": "s",
    "local": "s"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Specify an input video stream for a single-input computation pipeline.",
    "local": "为单个输入计算管道指定输入视频流。"
  },
  {
    "origin": "Throws if pipeline is already running. Use",
    "local": "如果管道已在运行，则引发。使用"
  },
  {
    "origin": "and then",
    "local": "然后"
  },
  {
    "origin": "to run the graph on a new video stream.",
    "local": "在新的视频流上运行图形。"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "s",
    "local": "s"
  },
  {
    "origin": "a shared pointer to IStreamSource representing the input video stream.",
    "local": "指向表示输入视频流的IStreamSource的共享指针。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setSource()",
    "local": "设置源（）"
  },
  {
    "origin": "[3/3]",
    "local": "[3/3]"
  },
  {
    "origin": "template&lt;typename T , typename... Args&gt;",
    "local": "模板&lt；键入T，键入名称。。。Args&gt；"
  },
  {
    "origin": "void cv::GStreamingCompiled::setSource",
    "local": "void cv:：GStreamingCompiled:：setSource"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Args &amp;&amp;...",
    "local": "参数（&A）&amp；。。。"
  },
  {
    "origin": "args",
    "local": "愤怒"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.setSource(",
    "local": "cv.GStreamingCompiled.setSource文件("
  },
  {
    "origin": "callback",
    "local": "回拨"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.setSource(",
    "local": "cv.GStreamingCompiled.setSource文件("
  },
  {
    "origin": "s",
    "local": "s"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Constructs and specifies an input video stream for a single-input computation pipeline with the given parameters.",
    "local": "使用给定参数为单个输入计算管道构造并指定输入视频流。"
  },
  {
    "origin": "Throws if pipeline is already running. Use",
    "local": "如果管道已在运行，则引发。使用"
  },
  {
    "origin": "and then",
    "local": "然后"
  },
  {
    "origin": "to run the graph on a new video stream.",
    "local": "在新的视频流上运行图形。"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "args",
    "local": "愤怒"
  },
  {
    "origin": "arguments used to contruct and initialize a stream source.",
    "local": "用于构造和初始化流源的参数。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "start()",
    "local": "开始（）"
  },
  {
    "origin": "void cv::GStreamingCompiled::start",
    "local": "void cv:：GStreamingCompiled:：start"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.start(",
    "local": "cv.GStreamingCompiled.start文件("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Start the pipeline execution.",
    "local": "启动管道执行。"
  },
  {
    "origin": "Use pull()/try_pull() to obtain data. Throws an exception if a video source was not specified.",
    "local": "使用pull（）/尝试\\u pull（）获取数据。如果未指定视频源，则引发异常。"
  },
  {
    "origin": "must be called first, even if the pipeline has been working already and then stopped (explicitly via",
    "local": "必须首先调用，即使管道已经工作，然后停止（显式地通过"
  },
  {
    "origin": "or due stream completion)",
    "local": "或由于流完成）"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "This method is not thread-safe (with respect to the user side) at the moment. Protect the access if",
    "local": "这个方法目前不是线程安全的（相对于用户端）。如果需要，请保护通道"
  },
  {
    "origin": "/stop()/setSource() may be called on the same object in multiple threads in your application.",
    "local": "/可以在应用程序的多个线程中对同一对象调用stop（）/setSource（）。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "stop()",
    "local": "停止（）"
  },
  {
    "origin": "void cv::GStreamingCompiled::stop",
    "local": "void cv:：GStreamingCompiled:：停止"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.GStreamingCompiled.stop(",
    "local": "cv.GStreamingCompiled.stop停止("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Stop (abort) processing the pipeline.",
    "local": "停止（中止）处理管道。"
  },
  {
    "origin": "Note - it is not pause but a complete stop. Calling",
    "local": "注意-这不是暂停，而是完全停止。打电话"
  },
  {
    "origin": "will cause G-API to start processing the stream from the early beginning.",
    "local": "将导致G-API从一开始就开始处理流。"
  },
  {
    "origin": "Throws if the pipeline is not running.",
    "local": "如果管道未运行，则抛出。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "try_pull()",
    "local": "试试拉（）"
  },
  {
    "origin": "bool cv::GStreamingCompiled::try_pull",
    "local": "bool cv：：GStreamingCompiled：：尝试拉"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;",
    "local": "&amp&amp；"
  },
  {
    "origin": "outs",
    "local": "出局"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Try to get the next processed frame from the pipeline.",
    "local": "尝试从管道中获取下一个已处理的帧。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "to create an output parameter vector.",
    "local": "创建输出参数向量。"
  },
  {
    "origin": "This method writes new data into objects passed via output vector. If there is no data ready yet, the output vector remains unchanged and false is returned.",
    "local": "此方法将新数据写入通过输出向量传递的对象。如果还没有准备好数据，则输出向量保持不变，并返回false。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "true if data has been obtained, and false if it was not. Note: false here doesn't mark the end of the stream.",
    "local": "如果已获得数据，则为true；如果未获得数据，则为false。注意：这里的false并不表示流的结束。"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/gapi/",
    "local": "开放式CV2/gapi/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:43为OpenCV生成"
  }
]