[
  {
    "origin": "OpenCV: cv::ml::EM Class Reference",
    "local": "OpenCV:cv:：ml:：EM类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::ml::EM Class Reference",
    "local": "cv:：ml:：EM类引用"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "The class implements the Expectation Maximization algorithm.",
    "local": "类实现了期望最大化算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::ml::EM:",
    "local": "cv:：ml:：EM的继承关系图："
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Default parameters.",
    "local": "默认参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "The initial step.",
    "local": "第一步。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "=COV_MAT_DIAGONAL",
    "local": "=COV-u MAT-u对角线"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Type of covariation matrices.",
    "local": "协变矩阵的类型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Types inherited from",
    "local": "继承自的公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(std::vector&lt;",
    "local": "（标准：：向量&lt；"
  },
  {
    "origin": "Returns covariation matrices.",
    "local": "返回协变矩阵。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Returns the cluster centers (means of the Gaussian mixture)",
    "local": "返回簇中心（高斯混合的平均值）"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Returns weights of the mixtures.",
    "local": "返回混合物的重量。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples,",
    "local": "样品，"
  },
  {
    "origin": "results=",
    "local": "结果="
  },
  {
    "origin": "(), int flags=0) const",
    "local": "（），int flags=0）常量"
  },
  {
    "origin": "Returns posterior probabilities for the provided samples.",
    "local": "返回所提供样本的后验概率。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "sample,",
    "local": "样品，"
  },
  {
    "origin": "Returns a likelihood logarithm value and an index of the most probable mixture component for the given sample.",
    "local": "返回给定样本的似然对数值和最可能的混合成分指数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples,",
    "local": "样品，"
  },
  {
    "origin": "means0,",
    "local": "意思是，"
  },
  {
    "origin": "covs0=",
    "local": "covs0型="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "weights0=",
    "local": "重量0="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "logLikelihoods=",
    "local": "很可能="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "labels=",
    "local": "标签="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "probs=",
    "local": "问题="
  },
  {
    "origin": "Estimate the Gaussian mixture parameters from a samples set.",
    "local": "从样本集估计高斯混合参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples,",
    "local": "样品，"
  },
  {
    "origin": "logLikelihoods=",
    "local": "很可能="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "labels=",
    "local": "标签="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "probs=",
    "local": "问题="
  },
  {
    "origin": "Estimate the Gaussian mixture parameters from a samples set.",
    "local": "从样本集估计高斯混合参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples,",
    "local": "样品，"
  },
  {
    "origin": "probs0,",
    "local": "问题0，"
  },
  {
    "origin": "logLikelihoods=",
    "local": "很可能="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "labels=",
    "local": "标签="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "probs=",
    "local": "问题="
  },
  {
    "origin": "Estimate the Gaussian mixture parameters from a samples set.",
    "local": "从样本集估计高斯混合参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;data, bool test,",
    "local": "&gt；gt；amp；数据，布尔测试，"
  },
  {
    "origin": "resp) const",
    "local": "（负责）施工"
  },
  {
    "origin": "Computes error on the training or test dataset.",
    "local": "计算训练或测试数据集上的错误。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "Returns the number of variables in training samples.",
    "local": "返回训练样本中的变量数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "Returns true if the model is classifier.",
    "local": "如果模型是分类器，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "Returns true if the model is trained.",
    "local": "如果模型经过训练，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;trainData, int flags=0)",
    "local": "&gt；gt；amp；列车数据，int标志=0）"
  },
  {
    "origin": "Trains the statistical model.",
    "local": "训练统计模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples, int layout,",
    "local": "样本，int布局，"
  },
  {
    "origin": "responses)",
    "local": "答复）"
  },
  {
    "origin": "Trains the statistical model.",
    "local": "训练统计模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filepath, const",
    "local": "&amp；常量文件路径"
  },
  {
    "origin": "&amp;nodeName=",
    "local": "&amp；节点"
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads and creates a serialized",
    "local": "加载并创建序列化的"
  },
  {
    "origin": "from a file.",
    "local": "从一个文件。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;data, int flags=0)",
    "local": "&燃气轮机&amp；数据，int标志=0）"
  },
  {
    "origin": "Create and train model with default parameters.",
    "local": "使用默认参数创建和训练模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "The class implements the Expectation Maximization algorithm.",
    "local": "类实现了期望最大化算法。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": "成员枚举文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "Default parameters.",
    "local": "默认参数。"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "DEFAULT_NCLUSTERS",
    "local": "默认\\n群集"
  },
  {
    "origin": "DEFAULT_MAX_ITERS",
    "local": "默认\\u最大\\u ITERS"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "The initial step.",
    "local": "第一步。"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "START_E_STEP",
    "local": "开始\\u E \\u步骤"
  },
  {
    "origin": "START_M_STEP",
    "local": "开始\\M\\u步骤"
  },
  {
    "origin": "START_AUTO_STEP",
    "local": "开始自动步骤"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "Types",
    "local": "类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "Type of covariation matrices.",
    "local": "协变矩阵的类型。"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "COV_MAT_SPHERICAL",
    "local": "球形外壳"
  },
  {
    "origin": "A scaled identity matrix \\(\\mu_k * I\\). There is the only parameter \\(\\mu_k\\) to be estimated for each matrix. The option may be used in special cases, when the constraint is relevant, or as a first step in the optimization (for example in case when the data is preprocessed with",
    "local": "标度单位矩阵\\（\\mu\\u k*I\\）。每个矩阵只有一个参数\\（\\mu\\u k\\）需要估计。该选项可在特殊情况下使用，当约束相关时，或作为优化的第一步（例如，当使用"
  },
  {
    "origin": "). The results of such preliminary estimation may be passed again to the optimization procedure, this time with covMatType=",
    "local": "). 这种初步估计的结果可能会再次传递给优化程序，这次使用covMatType="
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "COV_MAT_DIAGONAL",
    "local": "COV-u MAT-u对角线"
  },
  {
    "origin": "A diagonal matrix with positive diagonal elements. The number of free parameters is d for each matrix. This is most commonly used option yielding good estimation results.",
    "local": "具有正对角元素的对角矩阵。每个矩阵的自由参数个数为d。这是最常用的选择产生良好的估计结果。"
  },
  {
    "origin": "COV_MAT_GENERIC",
    "local": "COV-u MAT-u通用"
  },
  {
    "origin": "A symmetric positively defined matrix. The number of free parameters in each matrix is about \\(d^2/2\\). It is not recommended to use this option, unless there is pretty accurate initial estimation of the parameters and/or a huge number of training samples.",
    "local": "对称的正定矩阵。每个矩阵中自由参数的数目约为\\（d^2/2\\）。不建议使用此选项，除非对参数和/或大量训练样本有相当准确的初始估计。"
  },
  {
    "origin": "COV_MAT_DEFAULT",
    "local": "COV-u MAT-u默认值"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::ml::EM::create",
    "local": "&燃气轮机；cv:：ml:：EM:：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml.EM_create(",
    "local": "cv.ml.EM\\u创建("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Creates empty EM model. The model should be trained then using StatModel::train(traindata, flags) method. Alternatively, you can use one of the",
    "local": "创建空EM模型。然后应该使用StatModel：：train（traindata，flags）方法对模型进行训练。或者，您可以使用"
  },
  {
    "origin": "* methods or load it from file using",
    "local": "*方法或使用"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;(filename).",
    "local": "&燃气轮机(文件名）。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getClustersNumber()",
    "local": "getClustersNumber（）"
  },
  {
    "origin": "virtual int cv::ml::EM::getClustersNumber",
    "local": "虚拟int cv:：ml:：EM:：getClustersNumber"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.getClustersNumber(",
    "local": "简历("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "The number of mixture components in the Gaussian mixture model. Default value of the parameter is",
    "local": "高斯混合模型中混合成分的数量。参数的默认值为"
  },
  {
    "origin": "=5. Some of EM implementation could determine the optimal number of mixtures within a specified value range, but that is not the case in ML yet.",
    "local": "=5.一些EM实现可以在指定的值范围内确定最佳混合数，但在ML中还不是这样。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getCovarianceMatrixType()",
    "local": "getCovariaceMatrix类型（）"
  },
  {
    "origin": "virtual int cv::ml::EM::getCovarianceMatrixType",
    "local": "虚拟int cv:：ml:：EM:：GetCovariaceMatrix类型"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.getCovarianceMatrixType(",
    "local": "CV.ml EM.GetCovariaceMatrix类型("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Constraint on covariance matrices which defines type of matrices. See",
    "local": "定义矩阵类型的协方差矩阵的约束。看到了吗"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getCovs()",
    "local": "getCovs（）"
  },
  {
    "origin": "virtual void cv::ml::EM::getCovs",
    "local": "虚拟void cv:：ml:：EM:：getCovs"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "covs",
    "local": "covs公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "covs",
    "local": "covs公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.getCovs(",
    "local": "CV.ml EM.getCovs公司("
  },
  {
    "origin": "[, covs]",
    "local": "[男]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns covariation matrices.",
    "local": "返回协变矩阵。"
  },
  {
    "origin": "Returns vector of covariation matrices. Number of matrices is the number of gaussian mixtures, each matrix is a square floating-point matrix NxN, where N is the space dimensionality.",
    "local": "返回协变矩阵的向量。矩阵个数是高斯混合数，每个矩阵是一个平方浮点矩阵NxN，其中N是空间维数。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMeans()",
    "local": "getMeans（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::EM::getMeans",
    "local": "cv:：ml:：EM:：getMeans方法"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.getMeans(",
    "local": "cv.ml\\ EM.getMeans公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns the cluster centers (means of the Gaussian mixture)",
    "local": "返回簇中心（高斯混合的平均值）"
  },
  {
    "origin": "Returns matrix with the number of rows equal to the number of mixtures and number of columns equal to the space dimensionality.",
    "local": "返回行数等于混合数、列数等于空间维数的矩阵。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getTermCriteria()",
    "local": "getTermCriteria（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::EM::getTermCriteria",
    "local": "cv:：ml:：EM:：getTermCriteria条件"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.getTermCriteria(",
    "local": "cv.ml.EM.Getterm标准("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "The termination criteria of the EM algorithm. The EM algorithm can be terminated by the number of iterations termCrit.maxCount (number of M-steps) or when relative change of likelihood logarithm is less than termCrit.epsilon. Default maximum number of iterations is",
    "local": "EM算法的终止准则。EM算法可以通过迭代次数termCrit.maxCount（M步数）终止，或者当似然对数的相对变化小于termCrit.epsilon时终止。默认最大迭代次数为"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getWeights()",
    "local": "获取权重（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::EM::getWeights",
    "local": "cv:：ml:：EM:：获取权重"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.getWeights(",
    "local": "cv.ml\\ EM.getWeights公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns weights of the mixtures.",
    "local": "返回混合物的重量。"
  },
  {
    "origin": "Returns vector with the number of elements equal to the number of mixtures.",
    "local": "返回元素数等于混合数的向量。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "load()",
    "local": "加载（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::ml::EM::load",
    "local": "&燃气轮机；cv:：ml:：EM:：加载"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filepath",
    "local": "文件路径"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "nodeName",
    "local": "节点"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml.EM_load(",
    "local": "cv.ml.EM\\u负载("
  },
  {
    "origin": "filepath[, nodeName]",
    "local": "文件路径[，节点名]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Loads and creates a serialized",
    "local": "加载并创建序列化的"
  },
  {
    "origin": "from a file.",
    "local": "从一个文件。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "to serialize and store an",
    "local": "序列化和存储"
  },
  {
    "origin": "to disk. Load the",
    "local": "到磁盘。加载"
  },
  {
    "origin": "from this file again, by calling this function with the path to the file. Optionally specify the node for the file containing the classifier",
    "local": "再次从这个文件，通过调用这个函数和文件的路径。（可选）为包含分类器的文件指定节点"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filepath",
    "local": "文件路径"
  },
  {
    "origin": "path to serialized",
    "local": "序列化的路径"
  },
  {
    "origin": "nodeName",
    "local": "节点"
  },
  {
    "origin": "name of node containing the classifier",
    "local": "包含分类器的节点的名称"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "predict()",
    "local": "预测（）"
  },
  {
    "origin": "virtual float cv::ml::EM::predict",
    "local": "虚拟浮点cv:：ml:：EM:：predict"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "results",
    "local": "结果"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, results",
    "local": "检索，结果"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.predict(",
    "local": "变异系数("
  },
  {
    "origin": "samples[, results[, flags]]",
    "local": "样本[，结果[，标志]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns posterior probabilities for the provided samples.",
    "local": "返回所提供样本的后验概率。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": "The input samples, floating-point matrix",
    "local": "输入样本，浮点矩阵"
  },
  {
    "origin": "results",
    "local": "结果"
  },
  {
    "origin": "The optional output \\( nSamples \\times nClusters\\) matrix of results. It contains posterior probabilities for each sample from the input",
    "local": "结果的可选输出\\（nSamples\\times nClusters\\）矩阵。它包含来自输入的每个样本的后验概率"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "This parameter will be ignored",
    "local": "此参数将被忽略"
  },
  {
    "origin": "Implements",
    "local": "工具"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "predict2()",
    "local": "预测2（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::EM::predict2",
    "local": "cv：：ml：：EM：：predict2"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "sample",
    "local": "样品"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "probs",
    "local": "试验"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, probs",
    "local": "返回，问题"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.predict2(",
    "local": "简历2("
  },
  {
    "origin": "sample[, probs]",
    "local": "样品[，探针]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns a likelihood logarithm value and an index of the most probable mixture component for the given sample.",
    "local": "返回给定样本的似然对数值和最可能的混合成分指数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "sample",
    "local": "样品"
  },
  {
    "origin": "A sample for classification. It should be a one-channel matrix of \\(1 \\times dims\\) or \\(dims \\times 1\\) size.",
    "local": "分类的样本。它应该是一个大小为\\（1\\times dims\\）或\\（dims\\times 1\\）的单通道矩阵。"
  },
  {
    "origin": "probs",
    "local": "试验"
  },
  {
    "origin": "Optional output matrix that contains posterior probabilities of each component given the sample. It has \\(1 \\times nclusters\\) size and CV_64FC1 type.",
    "local": "包含给定样本的每个分量的后验概率的可选输出矩阵。它有\\（1\\timenclusters\\）大小和cv64fc1类型。"
  },
  {
    "origin": "The method returns a two-element double vector. Zero element is a likelihood logarithm value for the sample. First element is an index of the most probable mixture component for the given sample.",
    "local": "该方法返回两个元素的双向量。零元素是样本的似然对数。第一个元素是给定样品的最可能混合物成分的指数。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setClustersNumber()",
    "local": "setClustersNumber（）"
  },
  {
    "origin": "virtual void cv::ml::EM::setClustersNumber",
    "local": "虚拟void cv:：ml:：EM:：setClustersNumber"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.setClustersNumber(",
    "local": "cv.ml\\ EM.setClustersNumber编号("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setCovarianceMatrixType()",
    "local": "setCovariaceMatrix类型（）"
  },
  {
    "origin": "virtual void cv::ml::EM::setCovarianceMatrixType",
    "local": "虚拟void cv:：ml:：EM:：setCovariaceMatrix类型"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.setCovarianceMatrixType(",
    "local": "cv.ml\\u EM.setCovariaceMatrix类型("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setTermCriteria()",
    "local": "setTermCriteria（）"
  },
  {
    "origin": "virtual void cv::ml::EM::setTermCriteria",
    "local": "虚空cv:：ml:：EM:：setTermCriteria"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.setTermCriteria(",
    "local": "cv.ml\\ EM.SETTERM标准("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "trainE()",
    "local": "特灵（）"
  },
  {
    "origin": "virtual bool cv::ml::EM::trainE",
    "local": "虚拟bool cv:：ml:：EM:：trainE"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "means0",
    "local": "平均值0"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "covs0",
    "local": "covs0型"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "weights0",
    "local": "重量0"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "logLikelihoods",
    "local": "原木相似性"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "labels",
    "local": "标签"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "probs",
    "local": "试验"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, logLikelihoods, labels, probs",
    "local": "检索、日志可能性、标签、问题"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.trainE(",
    "local": "员工简历("
  },
  {
    "origin": "samples, means0[, covs0[, weights0[, logLikelihoods[, labels[, probs]]]]]",
    "local": "样本，平均值0[，covs0[，权重0[，对数似然度[，标签[，概率]]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Estimate the Gaussian mixture parameters from a samples set.",
    "local": "从样本集估计高斯混合参数。"
  },
  {
    "origin": "This variation starts with Expectation step. You need to provide initial means \\(a_k\\) of mixture components. Optionally you can pass initial weights \\(\\pi_k\\) and covariance matrices \\(S_k\\) of mixture components.",
    "local": "这种变化始于期望步骤。你需要提供混合物成分的初始方法。或者，您可以传递混合成分的初始权重\\（\\pi\\u k\\）和协方差矩阵\\（S\\u k\\）。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": "Samples from which the Gaussian mixture model will be estimated. It should be a one-channel matrix, each row of which is a sample. If the matrix does not have CV_64F type it will be converted to the inner matrix of such type for the further computing.",
    "local": "从中估计高斯混合模型的样本。它应该是一个单通道矩阵，每一行都是一个样本。如果矩阵没有cv64f类型，它将被转换为这种类型的内部矩阵，以便进一步计算。"
  },
  {
    "origin": "means0",
    "local": "平均值0"
  },
  {
    "origin": "Initial means \\(a_k\\) of mixture components. It is a one-channel matrix of \\(nclusters \\times dims\\) size. If the matrix does not have CV_64F type it will be converted to the inner matrix of such type for the further computing.",
    "local": "混合物成分的初始平均值。它是一个大小为\\（nclusters\\ times dims\\）的单通道矩阵。如果矩阵没有cv64f类型，它将被转换为这种类型的内部矩阵，以便进一步计算。"
  },
  {
    "origin": "covs0",
    "local": "covs0型"
  },
  {
    "origin": "The vector of initial covariance matrices \\(S_k\\) of mixture components. Each of covariance matrices is a one-channel matrix of \\(dims \\times dims\\) size. If the matrices do not have CV_64F type they will be converted to the inner matrices of such type for the further computing.",
    "local": "混合分量的初始协方差矩阵（suk）的向量。每个协方差矩阵都是一个大小为\\（dims\\乘以dims\\）的单通道矩阵。如果矩阵没有cv64f类型，它们将被转换为这种类型的内部矩阵，以便进一步计算。"
  },
  {
    "origin": "weights0",
    "local": "重量0"
  },
  {
    "origin": "Initial weights \\(\\pi_k\\) of mixture components. It should be a one-channel floating-point matrix with \\(1 \\times nclusters\\) or \\(nclusters \\times 1\\) size.",
    "local": "混合物组分的初始重量\\（\\pi\\u k\\）。它应该是一个单通道浮点矩阵，大小为\\（1乘以nclusters\\）或\\（nclusters\\乘以1\\）。"
  },
  {
    "origin": "logLikelihoods",
    "local": "原木相似性"
  },
  {
    "origin": "The optional output matrix that contains a likelihood logarithm value for each sample. It has \\(nsamples \\times 1\\) size and CV_64FC1 type.",
    "local": "包含每个样本的似然对数值的可选输出矩阵。它有\\（nsamples\\乘以1\\）大小和CV\\ u 64FC1类型。"
  },
  {
    "origin": "labels",
    "local": "标签"
  },
  {
    "origin": "The optional output \"class label\" for each sample: \\(\\texttt{labels}_i=\\texttt{arg max}_k(p_{i,k}), i=1..N\\) (indices of the most probable mixture component for each sample). It has \\(nsamples \\times 1\\) size and CV_32SC1 type.",
    "local": "每个样本的可选输出“class label”：\\（\\texttt{labels}u i=\\texttt{arg max}u k（p{i，k}），i=1..N\\）（每个样本的最可能混合物成分的索引）。它有\\（nsamples\\乘以1\\）大小和CV\\ u32sc1类型。"
  },
  {
    "origin": "probs",
    "local": "试验"
  },
  {
    "origin": "The optional output matrix that contains posterior probabilities of each Gaussian mixture component given the each sample. It has \\(nsamples \\times nclusters\\) size and CV_64FC1 type.",
    "local": "包含给定每个样本的每个高斯混合成分的后验概率的可选输出矩阵。它有\\（nsamples\\times nclusters\\）大小和cv64fc1类型。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "trainEM()",
    "local": "TrainEM（）"
  },
  {
    "origin": "virtual bool cv::ml::EM::trainEM",
    "local": "虚拟bool cv:：ml:：EM:：trainEM"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "logLikelihoods",
    "local": "原木相似性"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "labels",
    "local": "标签"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "probs",
    "local": "试验"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, logLikelihoods, labels, probs",
    "local": "检索、日志可能性、标签、问题"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.trainEM(",
    "local": "cv.ml.EM（s）。"
  },
  {
    "origin": "samples[, logLikelihoods[, labels[, probs]]]",
    "local": "样本[，对数似然度[，标签[，问题]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Estimate the Gaussian mixture parameters from a samples set.",
    "local": "从样本集估计高斯混合参数。"
  },
  {
    "origin": "This variation starts with Expectation step. Initial values of the model parameters will be estimated by the k-means algorithm.",
    "local": "这种变化始于期望步骤。模型参数的初始值将通过k-均值算法进行估计。"
  },
  {
    "origin": "Unlike many of the ML models, EM is an unsupervised learning algorithm and it does not take responses (class labels or function values) as input. Instead, it computes the",
    "local": "与许多ML模型不同，EM是一种无监督学习算法，它不接受响应（类标签或函数值）作为输入。相反，它计算"
  },
  {
    "origin": "Maximum Likelihood Estimate",
    "local": "极大似然估计"
  },
  {
    "origin": "of the Gaussian mixture parameters from an input sample set, stores all the parameters inside the structure: \\(p_{i,k}\\) in probs, \\(a_k\\) in means , \\(S_k\\) in covs[k], \\(\\pi_k\\) in weights , and optionally computes the output \"class label\" for each sample: \\(\\texttt{labels}_i=\\texttt{arg max}_k(p_{i,k}), i=1..N\\) (indices of the most probable mixture component for each sample).",
    "local": "在输入样本集中的高斯混合参数中，存储结构中的所有参数：\\（p{i，k}\\）在probs中，\\（a{k\\）在means中，\\（S{k\\）在covs[k]，\\（\\pi{k\\）在weights中，并且可选地计算每个样本的输出“类标签”：\\（\\texttt{labels}i=\\texttt{arg max}k（p{i，k}），i=1..N\\）（每个样品的最可能混合物成分指数）。"
  },
  {
    "origin": "The trained model can be used further for prediction, just like any other classifier. The trained model is similar to the",
    "local": "训练后的模型可以像其他分类器一样进一步用于预测。训练后的模型类似于"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": "Samples from which the Gaussian mixture model will be estimated. It should be a one-channel matrix, each row of which is a sample. If the matrix does not have CV_64F type it will be converted to the inner matrix of such type for the further computing.",
    "local": "从中估计高斯混合模型的样本。它应该是一个单通道矩阵，每一行都是一个样本。如果矩阵没有cv64f类型，它将被转换为这种类型的内部矩阵，以便进一步计算。"
  },
  {
    "origin": "logLikelihoods",
    "local": "原木相似性"
  },
  {
    "origin": "The optional output matrix that contains a likelihood logarithm value for each sample. It has \\(nsamples \\times 1\\) size and CV_64FC1 type.",
    "local": "包含每个样本的似然对数值的可选输出矩阵。它有\\（nsamples\\乘以1\\）大小和CV\\ u 64FC1类型。"
  },
  {
    "origin": "labels",
    "local": "标签"
  },
  {
    "origin": "The optional output \"class label\" for each sample: \\(\\texttt{labels}_i=\\texttt{arg max}_k(p_{i,k}), i=1..N\\) (indices of the most probable mixture component for each sample). It has \\(nsamples \\times 1\\) size and CV_32SC1 type.",
    "local": "每个样本的可选输出“class label”：\\（\\texttt{labels}u i=\\texttt{arg max}u k（p{i，k}），i=1..N\\）（每个样本的最可能混合物成分的索引）。它有\\（nsamples\\乘以1\\）大小和CV\\ u32sc1类型。"
  },
  {
    "origin": "probs",
    "local": "试验"
  },
  {
    "origin": "The optional output matrix that contains posterior probabilities of each Gaussian mixture component given the each sample. It has \\(nsamples \\times nclusters\\) size and CV_64FC1 type.",
    "local": "包含给定每个样本的每个高斯混合成分的后验概率的可选输出矩阵。它有\\（nsamples\\times nclusters\\）大小和cv64fc1类型。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "trainM()",
    "local": "列车（）"
  },
  {
    "origin": "virtual bool cv::ml::EM::trainM",
    "local": "虚拟bool cv:：ml:：EM:：trainM"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "probs0",
    "local": "问题0"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "logLikelihoods",
    "local": "原木相似性"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "labels",
    "local": "标签"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "probs",
    "local": "试验"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, logLikelihoods, labels, probs",
    "local": "检索、日志可能性、标签、问题"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_EM.trainM(",
    "local": "简历("
  },
  {
    "origin": "samples, probs0[, logLikelihoods[, labels[, probs]]]",
    "local": "样本，probs0[，logLikelihoods[，labels[，probs]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Estimate the Gaussian mixture parameters from a samples set.",
    "local": "从样本集估计高斯混合参数。"
  },
  {
    "origin": "This variation starts with Maximization step. You need to provide initial probabilities \\(p_{i,k}\\) to use this option.",
    "local": "这种变化始于最大化步骤。您需要提供初始概率\\（p{i，k}\\）来使用此选项。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": "Samples from which the Gaussian mixture model will be estimated. It should be a one-channel matrix, each row of which is a sample. If the matrix does not have CV_64F type it will be converted to the inner matrix of such type for the further computing.",
    "local": "从中估计高斯混合模型的样本。它应该是一个单通道矩阵，每一行都是一个样本。如果矩阵没有cv64f类型，它将被转换为这种类型的内部矩阵，以便进一步计算。"
  },
  {
    "origin": "probs0",
    "local": "问题0"
  },
  {
    "origin": "the probabilities",
    "local": "概率"
  },
  {
    "origin": "logLikelihoods",
    "local": "原木相似性"
  },
  {
    "origin": "The optional output matrix that contains a likelihood logarithm value for each sample. It has \\(nsamples \\times 1\\) size and CV_64FC1 type.",
    "local": "包含每个样本的似然对数值的可选输出矩阵。它有\\（nsamples\\乘以1\\）大小和CV\\ u 64FC1类型。"
  },
  {
    "origin": "labels",
    "local": "标签"
  },
  {
    "origin": "The optional output \"class label\" for each sample: \\(\\texttt{labels}_i=\\texttt{arg max}_k(p_{i,k}), i=1..N\\) (indices of the most probable mixture component for each sample). It has \\(nsamples \\times 1\\) size and CV_32SC1 type.",
    "local": "每个样本的可选输出“class label”：\\（\\texttt{labels}u i=\\texttt{arg max}u k（p{i，k}），i=1..N\\）（每个样本的最可能混合物成分的索引）。它有\\（nsamples\\乘以1\\）大小和CV\\ u32sc1类型。"
  },
  {
    "origin": "probs",
    "local": "试验"
  },
  {
    "origin": "The optional output matrix that contains posterior probabilities of each Gaussian mixture component given the each sample. It has \\(nsamples \\times nclusters\\) size and CV_64FC1 type.",
    "local": "包含给定每个样本的每个高斯混合成分的后验概率的可选输出矩阵。它有\\（nsamples\\times nclusters\\）大小和cv64fc1类型。"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:48为OpenCV生成"
  }
]