[
  {
    "origin": "OpenCV: cv::CascadeClassifier Class Reference",
    "local": "OpenCV:cv:：CascadeClassifier类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "Public Attributes",
    "local": "公共属性"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::CascadeClassifier Class Reference",
    "local": "cv:：CascadeClassifier类参考"
  },
  {
    "origin": "Cascade classifier class for object detection.",
    "local": "用于目标检测的级联分类器类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename)",
    "local": "&amp；文件名）"
  },
  {
    "origin": "Loads a classifier from a file.",
    "local": "从文件加载分类器。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, std::vector&lt;",
    "local": "图像，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;objects, double scaleFactor=1.1, int minNeighbors=3, int flags=0,",
    "local": "&燃气轮机&amp；对象，双scaleFactor=1.1，int minNeighbors=3，int flags=0，"
  },
  {
    "origin": "minSize=",
    "local": "小型化="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "maxSize=",
    "local": "最大尺寸="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Detects objects of different sizes in the input image. The detected objects are returned as a list of rectangles.",
    "local": "检测输入图像中不同大小的对象。检测到的对象以矩形列表的形式返回。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, std::vector&lt;",
    "local": "图像，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;objects, std::vector&lt; int &gt; &amp;numDetections, double scaleFactor=1.1, int minNeighbors=3, int flags=0,",
    "local": "&燃气轮机&amp；对象，std:：vector&lt；内部&gt&amp；numDetections，双scaleFactor=1.1，int minNeighbors=3，int flags=0，"
  },
  {
    "origin": "minSize=",
    "local": "小型化="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "maxSize=",
    "local": "最大尺寸="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, std::vector&lt;",
    "local": "图像，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;objects, std::vector&lt; int &gt; &amp;rejectLevels, std::vector&lt; double &gt; &amp;levelWeights, double scaleFactor=1.1, int minNeighbors=3, int flags=0,",
    "local": "&燃气轮机&amp；对象，std:：vector&lt；内部&gt&amp；拒绝级别，std：：vector&lt；双倍&gt&amp；levelWeights，双scaleFactor=1.1，int minNeighbors=3，int flags=0，"
  },
  {
    "origin": "minSize=",
    "local": "小型化="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "maxSize=",
    "local": "最大尺寸="
  },
  {
    "origin": "(), bool outputRejectLevels=false)",
    "local": "（bool outputRejectLevels=假）"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Checks whether the classifier has been loaded.",
    "local": "检查分类器是否已加载。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "void *",
    "local": "无效*"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename)",
    "local": "&amp；文件名）"
  },
  {
    "origin": "Loads a classifier from a file.",
    "local": "从文件加载分类器。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;node)",
    "local": "&amp；节点）"
  },
  {
    "origin": "Reads a classifier from a",
    "local": "从数据库中读取分类器"
  },
  {
    "origin": "node.",
    "local": "节点。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;maskGenerator)",
    "local": "&gt；gt；amp；面罩）"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static bool",
    "local": "静态布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;oldcascade, const",
    "local": "&amp；奥尔德卡斯特，康斯特"
  },
  {
    "origin": "&amp;newcascade)",
    "local": "&amp；新喀斯特）"
  },
  {
    "origin": "Public Attributes",
    "local": "公共属性"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Cascade classifier class for object detection.",
    "local": "用于目标检测的级联分类器类。"
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "CascadeClassifier()",
    "local": "级联分类器（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "cv::CascadeClassifier::CascadeClassifier",
    "local": "cv：：级联分类器：：级联分类器"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "&lt;CascadeClassifier object&gt;",
    "local": "&lt；层叠对象&gt；"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier(",
    "local": "cv("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "&lt;CascadeClassifier object&gt;",
    "local": "&lt；层叠对象&gt；"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier(",
    "local": "cv("
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "CascadeClassifier()",
    "local": "级联分类器（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "cv::CascadeClassifier::CascadeClassifier",
    "local": "cv：：级联分类器：：级联分类器"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "&lt;CascadeClassifier object&gt;",
    "local": "&lt；层叠对象&gt；"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier(",
    "local": "cv("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "&lt;CascadeClassifier object&gt;",
    "local": "&lt；层叠对象&gt；"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier(",
    "local": "cv("
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Loads a classifier from a file.",
    "local": "从文件加载分类器。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": "Name of the file from which the classifier is loaded.",
    "local": "从中加载分类器的文件的名称。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "~CascadeClassifier()",
    "local": "~z~分类器（）"
  },
  {
    "origin": "cv::CascadeClassifier::~CascadeClassifier",
    "local": "cv：：级联分类器：~级联分类器"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "convert()",
    "local": "转换（）"
  },
  {
    "origin": "static bool cv::CascadeClassifier::convert",
    "local": "静态布尔cv:：CascadeClassifier:：convert"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "oldcascade",
    "local": "老卡斯卡德"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "newcascade",
    "local": "新喀斯特"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier_convert(",
    "local": "cv.U转换("
  },
  {
    "origin": "oldcascade, newcascade",
    "local": "旧瀑布，新瀑布"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "detectMultiScale()",
    "local": "检测多尺度（）"
  },
  {
    "origin": "[1/3]",
    "local": "[1/3]"
  },
  {
    "origin": "void cv::CascadeClassifier::detectMultiScale",
    "local": "void cv:：cascade分类器：：detectMultiScale"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "objects",
    "local": "物体"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "scaleFactor",
    "local": "缩放因子"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "minNeighbors",
    "local": "米尼堡"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "minSize",
    "local": "小型化"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "maxSize",
    "local": "最大尺寸"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "objects",
    "local": "物体"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.detectMultiScale(",
    "local": "cv.cascade.detect多尺度("
  },
  {
    "origin": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize]]]]]",
    "local": "image[，scaleFactor[，minNeighbors[，flags[，minSize[，maxSize]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "objects, numDetections",
    "local": "对象，numDetections"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.detectMultiScale2(",
    "local": "cv.CascadeClassifier.detectMultiScale2型("
  },
  {
    "origin": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize]]]]]",
    "local": "image[，scaleFactor[，minNeighbors[，flags[，minSize[，maxSize]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "objects, rejectLevels, levelWeights",
    "local": "对象、级别、levelWeights"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.detectMultiScale3(",
    "local": "cv.CascadeClassifier.Detect多尺度3("
  },
  {
    "origin": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize[, outputRejectLevels]]]]]]",
    "local": "image[，scaleFactor[，minNeighbors[，flags[，minSize[，maxSize[，outputRejectLevels]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Detects objects of different sizes in the input image. The detected objects are returned as a list of rectangles.",
    "local": "检测输入图像中不同大小的对象。检测到的对象以矩形列表的形式返回。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": "Matrix of the type CV_8U containing an image where objects are detected.",
    "local": "包含检测到物体的图像的CVƅ8U型矩阵。"
  },
  {
    "origin": "objects",
    "local": "物体"
  },
  {
    "origin": "Vector of rectangles where each rectangle contains the detected object, the rectangles may be partially outside the original image.",
    "local": "矩形矢量在每个矩形包含检测到的对象的情况下，矩形可能部分位于原始图像之外。"
  },
  {
    "origin": "scaleFactor",
    "local": "缩放因子"
  },
  {
    "origin": "Parameter specifying how much the image size is reduced at each image scale.",
    "local": "指定在每个图像比例下图像大小减小多少的参数。"
  },
  {
    "origin": "minNeighbors",
    "local": "米尼堡"
  },
  {
    "origin": "Parameter specifying how many neighbors each candidate rectangle should have to retain it.",
    "local": "指定每个候选矩形应保留多少个邻居的参数。"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "Parameter with the same meaning for an old cascade as in the function cvHaarDetectObjects. It is not used for a new cascade.",
    "local": "参数对旧级联的意义与函数cvHaarDetectObjects中的相同。它不用于新的级联。"
  },
  {
    "origin": "minSize",
    "local": "小型化"
  },
  {
    "origin": "Minimum possible object size. Objects smaller than that are ignored.",
    "local": "最小可能对象大小。小于该值的对象将被忽略。"
  },
  {
    "origin": "maxSize",
    "local": "最大尺寸"
  },
  {
    "origin": "Maximum possible object size. Objects larger than that are ignored. If",
    "local": "最大可能对象大小。大于该值的对象将被忽略。如果"
  },
  {
    "origin": "model is evaluated on single scale.",
    "local": "对模型进行单尺度评价。"
  },
  {
    "origin": "The function is parallelized with the TBB library.",
    "local": "该函数与TBB库并行。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "(Python) A face detection example using cascade classifiers can be found at opencv_source_code/samples/python/facedetect.py",
    "local": "（Python）可以在opencv\\u source\\u code/samples/Python/facedetect.py中找到使用级联分类器的人脸检测示例"
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "detectMultiScale()",
    "local": "检测多尺度（）"
  },
  {
    "origin": "[2/3]",
    "local": "[2/3]"
  },
  {
    "origin": "void cv::CascadeClassifier::detectMultiScale",
    "local": "void cv:：cascade分类器：：detectMultiScale"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "objects",
    "local": "物体"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt; int &gt; &amp;",
    "local": "标准：：向量&lt；内部&gt&amp；"
  },
  {
    "origin": "numDetections",
    "local": "NumDetections数"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "scaleFactor",
    "local": "缩放因子"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "minNeighbors",
    "local": "米尼堡"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "minSize",
    "local": "小型化"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "maxSize",
    "local": "最大尺寸"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "objects",
    "local": "物体"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.detectMultiScale(",
    "local": "cv.cascade.detect多尺度("
  },
  {
    "origin": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize]]]]]",
    "local": "image[，scaleFactor[，minNeighbors[，flags[，minSize[，maxSize]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "objects, numDetections",
    "local": "对象，numDetections"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.detectMultiScale2(",
    "local": "cv.CascadeClassifier.detectMultiScale2型("
  },
  {
    "origin": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize]]]]]",
    "local": "image[，scaleFactor[，minNeighbors[，flags[，minSize[，maxSize]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "objects, rejectLevels, levelWeights",
    "local": "对象、级别、levelWeights"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.detectMultiScale3(",
    "local": "cv.CascadeClassifier.Detect多尺度3("
  },
  {
    "origin": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize[, outputRejectLevels]]]]]]",
    "local": "image[，scaleFactor[，minNeighbors[，flags[，minSize[，maxSize[，outputRejectLevels]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": "Matrix of the type CV_8U containing an image where objects are detected.",
    "local": "包含检测到物体的图像的CVƅ8U型矩阵。"
  },
  {
    "origin": "objects",
    "local": "物体"
  },
  {
    "origin": "Vector of rectangles where each rectangle contains the detected object, the rectangles may be partially outside the original image.",
    "local": "矩形矢量在每个矩形包含检测到的对象的情况下，矩形可能部分位于原始图像之外。"
  },
  {
    "origin": "numDetections",
    "local": "NumDetections数"
  },
  {
    "origin": "Vector of detection numbers for the corresponding objects. An object's number of detections is the number of neighboring positively classified rectangles that were joined together to form the object.",
    "local": "对应对象的检测数向量。一个物体的探测次数是相邻的正分类矩形的数目，这些矩形连接在一起形成物体。"
  },
  {
    "origin": "scaleFactor",
    "local": "缩放因子"
  },
  {
    "origin": "Parameter specifying how much the image size is reduced at each image scale.",
    "local": "指定在每个图像比例下图像大小减小多少的参数。"
  },
  {
    "origin": "minNeighbors",
    "local": "米尼堡"
  },
  {
    "origin": "Parameter specifying how many neighbors each candidate rectangle should have to retain it.",
    "local": "指定每个候选矩形应保留多少个邻居的参数。"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "Parameter with the same meaning for an old cascade as in the function cvHaarDetectObjects. It is not used for a new cascade.",
    "local": "参数对旧级联的意义与函数cvHaarDetectObjects中的相同。它不用于新的级联。"
  },
  {
    "origin": "minSize",
    "local": "小型化"
  },
  {
    "origin": "Minimum possible object size. Objects smaller than that are ignored.",
    "local": "最小可能对象大小。小于该值的对象将被忽略。"
  },
  {
    "origin": "maxSize",
    "local": "最大尺寸"
  },
  {
    "origin": "Maximum possible object size. Objects larger than that are ignored. If",
    "local": "最大可能对象大小。大于该值的对象将被忽略。如果"
  },
  {
    "origin": "model is evaluated on single scale.",
    "local": "对模型进行单尺度评价。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "detectMultiScale()",
    "local": "检测多尺度（）"
  },
  {
    "origin": "[3/3]",
    "local": "[3/3]"
  },
  {
    "origin": "void cv::CascadeClassifier::detectMultiScale",
    "local": "void cv:：cascade分类器：：detectMultiScale"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "objects",
    "local": "物体"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt; int &gt; &amp;",
    "local": "标准：：向量&lt；内部&gt&amp；"
  },
  {
    "origin": "rejectLevels",
    "local": "拒绝级别"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt; double &gt; &amp;",
    "local": "标准：：向量&lt；双倍&gt&amp；"
  },
  {
    "origin": "levelWeights",
    "local": "LevelWeights"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "scaleFactor",
    "local": "缩放因子"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "minNeighbors",
    "local": "米尼堡"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "minSize",
    "local": "小型化"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "maxSize",
    "local": "最大尺寸"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "outputRejectLevels",
    "local": "输出输出电平"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "objects",
    "local": "物体"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.detectMultiScale(",
    "local": "cv.cascade.detect多尺度("
  },
  {
    "origin": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize]]]]]",
    "local": "image[，scaleFactor[，minNeighbors[，flags[，minSize[，maxSize]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "objects, numDetections",
    "local": "对象，numDetections"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.detectMultiScale2(",
    "local": "cv.CascadeClassifier.detectMultiScale2型("
  },
  {
    "origin": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize]]]]]",
    "local": "image[，scaleFactor[，minNeighbors[，flags[，minSize[，maxSize]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "objects, rejectLevels, levelWeights",
    "local": "对象、级别、levelWeights"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.detectMultiScale3(",
    "local": "cv.CascadeClassifier.Detect多尺度3("
  },
  {
    "origin": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize[, outputRejectLevels]]]]]]",
    "local": "image[，scaleFactor[，minNeighbors[，flags[，minSize[，maxSize[，outputRejectLevels]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. This function allows you to retrieve the final stage decision certainty of classification. For this, one needs to set",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。此函数允许您检索分类的最终阶段决策确定性。为此，需要设置"
  },
  {
    "origin": "on true and provide the",
    "local": "关于真实和提供"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "parameter. For each resulting detection,",
    "local": "参数。对于每次检测结果，"
  },
  {
    "origin": "will then contain the certainty of classification at the final stage. This value can then be used to separate strong from weaker classifications.",
    "local": "最后阶段将包含分类的确定性。然后可以使用该值来区分强分类和弱分类。"
  },
  {
    "origin": "A code sample on how to use it efficiently can be found below:",
    "local": "关于如何有效使用它的代码示例如下："
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "empty()",
    "local": "空（）"
  },
  {
    "origin": "bool cv::CascadeClassifier::empty",
    "local": "bool cv:：CascadeClassifier:：空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.empty(",
    "local": "cv.空("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Checks whether the classifier has been loaded.",
    "local": "检查分类器是否已加载。"
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getFeatureType()",
    "local": "getFeatureType（）"
  },
  {
    "origin": "int cv::CascadeClassifier::getFeatureType",
    "local": "int cv:：CascadeClassifier:：getFeatureType"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.getFeatureType(",
    "local": "cv.CascadeClassifier.getFeatureType类型("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMaskGenerator()",
    "local": "getMaskGenerator（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::CascadeClassifier::getMaskGenerator",
    "local": "&燃气轮机；cv:：CascadeClassifier:：getMaskGenerator"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getOldCascade()",
    "local": "getOldCascade（）"
  },
  {
    "origin": "void* cv::CascadeClassifier::getOldCascade",
    "local": "void*cv:：CascadeClassifier:：getOldCascade"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getOriginalWindowSize()",
    "local": "OriginalgetWindowSize（）"
  },
  {
    "origin": "cv::CascadeClassifier::getOriginalWindowSize",
    "local": "cv:：CascadeClassifier:：GetOriginalWindowsSize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.getOriginalWindowSize(",
    "local": "cv.CascadeClassifier.GetOriginalWindowsSize("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "isOldFormatCascade()",
    "local": "IsoldFormatCasCode（）"
  },
  {
    "origin": "bool cv::CascadeClassifier::isOldFormatCascade",
    "local": "布尔cv:：CascadeClassifier:：isOldFormatCascade"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.isOldFormatCascade(",
    "local": "cv.CascadeClassifier.isOldFormatCascade代码("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "load()",
    "local": "加载（）"
  },
  {
    "origin": "bool cv::CascadeClassifier::load",
    "local": "布尔cv:：CascadeClassifier:：load"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.load(",
    "local": "cv.C.负载("
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Loads a classifier from a file.",
    "local": "从文件加载分类器。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": "Name of the file from which the classifier is loaded. The file may contain an old HAAR classifier trained by the haartraining application or a new cascade classifier trained by the traincascade application.",
    "local": "从中加载分类器的文件的名称。该文件可以包含由haartraining应用程序训练的旧HAAR分类器或由traincascade应用程序训练的新级联分类器。"
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "read()",
    "local": "读取（）"
  },
  {
    "origin": "bool cv::CascadeClassifier::read",
    "local": "bool cv:：CascadeClassifier:：读取"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "node",
    "local": "节点"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.CascadeClassifier.read(",
    "local": "简历阅读("
  },
  {
    "origin": "node",
    "local": "节点"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Reads a classifier from a",
    "local": "从数据库中读取分类器"
  },
  {
    "origin": "node.",
    "local": "节点。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "The file may contain a new cascade classifier (trained traincascade application) only.",
    "local": "该文件只能包含一个新的级联分类器（经过训练的traincascade应用程序）。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMaskGenerator()",
    "local": "setMaskGenerator（）"
  },
  {
    "origin": "void cv::CascadeClassifier::setMaskGenerator",
    "local": "void cv:：CascadeClassifier:：setMaskGenerator"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "maskGenerator",
    "local": "假面发生器"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Member Data Documentation",
    "local": "成员数据文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "cc",
    "local": "复写的副本"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::CascadeClassifier::cc",
    "local": "&gt；CV:：级联分类器：：CC"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:42 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:42为OpenCV生成"
  }
]