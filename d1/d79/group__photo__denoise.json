[
  {
    "origin": "OpenCV: Denoising",
    "local": "OpenCV:去噪"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "Denoising",
    "local": "去噪"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;observations,",
    "local": "&燃气轮机&amp；观察，"
  },
  {
    "origin": "&amp;result, double lambda=1.0, int niters=30)",
    "local": "&amp；结果，双λ=1.0，整数=30）"
  },
  {
    "origin": "Primal-dual algorithm is an algorithm for solving special types of variational problems (that is, finding a function to minimize some functional). As the image denoising, in particular, may be seen as the variational problem, primal-dual algorithm then can be used to perform denoising and this is exactly what is implemented.",
    "local": "原对偶算法是一种求解特殊类型变分问题的算法（即求一个函数使某个函数最小化）。由于图像去噪，特别是可以看作是一个变分问题，因此可以使用原始-对偶算法来进行去噪，而这正是所要实现的。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src,",
    "local": "src公司，"
  },
  {
    "origin": "dst, float h, int search_window=21, int block_size=7,",
    "local": "dst，float h，int search_window=21，int block_size=7，"
  },
  {
    "origin": "&amp;stream=",
    "local": "&amp；溪流="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Perform image denoising using Non-local Means Denoising algorithm",
    "local": "使用非局部均值去噪算法进行图像去噪"
  },
  {
    "origin": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising",
    "local": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising"
  },
  {
    "origin": "with several computational optimizations. Noise expected to be a gaussian white noise.",
    "local": "进行了多次计算优化。噪声应为高斯白噪声。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src,",
    "local": "src公司，"
  },
  {
    "origin": "dst, float h=3, int templateWindowSize=7, int searchWindowSize=21)",
    "local": "dst，float h=3，int templateWindowSize=7，int searchWindowSize=21）"
  },
  {
    "origin": "Perform image denoising using Non-local Means Denoising algorithm",
    "local": "使用非局部均值去噪算法进行图像去噪"
  },
  {
    "origin": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising/",
    "local": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising/"
  },
  {
    "origin": "with several computational optimizations. Noise expected to be a gaussian white noise.",
    "local": "进行了多次计算优化。噪声应为高斯白噪声。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src,",
    "local": "src公司，"
  },
  {
    "origin": "dst, const std::vector&lt; float &gt; &amp;h, int templateWindowSize=7, int searchWindowSize=21, int normType=",
    "local": "dst，const std：：向量&lt；浮动&gt&amp；h、 int templateWindowSize=7，int searchWindowSize=21，int normType="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Perform image denoising using Non-local Means Denoising algorithm",
    "local": "使用非局部均值去噪算法进行图像去噪"
  },
  {
    "origin": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising/",
    "local": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising/"
  },
  {
    "origin": "with several computational optimizations. Noise expected to be a gaussian white noise.",
    "local": "进行了多次计算优化。噪声应为高斯白噪声。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src,",
    "local": "src公司，"
  },
  {
    "origin": "dst, float h_luminance, float photo_render, int search_window=21, int block_size=7,",
    "local": "dst，float h\\u luminance，float photo\\u render，int search\\u window=21，int block\\u size=7，"
  },
  {
    "origin": "&amp;stream=",
    "local": "&amp；溪流="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Modification of fastNlMeansDenoising function for colored images.",
    "local": "彩色图像去噪函数的改进。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src,",
    "local": "src公司，"
  },
  {
    "origin": "dst, float h=3, float hColor=3, int templateWindowSize=7, int searchWindowSize=21)",
    "local": "dst，float h=3，float hColor=3，int templateWindowSize=7，int searchWindowSize=21）"
  },
  {
    "origin": "Modification of fastNlMeansDenoising function for colored images.",
    "local": "彩色图像去噪函数的改进。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "srcImgs,",
    "local": "心，"
  },
  {
    "origin": "dst, int imgToDenoiseIndex, int temporalWindowSize, float h=3, float hColor=3, int templateWindowSize=7, int searchWindowSize=21)",
    "local": "dst，int imgToDenoiseIndex，int temporalWindowSize，float h=3，float hColor=3，int templateWindowSize=7，int searchWindowSize=21）"
  },
  {
    "origin": "Modification of fastNlMeansDenoisingMulti function for colored images sequences.",
    "local": "彩色图像序列的FastNLMeans去噪多函数的改进。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "srcImgs,",
    "local": "心，"
  },
  {
    "origin": "dst, int imgToDenoiseIndex, int temporalWindowSize, float h=3, int templateWindowSize=7, int searchWindowSize=21)",
    "local": "dst，int imgToDenoiseIndex，int temporalWindowSize，float h=3，int templateWindowSize=7，int searchWindowSize=21）"
  },
  {
    "origin": "Modification of fastNlMeansDenoising function for images sequence where consecutive images have been captured in small period of time. For example video. This version of the function is for grayscale images or for manual manipulation with colorspaces. For more details see",
    "local": "对小时间内连续捕获的图像序列的FastNLMeans去噪函数的改进。例如视频。此版本的函数用于灰度图像或使用颜色空间进行手动操作。有关详细信息，请参阅"
  },
  {
    "origin": "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.131.6394",
    "local": "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.131.6394"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "srcImgs,",
    "local": "心，"
  },
  {
    "origin": "dst, int imgToDenoiseIndex, int temporalWindowSize, const std::vector&lt; float &gt; &amp;h, int templateWindowSize=7, int searchWindowSize=21, int normType=",
    "local": "dst，int imgToDenoiseIndex，int temporalWindowSize，const std:：vector&lt；浮动&gt&amp；h、 int templateWindowSize=7，int searchWindowSize=21，int normType="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Modification of fastNlMeansDenoising function for images sequence where consecutive images have been captured in small period of time. For example video. This version of the function is for grayscale images or for manual manipulation with colorspaces. For more details see",
    "local": "对小时间内连续捕获的图像序列的FastNLMeans去噪函数的改进。例如视频。此版本的函数用于灰度图像或使用颜色空间进行手动操作。有关详细信息，请参阅"
  },
  {
    "origin": "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.131.6394",
    "local": "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.131.6394"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src,",
    "local": "src公司，"
  },
  {
    "origin": "dst, float h, int search_window=21, int block_size=7, int borderMode=",
    "local": "dst，float h，int search_window=21，int block_size=7，int borderMode="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&amp;stream=",
    "local": "&amp；溪流="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Performs pure non local means denoising without any simplification, and thus it is not fast.",
    "local": "在没有任何简化的情况下执行纯非局部均值去噪，因此速度不快。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "denoise_TVL1()",
    "local": "去噪\\u TVL1（）"
  },
  {
    "origin": "void cv::denoise_TVL1",
    "local": "void cv：：去噪\\u TVL1"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "observations",
    "local": "观察"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "result",
    "local": "结果"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "lambda",
    "local": "λ"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "niters",
    "local": "硝石"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.denoise_TVL1(",
    "local": "cv.去噪\\u TVL1("
  },
  {
    "origin": "observations, result[, lambda[, niters]]",
    "local": "观察，结果[，λ[，niters]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Primal-dual algorithm is an algorithm for solving special types of variational problems (that is, finding a function to minimize some functional). As the image denoising, in particular, may be seen as the variational problem, primal-dual algorithm then can be used to perform denoising and this is exactly what is implemented.",
    "local": "原对偶算法是一种求解特殊类型变分问题的算法（即求一个函数使某个函数最小化）。由于图像去噪，特别是可以看作是一个变分问题，因此可以使用原始-对偶算法来进行去噪，而这正是所要实现的。"
  },
  {
    "origin": "It should be noted, that this implementation was taken from the July 2013 blog entry",
    "local": "需要注意的是，这个实现是从2013年7月的博客条目中获取的"
  },
  {
    "origin": ", which also contained (slightly more general) ready-to-use source code on Python. Subsequently, that code was rewritten on C++ with the usage of openCV by Vadim Pisarevsky at the end of July 2013 and finally it was slightly adapted by later authors.",
    "local": "，其中还包含Python上随时可用的源代码（略为通用）。随后，在2013年7月底，Vadim Pisarevsky在使用OpenCV时，在C++上改写了该代码，并最终由后来作者进行了修改。"
  },
  {
    "origin": "Although the thorough discussion and justification of the algorithm involved may be found in",
    "local": "尽管对所涉及的算法的深入讨论和论证可以在"
  },
  {
    "origin": ", it might make sense to skim over it here, following",
    "local": "，在这里略读一下可能是有意义的"
  },
  {
    "origin": ". To begin with, we consider the 1-byte gray-level images as the functions from the rectangular domain of pixels (it may be seen as set \\(\\left\\{(x,y)\\in\\mathbb{N}\\times\\mathbb{N}\\mid 1\\leq x\\leq n,\\;1\\leq y\\leq m\\right\\}\\) for some \\(m,\\;n\\in\\mathbb{N}\\)) into \\(\\{0,1,\\dots,255\\}\\). We shall denote the noised images as \\(f_i\\) and with this view, given some image \\(x\\) of the same size, we may measure how bad it is by the formula",
    "local": ". 首先，我们将1字节灰度图像视为来自像素矩形域的函数（它可以被视为set\\（\\left\\{（x，y）\\in\\mathbb{N}\\times\\mathbb{N}\\mid 1\\leq x\\leq N，\\；对某些\\（m，\\）来说是1\\leq y\\leq m\\right \\}\\）；n\\in\\mathbb{n}\\））转换成\\（\\{0,1，\\dots，255\\}\\）。我们将噪声图像表示为\\（f \\i\\），根据这个观点，给定一些相同大小的图像\\（x \\），我们可以通过公式来测量它的严重程度"
  },
  {
    "origin": "\\[\\left\\|\\left\\|\\nabla x\\right\\|\\right\\| + \\lambda\\sum_i\\left\\|\\left\\|x-f_i\\right\\|\\right\\|\\]",
    "local": "\\[\\左\\ | \\左\\ | \\纳布拉x\\右\\ | \\右\\ |+\\ lambda\\ sum|u i\\左\\ | \\左\\ | x-f| u i\\右\\ | \\ |]"
  },
  {
    "origin": "\\(\\|\\|\\cdot\\|\\|\\) here denotes \\(L_2\\)-norm and as you see, the first addend states that we want our image to be smooth (ideally, having zero gradient, thus being constant) and the second states that we want our result to be close to the observations we've got. If we treat \\(x\\) as a function, this is exactly the functional what we seek to minimize and here the Primal-Dual algorithm comes into play.",
    "local": "\\（\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\）这里表示\\（L|u 2\\）-范数，如你所见，第一个加数表示我们希望图像平滑（理想情况下，具有零梯度，因此是恒定的），第二个加数表示我们希望结果接近我们得到的观测值。如果我们把\\（x\\）当作一个函数，这正是我们要最小化的函数，这里的原始-对偶算法开始发挥作用。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "observations",
    "local": "观察"
  },
  {
    "origin": "This array should contain one or more noised versions of the image that is to be restored.",
    "local": "此数组应包含要还原的图像的一个或多个有噪版本。"
  },
  {
    "origin": "result",
    "local": "结果"
  },
  {
    "origin": "Here the denoised image will be stored. There is no need to do pre-allocation of storage space, as it will be automatically allocated, if necessary.",
    "local": "这里将存储去噪后的图像。不需要预先分配存储空间，因为它将在必要时自动分配。"
  },
  {
    "origin": "lambda",
    "local": "λ"
  },
  {
    "origin": "Corresponds to \\(\\lambda\\) in the formulas above. As it is enlarged, the smooth (blurred) images are treated more favorably than detailed (but maybe more noised) ones. Roughly speaking, as it becomes smaller, the result will be more blur but more sever outliers will be removed.",
    "local": "对应于上述公式中的\\（\\lambda\\）。当它被放大时，平滑的（模糊的）图像比细节的（但可能是噪声更大的）图像更容易被处理。粗略地说，当它变小时，结果会变得更加模糊，但会去除更多严重的异常值。"
  },
  {
    "origin": "niters",
    "local": "硝石"
  },
  {
    "origin": "Number of iterations that the algorithm will run. Of course, as more iterations as better, but it is hard to quantitatively refine this statement, so just use the default and increase it if the results are poor.",
    "local": "算法将运行的迭代次数。当然，迭代次数越多越好，但是很难定量地细化这个语句，所以只要使用默认值，如果结果不好就增加它。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fastNlMeansDenoising()",
    "local": "FastNLMeansDe噪（）"
  },
  {
    "origin": "[1/3]",
    "local": "[1/3]"
  },
  {
    "origin": "void cv::cuda::fastNlMeansDenoising",
    "local": "void cv:：cuda:：fastnl表示去噪"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "search_window",
    "local": "搜索\\u窗口"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "block_size",
    "local": "块大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Perform image denoising using Non-local Means Denoising algorithm",
    "local": "使用非局部均值去噪算法进行图像去噪"
  },
  {
    "origin": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising",
    "local": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising"
  },
  {
    "origin": "with several computational optimizations. Noise expected to be a gaussian white noise.",
    "local": "进行了多次计算优化。噪声应为高斯白噪声。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input 8-bit 1-channel, 2-channel or 3-channel image.",
    "local": "输入8位1通道、2通道或3通道图像。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "Output image with the same size and type as src .",
    "local": "输出与src大小和类型相同的图像。"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "Parameter regulating filter strength. Big h value perfectly removes noise but also removes image details, smaller h value preserves details but also preserves some noise",
    "local": "调节过滤器强度的参数。大的h值完美地去除了噪声，但也去除了图像细节，小的h值保留了细节，但也保留了一些噪声"
  },
  {
    "origin": "search_window",
    "local": "搜索\\u窗口"
  },
  {
    "origin": "Size in pixels of the window that is used to compute weighted average for given pixel. Should be odd. Affect performance linearly: greater search_window - greater denoising time. Recommended value 21 pixels",
    "local": "窗口的像素大小，用于计算给定像素的加权平均值。应该很奇怪。线性影响性能：搜索窗口越大，去噪时间越长。建议值21像素"
  },
  {
    "origin": "block_size",
    "local": "块大小"
  },
  {
    "origin": "Size in pixels of the template patch that is used to compute weights. Should be odd. Recommended value 7 pixels",
    "local": "用于计算权重的模板面片的大小（以像素为单位）。应该很奇怪。建议值7像素"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "for the asynchronous invocations.",
    "local": "对于异步调用。"
  },
  {
    "origin": "This function expected to be applied to grayscale images. For colored images look at FastNonLocalMeansDenoising::labMethod.",
    "local": "此函数将应用于灰度图像。对于彩色图像，请查看FastNonLocalMeansDe噪：：labMethod。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fastNlMeansDenoising()",
    "local": "FastNLMeansDe噪（）"
  },
  {
    "origin": "[2/3]",
    "local": "[2/3]"
  },
  {
    "origin": "void cv::fastNlMeansDenoising",
    "local": "void cv：：fastnl表示噪声"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoising(",
    "local": "cv.Fastnl意味着噪音("
  },
  {
    "origin": "src[, dst[, h[, templateWindowSize[, searchWindowSize]]]]",
    "local": "src[，dst[，h[，templateWindowsSize[，searchWindowsSize]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoising(",
    "local": "cv.Fastnl意味着噪音("
  },
  {
    "origin": "src, h[, dst[, templateWindowSize[, searchWindowSize[, normType]]]]",
    "local": "src，h[，dst[，templateWindowSize[，searchWindowSize[，normType]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Perform image denoising using Non-local Means Denoising algorithm",
    "local": "使用非局部均值去噪算法进行图像去噪"
  },
  {
    "origin": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising/",
    "local": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising/"
  },
  {
    "origin": "with several computational optimizations. Noise expected to be a gaussian white noise.",
    "local": "进行了多次计算优化。噪声应为高斯白噪声。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input 8-bit 1-channel, 2-channel, 3-channel or 4-channel image.",
    "local": "输入8位1通道、2通道、3通道或4通道图像。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "Output image with the same size and type as src .",
    "local": "输出与src大小和类型相同的图像。"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "Size in pixels of the template patch that is used to compute weights. Should be odd. Recommended value 7 pixels",
    "local": "用于计算权重的模板面片的大小（以像素为单位）。应该很奇怪。建议值7像素"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "Size in pixels of the window that is used to compute weighted average for given pixel. Should be odd. Affect performance linearly: greater searchWindowsSize - greater denoising time. Recommended value 21 pixels",
    "local": "窗口的像素大小，用于计算给定像素的加权平均值。应该很奇怪。线性影响性能：搜索窗口大小越大-去噪时间越长。建议值21像素"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "Parameter regulating filter strength. Big h value perfectly removes noise but also removes image details, smaller h value preserves details but also preserves some noise",
    "local": "调节过滤器强度的参数。大的h值完美地去除了噪声，但也去除了图像细节，小的h值保留了细节，但也保留了一些噪声"
  },
  {
    "origin": "This function expected to be applied to grayscale images. For colored images look at fastNlMeansDenoisingColored. Advanced usage of this functions can be manual denoising of colored image in different colorspaces. Such approach is used in fastNlMeansDenoisingColored by converting image to CIELAB colorspace and then separately denoise L and AB components with different h parameter.",
    "local": "此函数将应用于灰度图像。对于彩色图像，请查看FastNLmeansDe噪彩色。高级使用此功能可以手动去噪不同颜色空间的彩色图像。该方法通过将图像转换到CIELAB颜色空间，分别对不同h参数的L分量和AB分量进行去噪，实现了快速去噪。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fastNlMeansDenoising()",
    "local": "FastNLMeansDe噪（）"
  },
  {
    "origin": "[3/3]",
    "local": "[3/3]"
  },
  {
    "origin": "void cv::fastNlMeansDenoising",
    "local": "void cv：：fastnl表示噪声"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt; float &gt; &amp;",
    "local": "常量标准：：向量&lt；浮动&gt&amp；"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "normType",
    "local": "标准"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoising(",
    "local": "cv.Fastnl意味着噪音("
  },
  {
    "origin": "src[, dst[, h[, templateWindowSize[, searchWindowSize]]]]",
    "local": "src[，dst[，h[，templateWindowsSize[，searchWindowsSize]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoising(",
    "local": "cv.Fastnl意味着噪音("
  },
  {
    "origin": "src, h[, dst[, templateWindowSize[, searchWindowSize[, normType]]]]",
    "local": "src，h[，dst[，templateWindowSize[，searchWindowSize[，normType]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Perform image denoising using Non-local Means Denoising algorithm",
    "local": "使用非局部均值去噪算法进行图像去噪"
  },
  {
    "origin": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising/",
    "local": "http://www.ipol.im/pub/algo/bcm_non_local_means_denoising/"
  },
  {
    "origin": "with several computational optimizations. Noise expected to be a gaussian white noise.",
    "local": "进行了多次计算优化。噪声应为高斯白噪声。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input 8-bit or 16-bit (only with NORM_L1) 1-channel, 2-channel, 3-channel or 4-channel image.",
    "local": "输入8位或16位（仅适用于NORM\\ L1）1通道、2通道、3通道或4通道图像。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "Output image with the same size and type as src .",
    "local": "输出与src大小和类型相同的图像。"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "Size in pixels of the template patch that is used to compute weights. Should be odd. Recommended value 7 pixels",
    "local": "用于计算权重的模板面片的大小（以像素为单位）。应该很奇怪。建议值7像素"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "Size in pixels of the window that is used to compute weighted average for given pixel. Should be odd. Affect performance linearly: greater searchWindowsSize - greater denoising time. Recommended value 21 pixels",
    "local": "窗口的像素大小，用于计算给定像素的加权平均值。应该很奇怪。线性影响性能：搜索窗口大小越大-去噪时间越长。建议值21像素"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "Array of parameters regulating filter strength, either one parameter applied to all channels or one per channel in dst. Big h value perfectly removes noise but also removes image details, smaller h value preserves details but also preserves some noise",
    "local": "调节滤波器强度的参数数组，一个参数应用于所有信道或dst中每个信道一个参数。大的h值完美地去除了噪声，但也去除了图像细节，小的h值保留了细节，但也保留了一些噪声"
  },
  {
    "origin": "normType",
    "local": "标准"
  },
  {
    "origin": "Type of norm used for weight calculation. Can be either NORM_L2 or NORM_L1",
    "local": "用于重量计算的标准类型。可以是NORM_L2或NORM_L1"
  },
  {
    "origin": "This function expected to be applied to grayscale images. For colored images look at fastNlMeansDenoisingColored. Advanced usage of this functions can be manual denoising of colored image in different colorspaces. Such approach is used in fastNlMeansDenoisingColored by converting image to CIELAB colorspace and then separately denoise L and AB components with different h parameter.",
    "local": "此函数将应用于灰度图像。对于彩色图像，请查看FastNLmeansDe噪彩色。高级使用此功能可以手动去噪不同颜色空间的彩色图像。该方法通过将图像转换到CIELAB颜色空间，分别对不同h参数的L分量和AB分量进行去噪，实现了快速去噪。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fastNlMeansDenoisingColored()",
    "local": "FastNLmeansDe噪有色（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "void cv::cuda::fastNlMeansDenoisingColored",
    "local": "void cv:：cuda:：fastnl表示杂色"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "h_luminance",
    "local": "亮度"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "photo_render",
    "local": "照片渲染"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "search_window",
    "local": "搜索\\u窗口"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "block_size",
    "local": "块大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Modification of fastNlMeansDenoising function for colored images.",
    "local": "彩色图像去噪函数的改进。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input 8-bit 3-channel image.",
    "local": "输入8位3通道图像。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "Output image with the same size and type as src .",
    "local": "输出与src大小和类型相同的图像。"
  },
  {
    "origin": "h_luminance",
    "local": "亮度"
  },
  {
    "origin": "Parameter regulating filter strength. Big h value perfectly removes noise but also removes image details, smaller h value preserves details but also preserves some noise",
    "local": "调节过滤器强度的参数。大的h值完美地去除了噪声，但也去除了图像细节，小的h值保留了细节，但也保留了一些噪声"
  },
  {
    "origin": "photo_render",
    "local": "照片渲染"
  },
  {
    "origin": "float The same as h but for color components. For most images value equals 10 will be enough to remove colored noise and do not distort colors",
    "local": "浮动与h相同，但用于颜色组件。对于大多数图像值等于10将足以消除有色噪声和不扭曲的颜色"
  },
  {
    "origin": "search_window",
    "local": "搜索\\u窗口"
  },
  {
    "origin": "Size in pixels of the window that is used to compute weighted average for given pixel. Should be odd. Affect performance linearly: greater search_window - greater denoising time. Recommended value 21 pixels",
    "local": "窗口的像素大小，用于计算给定像素的加权平均值。应该很奇怪。线性影响性能：搜索窗口越大，去噪时间越长。建议值21像素"
  },
  {
    "origin": "block_size",
    "local": "块大小"
  },
  {
    "origin": "Size in pixels of the template patch that is used to compute weights. Should be odd. Recommended value 7 pixels",
    "local": "用于计算权重的模板面片的大小（以像素为单位）。应该很奇怪。建议值7像素"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "for the asynchronous invocations.",
    "local": "对于异步调用。"
  },
  {
    "origin": "The function converts image to CIELAB colorspace and then separately denoise L and AB components with given h parameters using FastNonLocalMeansDenoising::simpleMethod function.",
    "local": "该函数将图像转换为CIELAB颜色空间，然后使用FastNonLocalMeansDe噪：：simpleMethod函数分别对给定h参数的L和AB分量进行去噪。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fastNlMeansDenoisingColored()",
    "local": "FastNLmeansDe噪有色（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "void cv::fastNlMeansDenoisingColored",
    "local": "void cv：：fastnl表示杂色"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "hColor",
    "local": "H颜色"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoisingColored(",
    "local": "cv.Fastnl表示有色噪声"
  },
  {
    "origin": "src[, dst[, h[, hColor[, templateWindowSize[, searchWindowSize]]]]]",
    "local": "src[，dst[，h[，hColor[，templateWindowsSize[，searchWindowsSize]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Modification of fastNlMeansDenoising function for colored images.",
    "local": "彩色图像去噪函数的改进。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input 8-bit 3-channel image.",
    "local": "输入8位3通道图像。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "Output image with the same size and type as src .",
    "local": "输出与src大小和类型相同的图像。"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "Size in pixels of the template patch that is used to compute weights. Should be odd. Recommended value 7 pixels",
    "local": "用于计算权重的模板面片的大小（以像素为单位）。应该很奇怪。建议值7像素"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "Size in pixels of the window that is used to compute weighted average for given pixel. Should be odd. Affect performance linearly: greater searchWindowsSize - greater denoising time. Recommended value 21 pixels",
    "local": "窗口的像素大小，用于计算给定像素的加权平均值。应该很奇怪。线性影响性能：搜索窗口大小越大-去噪时间越长。建议值21像素"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "Parameter regulating filter strength for luminance component. Bigger h value perfectly removes noise but also removes image details, smaller h value preserves details but also preserves some noise",
    "local": "调节亮度分量滤波强度的参数。较大的h值可以完美地去除噪声，但也可以去除图像细节，较小的h值可以保留细节，但也可以保留一些噪声"
  },
  {
    "origin": "hColor",
    "local": "H颜色"
  },
  {
    "origin": "The same as h but for color components. For most images value equals 10 will be enough to remove colored noise and do not distort colors",
    "local": "与h相同，但用于颜色组件。对于大多数图像值等于10将足以消除有色噪声和不扭曲的颜色"
  },
  {
    "origin": "The function converts image to CIELAB colorspace and then separately denoise L and AB components with given h parameters using fastNlMeansDenoising function.",
    "local": "该函数将图像转换为CIELAB颜色空间，然后使用FastNLMeansDe噪函数分别对给定h参数的L分量和AB分量进行去噪。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fastNlMeansDenoisingColoredMulti()",
    "local": "FastNLmeansDe噪ColoredMulti（）"
  },
  {
    "origin": "void cv::fastNlMeansDenoisingColoredMulti",
    "local": "void cv:：fastnl表示噪波彩色倍数"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "srcImgs",
    "local": "srcImgs公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "imgToDenoiseIndex",
    "local": "IMG噪声指数"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "temporalWindowSize",
    "local": "临时窗口大小"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "hColor",
    "local": "H颜色"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoisingColoredMulti(",
    "local": "cv.FastNL表示噪声彩色倍数("
  },
  {
    "origin": "srcImgs, imgToDenoiseIndex, temporalWindowSize[, dst[, h[, hColor[, templateWindowSize[, searchWindowSize]]]]]",
    "local": "srcImgs、imgToDenoiseIndex、temporalWindowSize[、dst[、h[、hColor[、templateWindowSize[、searchWindowSize]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Modification of fastNlMeansDenoisingMulti function for colored images sequences.",
    "local": "彩色图像序列的FastNLMeans去噪多函数的改进。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "srcImgs",
    "local": "srcImgs公司"
  },
  {
    "origin": "Input 8-bit 3-channel images sequence. All images should have the same type and size.",
    "local": "输入8位3通道图像序列。所有图像应具有相同的类型和大小。"
  },
  {
    "origin": "imgToDenoiseIndex",
    "local": "IMG噪声指数"
  },
  {
    "origin": "Target image to denoise index in srcImgs sequence",
    "local": "srcImgs序列中目标图像去噪指标的研究"
  },
  {
    "origin": "temporalWindowSize",
    "local": "临时窗口大小"
  },
  {
    "origin": "Number of surrounding images to use for target image denoising. Should be odd. Images from imgToDenoiseIndex - temporalWindowSize / 2 to imgToDenoiseIndex - temporalWindowSize / 2 from srcImgs will be used to denoise srcImgs[imgToDenoiseIndex] image.",
    "local": "用于目标图像去噪的周围图像数。应该很奇怪。来自srcImgs的imgToDenoiseIndex-temporalWindowSize/2到imgToDenoiseIndex-temporalWindowSize/2的图像将用于去除srcImgs[imgToDenoiseIndex]图像的噪声。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "Output image with the same size and type as srcImgs images.",
    "local": "输出与srcImgs图像大小和类型相同的图像。"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "Size in pixels of the template patch that is used to compute weights. Should be odd. Recommended value 7 pixels",
    "local": "用于计算权重的模板面片的大小（以像素为单位）。应该很奇怪。建议值7像素"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "Size in pixels of the window that is used to compute weighted average for given pixel. Should be odd. Affect performance linearly: greater searchWindowsSize - greater denoising time. Recommended value 21 pixels",
    "local": "窗口的像素大小，用于计算给定像素的加权平均值。应该很奇怪。线性影响性能：搜索窗口大小越大-去噪时间越长。建议值21像素"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "Parameter regulating filter strength for luminance component. Bigger h value perfectly removes noise but also removes image details, smaller h value preserves details but also preserves some noise.",
    "local": "调节亮度分量滤波强度的参数。较大的h值可以完美地去除噪声，但也可以去除图像细节，较小的h值可以保留细节，但也可以保留一些噪声。"
  },
  {
    "origin": "hColor",
    "local": "H颜色"
  },
  {
    "origin": "The same as h but for color components.",
    "local": "与h相同，但用于颜色组件。"
  },
  {
    "origin": "The function converts images to CIELAB colorspace and then separately denoise L and AB components with given h parameters using fastNlMeansDenoisingMulti function.",
    "local": "该函数将图像转换为CIELAB颜色空间，然后使用FastNLMeansDe噪多函数分别对给定h参数的L分量和AB分量进行去噪。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fastNlMeansDenoisingMulti()",
    "local": "FastNLmeansDe噪多（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "void cv::fastNlMeansDenoisingMulti",
    "local": "void cv：：fastnl表示噪声多"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "srcImgs",
    "local": "srcImgs公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "imgToDenoiseIndex",
    "local": "IMG噪声指数"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "temporalWindowSize",
    "local": "临时窗口大小"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoisingMulti(",
    "local": "cv.FastNL意味着噪音多("
  },
  {
    "origin": "srcImgs, imgToDenoiseIndex, temporalWindowSize[, dst[, h[, templateWindowSize[, searchWindowSize]]]]",
    "local": "srcImgs、imgToDenoiseIndex、temporalWindowSize[、dst[、h[、templateWindowSize[、searchWindowSize]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoisingMulti(",
    "local": "cv.FastNL意味着噪音多("
  },
  {
    "origin": "srcImgs, imgToDenoiseIndex, temporalWindowSize, h[, dst[, templateWindowSize[, searchWindowSize[, normType]]]]",
    "local": "srcImgs，imgToDenoiseIndex，temporalWindowSize，h[，dst[，templateWindowSize[，searchWindowSize[，normType]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Modification of fastNlMeansDenoising function for images sequence where consecutive images have been captured in small period of time. For example video. This version of the function is for grayscale images or for manual manipulation with colorspaces. For more details see",
    "local": "对小时间内连续捕获的图像序列的FastNLMeans去噪函数的改进。例如视频。此版本的函数用于灰度图像或使用颜色空间进行手动操作。有关详细信息，请参阅"
  },
  {
    "origin": "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.131.6394",
    "local": "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.131.6394"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "srcImgs",
    "local": "srcImgs公司"
  },
  {
    "origin": "Input 8-bit 1-channel, 2-channel, 3-channel or 4-channel images sequence. All images should have the same type and size.",
    "local": "输入8位1通道、2通道、3通道或4通道图像序列。所有图像应具有相同的类型和大小。"
  },
  {
    "origin": "imgToDenoiseIndex",
    "local": "IMG噪声指数"
  },
  {
    "origin": "Target image to denoise index in srcImgs sequence",
    "local": "srcImgs序列中目标图像去噪指标的研究"
  },
  {
    "origin": "temporalWindowSize",
    "local": "临时窗口大小"
  },
  {
    "origin": "Number of surrounding images to use for target image denoising. Should be odd. Images from imgToDenoiseIndex - temporalWindowSize / 2 to imgToDenoiseIndex - temporalWindowSize / 2 from srcImgs will be used to denoise srcImgs[imgToDenoiseIndex] image.",
    "local": "用于目标图像去噪的周围图像数。应该很奇怪。来自srcImgs的imgToDenoiseIndex-temporalWindowSize/2到imgToDenoiseIndex-temporalWindowSize/2的图像将用于去除srcImgs[imgToDenoiseIndex]图像的噪声。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "Output image with the same size and type as srcImgs images.",
    "local": "输出与srcImgs图像大小和类型相同的图像。"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "Size in pixels of the template patch that is used to compute weights. Should be odd. Recommended value 7 pixels",
    "local": "用于计算权重的模板面片的大小（以像素为单位）。应该很奇怪。建议值7像素"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "Size in pixels of the window that is used to compute weighted average for given pixel. Should be odd. Affect performance linearly: greater searchWindowsSize - greater denoising time. Recommended value 21 pixels",
    "local": "窗口的像素大小，用于计算给定像素的加权平均值。应该很奇怪。线性影响性能：搜索窗口大小越大-去噪时间越长。建议值21像素"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "Parameter regulating filter strength. Bigger h value perfectly removes noise but also removes image details, smaller h value preserves details but also preserves some noise",
    "local": "调节过滤器强度的参数。较大的h值可以完美地去除噪声，但也可以去除图像细节，较小的h值可以保留细节，但也可以保留一些噪声"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fastNlMeansDenoisingMulti()",
    "local": "FastNLmeansDe噪多（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "void cv::fastNlMeansDenoisingMulti",
    "local": "void cv：：fastnl表示噪声多"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "srcImgs",
    "local": "srcImgs公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "imgToDenoiseIndex",
    "local": "IMG噪声指数"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "temporalWindowSize",
    "local": "临时窗口大小"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt; float &gt; &amp;",
    "local": "常量标准：：向量&lt；浮动&gt&amp；"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "normType",
    "local": "标准"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoisingMulti(",
    "local": "cv.FastNL意味着噪音多("
  },
  {
    "origin": "srcImgs, imgToDenoiseIndex, temporalWindowSize[, dst[, h[, templateWindowSize[, searchWindowSize]]]]",
    "local": "srcImgs、imgToDenoiseIndex、temporalWindowSize[、dst[、h[、templateWindowSize[、searchWindowSize]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.fastNlMeansDenoisingMulti(",
    "local": "cv.FastNL意味着噪音多("
  },
  {
    "origin": "srcImgs, imgToDenoiseIndex, temporalWindowSize, h[, dst[, templateWindowSize[, searchWindowSize[, normType]]]]",
    "local": "srcImgs，imgToDenoiseIndex，temporalWindowSize，h[，dst[，templateWindowSize[，searchWindowSize[，normType]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Modification of fastNlMeansDenoising function for images sequence where consecutive images have been captured in small period of time. For example video. This version of the function is for grayscale images or for manual manipulation with colorspaces. For more details see",
    "local": "对小时间内连续捕获的图像序列的FastNLMeans去噪函数的改进。例如视频。此版本的函数用于灰度图像或使用颜色空间进行手动操作。有关详细信息，请参阅"
  },
  {
    "origin": "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.131.6394",
    "local": "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.131.6394"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "srcImgs",
    "local": "srcImgs公司"
  },
  {
    "origin": "Input 8-bit or 16-bit (only with NORM_L1) 1-channel, 2-channel, 3-channel or 4-channel images sequence. All images should have the same type and size.",
    "local": "输入8位或16位（仅适用于NORM\\ L1）1通道、2通道、3通道或4通道图像序列。所有图像应具有相同的类型和大小。"
  },
  {
    "origin": "imgToDenoiseIndex",
    "local": "IMG噪声指数"
  },
  {
    "origin": "Target image to denoise index in srcImgs sequence",
    "local": "srcImgs序列中目标图像去噪指标的研究"
  },
  {
    "origin": "temporalWindowSize",
    "local": "临时窗口大小"
  },
  {
    "origin": "Number of surrounding images to use for target image denoising. Should be odd. Images from imgToDenoiseIndex - temporalWindowSize / 2 to imgToDenoiseIndex - temporalWindowSize / 2 from srcImgs will be used to denoise srcImgs[imgToDenoiseIndex] image.",
    "local": "用于目标图像去噪的周围图像数。应该很奇怪。来自srcImgs的imgToDenoiseIndex-temporalWindowSize/2到imgToDenoiseIndex-temporalWindowSize/2的图像将用于去除srcImgs[imgToDenoiseIndex]图像的噪声。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "Output image with the same size and type as srcImgs images.",
    "local": "输出与srcImgs图像大小和类型相同的图像。"
  },
  {
    "origin": "templateWindowSize",
    "local": "模板窗口大小"
  },
  {
    "origin": "Size in pixels of the template patch that is used to compute weights. Should be odd. Recommended value 7 pixels",
    "local": "用于计算权重的模板面片的大小（以像素为单位）。应该很奇怪。建议值7像素"
  },
  {
    "origin": "searchWindowSize",
    "local": "搜索窗口大小"
  },
  {
    "origin": "Size in pixels of the window that is used to compute weighted average for given pixel. Should be odd. Affect performance linearly: greater searchWindowsSize - greater denoising time. Recommended value 21 pixels",
    "local": "窗口的像素大小，用于计算给定像素的加权平均值。应该很奇怪。线性影响性能：搜索窗口大小越大-去噪时间越长。建议值21像素"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "Array of parameters regulating filter strength, either one parameter applied to all channels or one per channel in dst. Big h value perfectly removes noise but also removes image details, smaller h value preserves details but also preserves some noise",
    "local": "调节滤波器强度的参数数组，一个参数应用于所有信道或dst中每个信道一个参数。大的h值完美地去除了噪声，但也去除了图像细节，小的h值保留了细节，但也保留了一些噪声"
  },
  {
    "origin": "normType",
    "local": "标准"
  },
  {
    "origin": "Type of norm used for weight calculation. Can be either NORM_L2 or NORM_L1",
    "local": "用于重量计算的标准类型。可以是NORM_L2或NORM_L1"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "nonLocalMeans()",
    "local": "非本地方式（）"
  },
  {
    "origin": "void cv::cuda::nonLocalMeans",
    "local": "void cv:：cuda:：nonLocalMeans"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "search_window",
    "local": "搜索\\u窗口"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "block_size",
    "local": "块大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "borderMode",
    "local": "边界模式"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Performs pure non local means denoising without any simplification, and thus it is not fast.",
    "local": "在没有任何简化的情况下执行纯非局部均值去噪，因此速度不快。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Source image. Supports only CV_8UC1, CV_8UC2 and CV_8UC3.",
    "local": "源图像。仅支持CV8uc1、CV8uc2和CV8uc3。"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "Destination image.",
    "local": "目标图像。"
  },
  {
    "origin": "h",
    "local": "小时"
  },
  {
    "origin": "sigma regulating filter strength for color.",
    "local": "西格玛调节颜色的过滤强度。"
  },
  {
    "origin": "search_window",
    "local": "搜索\\u窗口"
  },
  {
    "origin": "Size of search window.",
    "local": "搜索窗口的大小。"
  },
  {
    "origin": "block_size",
    "local": "块大小"
  },
  {
    "origin": "Size of block used for computing weights.",
    "local": "用于计算重量的块的大小。"
  },
  {
    "origin": "borderMode",
    "local": "边界模式"
  },
  {
    "origin": "Border type. See borderInterpolate for details. BORDER_REFLECT101 , BORDER_REPLICATE , BORDER_CONSTANT , BORDER_REFLECT and BORDER_WRAP are supported for now.",
    "local": "边框类型。有关详细信息，请参见borderInterpolate。目前支持BORDER\\u REFLECT101、BORDER\\u REPLICATE、BORDER\\u CONSTANT、BORDER\\u REFLECT和BORDER\\u WRAP。"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "for the asynchronous version.",
    "local": "对于异步版本。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:41为OpenCV生成"
  }
]