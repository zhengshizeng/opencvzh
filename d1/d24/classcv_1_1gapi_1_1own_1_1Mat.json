[
  {
    "origin": "OpenCV: cv::gapi::own::Mat Class Reference",
    "local": "OpenCV:cv:：gapi:：own:：Mat类引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::gapi::own::Mat Class Reference",
    "local": "cv:：gapi:：own:：Mat类引用"
  },
  {
    "origin": "Inheritance diagram for cv::gapi::own::Mat:",
    "local": "cv:：gapi:：own:：Mat的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "()=default",
    "local": "（）=默认值"
  },
  {
    "origin": "(int _rows, int _cols, int _type, void *_data, size_t _step=",
    "local": "（int行，int列，int类型，void*\\u数据，大小\\u t\\u步长）="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;_dims, int _type, void *_data)",
    "local": "（const std：：向量&lt；内部&gt&amp_dims，int类型，void*\\u数据）"
  },
  {
    "origin": "(std::vector&lt; int &gt; &amp;&amp;_dims, int _type, void *_data)",
    "local": "（标准：：向量&lt；内部&gt&amp&amp_dims，int类型，void*\\u数据）"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const &amp;src, const",
    "local": "const&amp；src，const"
  },
  {
    "origin": "&amp;roi)",
    "local": "&amp；投资回报率）"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const &amp;)=default",
    "local": "常量（&amp；）=违约"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;)=default",
    "local": "&amp&amp；）=违约"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns the number of matrix channels.",
    "local": "返回矩阵通道数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Creates a full copy of the matrix and the underlying data.",
    "local": "创建矩阵和基础数据的完整副本。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;dst) const",
    "local": "&amp；（dst）常数"
  },
  {
    "origin": "Copies the matrix to another one.",
    "local": "将矩阵复制到另一个矩阵。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(int _rows, int _cols, int _type)",
    "local": "（int行，int列，int类型）"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "_size, int _type)",
    "local": "_尺寸，整数类型）"
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;_dims, int _type)",
    "local": "（const std：：向量&lt；内部&gt&amp_尺寸，内部类型）"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns the depth of a matrix element.",
    "local": "返回矩阵元素的深度。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns the matrix element size in bytes.",
    "local": "返回以字节为单位的矩阵元素大小。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the array has no elements.",
    "local": "如果数组没有元素，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;roi) const",
    "local": "&amp；AROI）常数"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const &amp;)=default",
    "local": "常量（&amp；）=违约"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;)=default",
    "local": "&amp&amp；）=违约"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;s)",
    "local": "&amp；秒）"
  },
  {
    "origin": "Sets all or some of the array elements to the specified value.",
    "local": "将所有或部分数组元素设置为指定值。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(int row, int col=0)",
    "local": "（int行，int列=0）"
  },
  {
    "origin": "Returns a pointer to the specified matrix row.",
    "local": "返回指向指定矩阵行的指针。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "(int row, int col=0) const",
    "local": "（int行，int列=0）常量"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns the total number of array elements.",
    "local": "返回数组元素的总数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns the type of a matrix element.",
    "local": "返回矩阵元素的类型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "()=default",
    "local": "（）=默认值"
  },
  {
    "origin": "(int _rows, int _cols, int type, void *_data, size_t _step)",
    "local": "（int行、int列、int类型、void*\\u数据、size\\u t\\u步长）"
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;_dims, int type, void *_data)",
    "local": "（const std：：向量&lt；内部&gt&amp_dims，int类型，void*\\u数据）"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;)=default",
    "local": "&amp；）=违约"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;src)",
    "local": "&amp&amp；（src）"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;)=default",
    "local": "&amp；）=违约"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;&amp;src)",
    "local": "&amp&amp；（src）"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "&#160;Public Types inherited from",
    "local": "&#160;继承自的公共类型"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "= 0 }",
    "local": "= 0 }"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "= 0x00000FFF }",
    "local": "=0x00000FFF}"
  },
  {
    "origin": "&#160;Public Attributes inherited from",
    "local": "&#160;继承自的公共属性"
  },
  {
    "origin": "= nullptr",
    "local": "=空PTR"
  },
  {
    "origin": "pointer to the data",
    "local": "指向数据的指针"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "dimensions (ND-case)",
    "local": "尺寸（ND箱）"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "the number of rows and columns or (-1, -1) when the matrix has more than 2 dimensions",
    "local": "矩阵有两个以上维度时的行数和列数或（-1，-1）"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "Mat()",
    "local": "材料（）"
  },
  {
    "origin": "[1/7]",
    "local": "[1/7]"
  },
  {
    "origin": "cv::gapi::own::Mat::Mat",
    "local": "cv：：gapi：：own：：Mat：：Mat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "default",
    "local": "违约"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "Mat()",
    "local": "材料（）"
  },
  {
    "origin": "[2/7]",
    "local": "[2/7]"
  },
  {
    "origin": "cv::gapi::own::Mat::Mat",
    "local": "cv：：gapi：：own：：Mat：：Mat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "_rows",
    "local": "_行"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_cols",
    "local": "美国Cols"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_type",
    "local": "_类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_data",
    "local": "_数据"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_step",
    "local": "_步骤"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "_rows",
    "local": "_行"
  },
  {
    "origin": "Number of rows in a 2D array.",
    "local": "二维数组中的行数。"
  },
  {
    "origin": "_cols",
    "local": "美国Cols"
  },
  {
    "origin": "Number of columns in a 2D array.",
    "local": "二维数组中的列数。"
  },
  {
    "origin": "_type",
    "local": "_类型"
  },
  {
    "origin": "Array type. Use CV_8UC1, ..., CV_64FC4 to create 1-4 channel matrices, or",
    "local": "数组类型。使用CV_8UC1，…，CV_64FC4创建1-4个通道矩阵，或"
  },
  {
    "origin": ", ...,",
    "local": ", ...,"
  },
  {
    "origin": "to create multi-channel (up to CV_CN_MAX channels) matrices.",
    "local": "创建多通道（最多CV\\U CN\\U MAX通道）矩阵。"
  },
  {
    "origin": "_data",
    "local": "_数据"
  },
  {
    "origin": "Pointer to the user data. Matrix constructors that take data and step parameters do not allocate matrix data. Instead, they just initialize the matrix header that points to the specified data, which means that no data is copied. This operation is very efficient and can be used to process external data using OpenCV functions. The external data is not automatically deallocated, so you should take care of it.",
    "local": "指向用户数据的指针。接受数据和步长参数的矩阵构造函数不分配矩阵数据。相反，它们只是初始化指向指定数据的矩阵头，这意味着不复制任何数据。此操作非常有效，可以使用OpenCV函数处理外部数据。外部数据不会自动解除分配，因此您应该注意它。"
  },
  {
    "origin": "_step",
    "local": "_步骤"
  },
  {
    "origin": "Number of bytes each matrix row occupies. The value should include the padding bytes at the end of each row, if any. If the parameter is missing (set to AUTO_STEP ), no padding is assumed and the actual step is calculated as cols*elemSize(). See",
    "local": "每个矩阵行占用的字节数。该值应包括每行末尾的填充字节（如果有）。如果缺少参数（设置为AUTO\\u STEP），则不假设填充，实际步长计算为cols*elemSize（）。看到了吗"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "Mat()",
    "local": "材料（）"
  },
  {
    "origin": "[3/7]",
    "local": "[3/7]"
  },
  {
    "origin": "cv::gapi::own::Mat::Mat",
    "local": "cv：：gapi：：own：：Mat：：Mat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "_dims",
    "local": "u形变暗"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_type",
    "local": "_类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_data",
    "local": "_数据"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "Mat()",
    "local": "材料（）"
  },
  {
    "origin": "[4/7]",
    "local": "[4/7]"
  },
  {
    "origin": "cv::gapi::own::Mat::Mat",
    "local": "cv：：gapi：：own：：Mat：：Mat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "_dims",
    "local": "u形变暗"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_type",
    "local": "_类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_data",
    "local": "_数据"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "Mat()",
    "local": "材料（）"
  },
  {
    "origin": "[5/7]",
    "local": "[5/7]"
  },
  {
    "origin": "cv::gapi::own::Mat::Mat",
    "local": "cv：：gapi：：own：：Mat：：Mat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "roi",
    "local": "投资回报率"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "Mat()",
    "local": "材料（）"
  },
  {
    "origin": "[6/7]",
    "local": "[6/7]"
  },
  {
    "origin": "cv::gapi::own::Mat::Mat",
    "local": "cv：：gapi：：own：：Mat：：Mat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "default",
    "local": "违约"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "Mat()",
    "local": "材料（）"
  },
  {
    "origin": "[7/7]",
    "local": "[7/7]"
  },
  {
    "origin": "cv::gapi::own::Mat::Mat",
    "local": "cv：：gapi：：own：：Mat：：Mat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "default",
    "local": "违约"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "channels()",
    "local": "频道（）"
  },
  {
    "origin": "int cv::gapi::own::Mat::channels",
    "local": "int cv：：gapi：：own：：Mat：：通道"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Returns the number of matrix channels.",
    "local": "返回矩阵通道数。"
  },
  {
    "origin": "The method returns the number of matrix channels. If matrix is N-dimensional, -1 is returned.",
    "local": "该方法返回矩阵通道数。如果矩阵是N维的，则返回-1。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "clone()",
    "local": "克隆（）"
  },
  {
    "origin": "cv::gapi::own::Mat::clone",
    "local": "cv:：gapi:：own:：Mat:：克隆"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Creates a full copy of the matrix and the underlying data.",
    "local": "创建矩阵和基础数据的完整副本。"
  },
  {
    "origin": "The method creates a full copy of the matrix. The original step[] is not taken into account. So, the copy has a continuous buffer occupying",
    "local": "该方法创建矩阵的完整副本。不考虑原始步骤[]。因此，副本有一个连续的缓冲区"
  },
  {
    "origin": "*",
    "local": "*"
  },
  {
    "origin": "bytes.",
    "local": "字节。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "copyTo()",
    "local": "复制到（）"
  },
  {
    "origin": "void cv::gapi::own::Mat::copyTo",
    "local": "void cv:：gapi:：own:：Mat:：copyTo无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Copies the matrix to another one.",
    "local": "将矩阵复制到另一个矩阵。"
  },
  {
    "origin": "The method copies the matrix data to another matrix. Before copying the data, the method invokes :",
    "local": "该方法将矩阵数据复制到另一个矩阵。在复制数据之前，该方法调用："
  },
  {
    "origin": "so that the destination matrix is reallocated if needed. While m.copyTo(m); works flawlessly, the function does not handle the case of a partial overlap between the source and the destination matrices.",
    "local": "以便在需要时重新分配目标矩阵。而m.copyTo（m）；工作完美，该函数不处理源和目标矩阵之间部分重叠的情况。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "[1/3]",
    "local": "[1/3]"
  },
  {
    "origin": "void cv::gapi::own::Mat::create",
    "local": "void cv:：gapi:：own:：Mat:：create无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "_rows",
    "local": "_行"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_cols",
    "local": "美国Cols"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_type",
    "local": "_类型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "_rows",
    "local": "_行"
  },
  {
    "origin": "New number of rows.",
    "local": "新的行数。"
  },
  {
    "origin": "_cols",
    "local": "美国Cols"
  },
  {
    "origin": "New number of columns.",
    "local": "新列数。"
  },
  {
    "origin": "_type",
    "local": "_类型"
  },
  {
    "origin": "New matrix type.",
    "local": "新矩阵类型。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "[2/3]",
    "local": "[2/3]"
  },
  {
    "origin": "void cv::gapi::own::Mat::create",
    "local": "void cv:：gapi:：own:：Mat:：create无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "_size",
    "local": "_大小"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_type",
    "local": "_类型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "_size",
    "local": "_大小"
  },
  {
    "origin": "Alternative new matrix size specification: Size(cols, rows)",
    "local": "替代新矩阵大小规范：大小（列、行）"
  },
  {
    "origin": "_type",
    "local": "_类型"
  },
  {
    "origin": "New matrix type.",
    "local": "新矩阵类型。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "[3/3]",
    "local": "[3/3]"
  },
  {
    "origin": "void cv::gapi::own::Mat::create",
    "local": "void cv:：gapi:：own:：Mat:：create无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "_dims",
    "local": "u形变暗"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "_type",
    "local": "_类型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "depth()",
    "local": "深度（）"
  },
  {
    "origin": "int cv::gapi::own::Mat::depth",
    "local": "int cv：：gapi：：own：：Mat：：深度"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Returns the depth of a matrix element.",
    "local": "返回矩阵元素的深度。"
  },
  {
    "origin": "The method returns the identifier of the matrix element depth (the type of each individual channel). For example, for a 16-bit signed element array, the method returns CV_16S . A complete list of matrix types contains the following values:",
    "local": "该方法返回矩阵元素深度的标识符（每个通道的类型）。例如，对于16位有符号元素数组，该方法返回CVØ16S。矩阵类型的完整列表包含以下值："
  },
  {
    "origin": "CV_8U - 8-bit unsigned integers ( 0..255 )",
    "local": "cv8u-8位无符号整数（0..255）"
  },
  {
    "origin": "CV_8S - 8-bit signed integers ( -128..127 )",
    "local": "cv8s-8位有符号整数（-128..127）"
  },
  {
    "origin": "CV_16U - 16-bit unsigned integers ( 0..65535 )",
    "local": "cv16u-16位无符号整数（0..65535）"
  },
  {
    "origin": "CV_16S - 16-bit signed integers ( -32768..32767 )",
    "local": "cv16s-16位有符号整数（-32768..32767）"
  },
  {
    "origin": "CV_32S - 32-bit signed integers ( -2147483648..2147483647 )",
    "local": "cv32s-32位有符号整数（-2147483648..2147483647）"
  },
  {
    "origin": "CV_32F - 32-bit floating-point numbers ( -FLT_MAX..FLT_MAX, INF, NAN )",
    "local": "CV_32F-32位浮点数（-FLT_MAX..FLT_MAX，INF，NAN）"
  },
  {
    "origin": "CV_64F - 64-bit floating-point numbers ( -DBL_MAX..DBL_MAX, INF, NAN )",
    "local": "CV_64F—64位浮点数（-DBL_MAX..DBL_MAX，INF，NAN）"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "elemSize()",
    "local": "元素"
  },
  {
    "origin": "size_t cv::gapi::own::Mat::elemSize",
    "local": "大小\\u t cv：：gapi：：own：：Mat：：elemSize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Returns the matrix element size in bytes.",
    "local": "返回以字节为单位的矩阵元素大小。"
  },
  {
    "origin": "The method returns the matrix element size in bytes. For example, if the matrix type is CV_16SC3 , the method returns 3*sizeof(short) or 6.",
    "local": "该方法返回以字节为单位的矩阵元素大小。例如，如果矩阵类型是cv16sc3，则该方法返回3*sizeof（short）或6。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "empty()",
    "local": "空（）"
  },
  {
    "origin": "bool cv::gapi::own::Mat::empty",
    "local": "bool cv：：gapi：：own：：Mat：：空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Returns true if the array has no elements.",
    "local": "如果数组没有元素，则返回true。"
  },
  {
    "origin": "The method returns true if",
    "local": "如果"
  },
  {
    "origin": "is 0 or if",
    "local": "为0或如果"
  },
  {
    "origin": "is NULL. Because of pop_back() and",
    "local": "为空。因为pop_back（）和"
  },
  {
    "origin": "methods",
    "local": "方法"
  },
  {
    "origin": "does not imply that",
    "local": "并不意味着"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "operator()()",
    "local": "运算符（）（）"
  },
  {
    "origin": "cv::gapi::own::Mat::operator()",
    "local": "cv:：gapi:：own:：Mat:：operator（）"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "roi",
    "local": "投资回报率"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "roi",
    "local": "投资回报率"
  },
  {
    "origin": "Extracted submatrix specified as a rectangle.",
    "local": "提取指定为矩形的子矩阵。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "operator=()",
    "local": "运算符=（）"
  },
  {
    "origin": "[1/3]",
    "local": "[1/3]"
  },
  {
    "origin": "&amp; cv::gapi::own::Mat::operator=",
    "local": "&amp；cv:：gapi:：own:：Mat:：运算符="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "default",
    "local": "违约"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "operator=()",
    "local": "运算符=（）"
  },
  {
    "origin": "[2/3]",
    "local": "[2/3]"
  },
  {
    "origin": "&amp; cv::gapi::own::Mat::operator=",
    "local": "&amp；cv:：gapi:：own:：Mat:：运算符="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "default",
    "local": "违约"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "operator=()",
    "local": "运算符=（）"
  },
  {
    "origin": "[3/3]",
    "local": "[3/3]"
  },
  {
    "origin": "&amp; cv::gapi::own::Mat::operator=",
    "local": "&amp；cv:：gapi:：own:：Mat:：运算符="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "s",
    "local": "s"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Sets all or some of the array elements to the specified value.",
    "local": "将所有或部分数组元素设置为指定值。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "s",
    "local": "s"
  },
  {
    "origin": "Assigned scalar converted to the actual array type.",
    "local": "指定的标量转换为实际数组类型。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "ptr()",
    "local": "ptr（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "* cv::gapi::own::Mat::ptr",
    "local": "*cv：：gapi：：own：：Mat：：ptr"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "row",
    "local": "行"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "col",
    "local": "列"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Returns a pointer to the specified matrix row.",
    "local": "返回指向指定矩阵行的指针。"
  },
  {
    "origin": "The methods return",
    "local": "方法返回"
  },
  {
    "origin": "or typed pointer to the specified matrix row. See the sample in",
    "local": "或指向指定矩阵行的类型化指针。请参见中的示例"
  },
  {
    "origin": "to know how to use these methods.",
    "local": "知道如何使用这些方法。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "row",
    "local": "行"
  },
  {
    "origin": "col",
    "local": "列"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "ptr()",
    "local": "ptr（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "* cv::gapi::own::Mat::ptr",
    "local": "*cv：：gapi：：own：：Mat：：ptr"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "row",
    "local": "行"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "col",
    "local": "列"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "total()",
    "local": "总计（）"
  },
  {
    "origin": "size_t cv::gapi::own::Mat::total",
    "local": "大小：cv：：gapi：：own：：Mat：：total"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Returns the total number of array elements.",
    "local": "返回数组元素的总数。"
  },
  {
    "origin": "The method returns the number of array elements (a number of pixels if the array represents an image).",
    "local": "该方法返回数组元素的数量（如果数组表示图像，则返回像素的数量）。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "type()",
    "local": "类型（）"
  },
  {
    "origin": "int cv::gapi::own::Mat::type",
    "local": "int cv:：gapi:：own:：Mat:：type类型"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Returns the type of a matrix element.",
    "local": "返回矩阵元素的类型。"
  },
  {
    "origin": "The method returns a matrix element type. This is an identifier compatible with the CvMat type system, like CV_16SC3 or 16-bit signed 3-channel array, and so on.",
    "local": "该方法返回矩阵元素类型。这是一个与CvMat类型系统兼容的标识符，如CV\\ U 16SC3或16位有符号3通道阵列等。"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/gapi/own/",
    "local": "opencv2/gapi/own公司/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:47为OpenCV生成，&#160；"
  }
]