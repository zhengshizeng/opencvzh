[
  {
    "origin": "OpenCV: cv::xfeatures2d::BoostDesc Class Reference",
    "local": "OpenCV:cv:：xfeature2d:：BoostDesc类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::xfeatures2d::BoostDesc Class Reference",
    "local": "cv:：xfeatures2d:：BoostDesc类引用"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "»",
    "local": "»"
  },
  {
    "origin": "Class implementing",
    "local": "类实现"
  },
  {
    "origin": "(Learning Image Descriptors with Boosting), described in",
    "local": "（使用Boosting学习图像描述符），如中所述"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::xfeatures2d::BoostDesc:",
    "local": "cv:：xfeatures2d:：BoostDesc的继承关系图："
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, std::vector&lt;",
    "local": "图像，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints,",
    "local": "&燃气轮机&amp；关键点，"
  },
  {
    "origin": "descriptors)",
    "local": "描述符）"
  },
  {
    "origin": "Computes the descriptors for a set of keypoints detected in an image (first variant) or image set (second variant).",
    "local": "计算在图像（第一变体）或图像集（第二变体）中检测到的一组关键点的描述符。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "images, std::vector&lt; std::vector&lt;",
    "local": "图像，标准：：向量&lt；标准：：向量&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;keypoints,",
    "local": "&gt；&quot；&gt；gt；&amp；关键点，"
  },
  {
    "origin": "descriptors)",
    "local": "描述符）"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, std::vector&lt;",
    "local": "图像，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints,",
    "local": "&燃气轮机&amp；关键点，"
  },
  {
    "origin": "mask=",
    "local": "遮罩="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Detects keypoints in an image (first variant) or image set (second variant).",
    "local": "检测图像（第一种变体）或图像集（第二种变体）中的关键点。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "images, std::vector&lt; std::vector&lt;",
    "local": "图像，标准：：向量&lt；标准：：向量&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;keypoints,",
    "local": "&gt；&quot；&gt；gt；&amp；关键点，"
  },
  {
    "origin": "masks=",
    "local": "面具="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image,",
    "local": "图像，"
  },
  {
    "origin": "mask, std::vector&lt;",
    "local": "掩码，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints,",
    "local": "&燃气轮机&amp；关键点，"
  },
  {
    "origin": "descriptors, bool useProvidedKeypoints=false)",
    "local": "描述符，bool useProvidedKeypoints=false）"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Return true if detector object is empty.",
    "local": "如果探测器对象为空，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fileName)",
    "local": "&amp；文件名）"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;)",
    "local": "&amp；）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fileName) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;) const",
    "local": "&amp；）常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(int desc=",
    "local": "（国际）="
  },
  {
    "origin": ", bool use_scale_orientation=true, float scale_factor=6.25f)",
    "local": "，布尔使用\\比例\\方向=真，浮动比例\\系数=6.25f）"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Class implementing",
    "local": "类实现"
  },
  {
    "origin": "(Learning Image Descriptors with Boosting), described in",
    "local": "（使用Boosting学习图像描述符），如中所述"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "desc",
    "local": "描述"
  },
  {
    "origin": "type of descriptor to use,",
    "local": "要使用的描述符类型，"
  },
  {
    "origin": "is default (256 bit long dimension) Available types are:",
    "local": "默认情况下（256位长维度），可用类型有："
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "use_orientation",
    "local": "使用\\u方向"
  },
  {
    "origin": "sample patterns using keypoints orientation, enabled by default",
    "local": "使用默认启用的关键点方向的样例图案"
  },
  {
    "origin": "scale_factor",
    "local": "比例因数"
  },
  {
    "origin": "adjust the sampling window of detected keypoints 6.25f is default and fits for",
    "local": "调整检测到的关键点的采样窗口6.25f是默认值，适用于"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "detected keypoints window ratio 6.75f should be the scale for",
    "local": "检测到的关键点窗口比率6.75f应为"
  },
  {
    "origin": "detected keypoints window ratio 5.00f should be the scale for",
    "local": "检测到的关键点窗口比率5.00f应为"
  },
  {
    "origin": ", MSD, AGAST, FAST,",
    "local": "，MSD，AGAST，FAST，"
  },
  {
    "origin": "keypoints window ratio 0.75f should be the scale for",
    "local": "关键点窗口比率0.75f应为"
  },
  {
    "origin": "keypoints ratio 1.50f was the default in original implementation",
    "local": "keypoints ratio 1.50f是原始实现中的默认值"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "BGM is the base descriptor where each binary dimension is computed as the output of a single weak learner. BGM_HARD and BGM_BILINEAR refers to same BGM but use different type of gradient binning. In the BGM_HARD that use ASSIGN_HARD binning type the gradient is assigned to the nearest orientation bin. In the BGM_BILINEAR that use ASSIGN_BILINEAR binning type the gradient is assigned to the two neighbouring bins. In the BGM and all other modes that use ASSIGN_SOFT binning type the gradient is assigned to 8 nearest bins according to the cosine value between the gradient angle and the bin center. LBGM (alias FP-Boost) is the floating point extension where each dimension is computed as a linear combination of the weak learner responses. BINBOOST and subvariants are the binary extensions of LBGM where each bit is computed as a thresholded linear combination of a set of weak learners.",
    "local": "BGM是一个基本描述符，其中每个二进制维数被计算为单个弱学习者的输出。BGM\\u HARD和BGM\\u双线性表示相同的BGM，但使用不同类型的梯度分块。在使用ASSIGN\\u HARD binning类型的BGM\\u HARD中，梯度被指定给最近的定向箱。在使用ASSIGN\\u双线性装箱类型的BGM\\u双线性中，梯度被分配给两个相邻的装箱。在BGM和所有其他使用ASSIGN\\ U软装箱类型的模式中，根据梯度角度和箱子中心之间的余弦值，将梯度分配给8个最近的箱子。LBGM（别名FP-Boost）是一种浮点扩展，其中每个维度都被计算为弱学习者响应的线性组合。BINBOOST和subvariants是LBGM的二进制扩展，其中每个比特被计算为一组弱学习者的阈值线性组合。"
  },
  {
    "origin": "header files (boostdesc_*.i) was exported from original binaries with export-boostdesc.py script from samples subfolder.",
    "local": "头文件（boostdesc.*.i）是用export-boostdesc.py脚本从samples子文件夹从原始二进制文件导出的。"
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": "成员枚举文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "BGM",
    "local": "背景音乐"
  },
  {
    "origin": "BGM_HARD",
    "local": "BGM\\U硬"
  },
  {
    "origin": "BGM_BILINEAR",
    "local": "双线性"
  },
  {
    "origin": "LBGM",
    "local": "LBGM公司"
  },
  {
    "origin": "BINBOOST_64",
    "local": "比努64"
  },
  {
    "origin": "BINBOOST_128",
    "local": "比努128"
  },
  {
    "origin": "BINBOOST_256",
    "local": "比努256"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::xfeatures2d::BoostDesc::create",
    "local": "&燃气轮机；cv:：xFeature2D:：BoostDesc:：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "desc",
    "local": "描述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "use_scale_orientation",
    "local": "使用缩放方向"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "scale_factor",
    "local": "比例因数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xfeatures2d.BoostDesc_create(",
    "local": "cv.xfeature2d.BoostDesc\\u创建("
  },
  {
    "origin": "[, desc[, use_scale_orientation[, scale_factor]]]",
    "local": "[，描述[，使用缩放方向[，缩放因子]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getScaleFactor()",
    "local": "getScaleFactor（）"
  },
  {
    "origin": "virtual float cv::xfeatures2d::BoostDesc::getScaleFactor",
    "local": "虚拟浮点cv:：xFeature2D:：BoostDesc:：getScaleFactor"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xfeatures2d_BoostDesc.getScaleFactor(",
    "local": "cv.xfeature2d\\u BoostDesc.getScaleFactor("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getUseScaleOrientation()",
    "local": "getUseScaleOrientation（）"
  },
  {
    "origin": "virtual bool cv::xfeatures2d::BoostDesc::getUseScaleOrientation",
    "local": "虚拟bool cv:：xfeature2d:：BoostDesc:：getUseScaleOrientation"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xfeatures2d_BoostDesc.getUseScaleOrientation(",
    "local": "cv.xfeatures2d\\u BoostDesc.getUseScaleOrientation特性("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setScaleFactor()",
    "local": "设置比例因子（）"
  },
  {
    "origin": "virtual void cv::xfeatures2d::BoostDesc::setScaleFactor",
    "local": "虚空cv:：xFeature2D:：BoostDesc:：setScaleFactor"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const float",
    "local": "常量浮点"
  },
  {
    "origin": "scale_factor",
    "local": "比例因数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xfeatures2d_BoostDesc.setScaleFactor(",
    "local": "cv.X特征2D\\U BoostDesc.setScaleFactor("
  },
  {
    "origin": "scale_factor",
    "local": "比例因数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setUseScaleOrientation()",
    "local": "setUseScaleOrientation（）"
  },
  {
    "origin": "virtual void cv::xfeatures2d::BoostDesc::setUseScaleOrientation",
    "local": "虚空cv:：xFeature2D:：BoostDesc:：setUseScaleOrientation"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const bool",
    "local": "康斯特布尔"
  },
  {
    "origin": "use_scale_orientation",
    "local": "使用缩放方向"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.xfeatures2d_BoostDesc.setUseScaleOrientation(",
    "local": "cv.xfeatures2d\\u BoostDesc.setusescale方向("
  },
  {
    "origin": "use_scale_orientation",
    "local": "使用缩放方向"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:49 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:49为OpenCV生成"
  }
]