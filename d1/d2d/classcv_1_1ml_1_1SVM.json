[
  {
    "origin": "OpenCV: cv::ml::SVM Class Reference",
    "local": "OpenCV:cv:：ml:：SVM类参考"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::ml::SVM Class Reference",
    "local": "cv:：ml:：SVM类参考"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "Support Vector Machines.",
    "local": "支持向量机。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::ml::SVM:",
    "local": "cv:：ml:：SVM的继承关系图："
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "SVM kernel type",
    "local": "支持向量机核类型"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "SVM params type",
    "local": "SVM参数类型"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "SVM type",
    "local": "支持向量机类型"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Types inherited from",
    "local": "继承自的公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "(int i,",
    "local": "（内景一），"
  },
  {
    "origin": "alpha,",
    "local": "阿尔法，"
  },
  {
    "origin": "Retrieves the decision function.",
    "local": "检索决策函数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Retrieves all the support vectors.",
    "local": "检索所有支持向量。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Retrieves all the uncompressed support vectors of a linear SVM.",
    "local": "检索线性支持向量机的所有未压缩支持向量。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "Cgrid=",
    "local": "Cgrid公司="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "gammaGrid=",
    "local": "伽玛射线="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "pGrid=",
    "local": "pGrid公司="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "nuGrid=",
    "local": "nuGrid？"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "coeffGrid=",
    "local": "系数网格="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "degreeGrid=",
    "local": "网格="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Trains an SVM with optimal parameters.",
    "local": "用最优参数训练支持向量机。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples, int layout,",
    "local": "样本，int布局，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; Cgrid=",
    "local": "&燃气轮机；Cgrid公司="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; gammaGrid=",
    "local": "&燃气轮机；伽玛射线="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; pGrid=",
    "local": "&燃气轮机；pGrid公司="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; nuGrid=",
    "local": "&燃气轮机；网格="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; coeffGrid=",
    "local": "&燃气轮机；系数网格="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "),",
    "local": "),"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; degreeGrid=",
    "local": "&燃气轮机；网格="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Trains an SVM with optimal parameters.",
    "local": "用最优参数训练支持向量机。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;data, bool test,",
    "local": "&gt；gt；amp；数据，布尔测试，"
  },
  {
    "origin": "resp) const",
    "local": "（负责）施工"
  },
  {
    "origin": "Computes error on the training or test dataset.",
    "local": "计算训练或测试数据集上的错误。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "Returns the number of variables in training samples.",
    "local": "返回训练样本中的变量数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "Returns true if the model is classifier.",
    "local": "如果模型是分类器，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "Returns true if the model is trained.",
    "local": "如果模型经过训练，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples,",
    "local": "样品，"
  },
  {
    "origin": "results=",
    "local": "结果="
  },
  {
    "origin": "(), int flags=0) const =0",
    "local": "（），int flags=0）const=0"
  },
  {
    "origin": "Predicts response(s) for the provided sample(s)",
    "local": "预测所提供样本的响应"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;trainData, int flags=0)",
    "local": "&gt；gt；amp；列车数据，int标志=0）"
  },
  {
    "origin": "Trains the statistical model.",
    "local": "训练统计模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples, int layout,",
    "local": "样本，int布局，"
  },
  {
    "origin": "responses)",
    "local": "答复）"
  },
  {
    "origin": "Trains the statistical model.",
    "local": "训练统计模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(int param_id)",
    "local": "（int停止id）"
  },
  {
    "origin": "Generates a grid for SVM parameters.",
    "local": "为SVM参数生成网格。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(int param_id)",
    "local": "（int停止id）"
  },
  {
    "origin": "Generates a grid for SVM parameters.",
    "local": "为SVM参数生成网格。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filepath)",
    "local": "&amp；文件路径）"
  },
  {
    "origin": "Loads and creates a serialized svm from a file.",
    "local": "从文件加载并创建序列化的svm。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;data, int flags=0)",
    "local": "&燃气轮机&amp；数据，int标志=0）"
  },
  {
    "origin": "Create and train model with default parameters.",
    "local": "使用默认参数创建和训练模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Support Vector Machines.",
    "local": "支持向量机。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": "成员枚举文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "KernelTypes",
    "local": "内核"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "SVM kernel type",
    "local": "支持向量机核类型"
  },
  {
    "origin": "A comparison of different kernels on the following 2D test case with four classes. Four",
    "local": "比较以下四个类的2D测试用例的不同内核。四"
  },
  {
    "origin": "SVMs have been trained (one against rest) with auto_train. Evaluation on three different kernels (",
    "local": "支持向量机已经用auto\\u训练进行了训练（一对一）。三种不同籽粒的评价("
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "). The color depicts the class with max score. Bright means max-score &gt; 0, dark means max-score &lt; 0.",
    "local": "). 该颜色描绘了得分最高的班级。明亮意味着最高分数&gt；0，深色表示最大分数&lt；0"
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "CUSTOM",
    "local": "自定义"
  },
  {
    "origin": "Returned by",
    "local": "退回人"
  },
  {
    "origin": "in case when custom kernel has been set",
    "local": "如果自定义内核已设置"
  },
  {
    "origin": "LINEAR",
    "local": "线性的"
  },
  {
    "origin": "Linear kernel. No mapping is done, linear discrimination (or regression) is done in the original feature space. It is the fastest option. \\(K(x_i, x_j) = x_i^T x_j\\).",
    "local": "线性核。不进行映射，在原始特征空间中进行线性判别（或回归）。这是最快的选择\\(K（x\\u i，x\\u j）=x\\u i^T x\\u j\\）。"
  },
  {
    "origin": "POLY",
    "local": "聚"
  },
  {
    "origin": "Polynomial kernel: \\(K(x_i, x_j) = (\\gamma x_i^T x_j + coef0)^{degree}, \\gamma &gt; 0\\).",
    "local": "多项式核：\\（K（x\\u i，x\\u j）=（\\gamma x\\u i^T x\\u j+coef0）^{度}，\\gamma&gt；0\\)."
  },
  {
    "origin": "RBF",
    "local": "径向基函数"
  },
  {
    "origin": "Radial basis function (RBF), a good choice in most cases. \\(K(x_i, x_j) = e^{-\\gamma ||x_i - x_j||^2}, \\gamma &gt; 0\\).",
    "local": "径向基函数（RBF），在大多数情况下是一个很好的选择\\(K（x|i，x|j）=e^{-\\gamma | | | x|i-x|j | | | 2}，，\\gamma&gt；0\\)."
  },
  {
    "origin": "SIGMOID",
    "local": "乙状结肠"
  },
  {
    "origin": "Sigmoid kernel: \\(K(x_i, x_j) = \\tanh(\\gamma x_i^T x_j + coef0)\\).",
    "local": "Sigmoid内核：\\\\（K（x，x j.j.）'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"
  },
  {
    "origin": "CHI2",
    "local": "中国2"
  },
  {
    "origin": "Exponential Chi2 kernel, similar to the RBF kernel: \\(K(x_i, x_j) = e^{-\\gamma \\chi^2(x_i,x_j)}, \\chi^2(x_i,x_j) = (x_i-x_j)^2/(x_i+x_j), \\gamma &gt; 0\\).",
    "local": "指数Chi2核，类似于RBF核：\\（K（x\\u i，x\\u j）=e^{-\\gamma\\chi^2（x\\u i，x\\u j）}、\\chi^2（x\\u i，x\\u j）=（x\\u i-x\\u j）^2/（x\\u i+x\\u j），\\gamma&gt；0\\)."
  },
  {
    "origin": "INTER",
    "local": "埋"
  },
  {
    "origin": "Histogram intersection kernel. A fast kernel. \\(K(x_i, x_j) = min(x_i,x_j)\\).",
    "local": "直方图相交核。一个快速内核\\(K（x\\u i，x\\u j）=最小值（x\\u i，x\\u j）\\）。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "ParamTypes",
    "local": "参数类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "SVM params type",
    "local": "SVM参数类型"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "C",
    "local": "C"
  },
  {
    "origin": "GAMMA",
    "local": "伽马"
  },
  {
    "origin": "P",
    "local": "P"
  },
  {
    "origin": "NU",
    "local": "怒族"
  },
  {
    "origin": "COEF",
    "local": "系数"
  },
  {
    "origin": "DEGREE",
    "local": "学位"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "Types",
    "local": "类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "SVM type",
    "local": "支持向量机类型"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "C_SVC",
    "local": "空调"
  },
  {
    "origin": "C-Support Vector Classification. n-class classification (n \\(\\geq\\) 2), allows imperfect separation of classes with penalty multiplier C for outliers.",
    "local": "C-支持向量分类。n类分类（n\\（\\geq\\）2）允许用惩罚乘数C对异常值进行不完全的类分离。"
  },
  {
    "origin": "NU_SVC",
    "local": "NU\\u SVC公司"
  },
  {
    "origin": "\\(\\nu\\)-Support Vector Classification. n-class classification with possible imperfect separation. Parameter \\(\\nu\\) (in the range 0..1, the larger the value, the smoother the decision boundary) is used instead of C.",
    "local": "\\（\\nu\\）-支持向量分类。可能存在不完全分离的n类分类。使用参数\\（\\nu\\）（在0..1范围内，值越大，决策边界越平滑）代替C。"
  },
  {
    "origin": "ONE_CLASS",
    "local": "一堂课"
  },
  {
    "origin": "Distribution Estimation (One-class SVM). All the training data are from the same class, SVM builds a boundary that separates the class from the rest of the feature space.",
    "local": "分布估计（单类支持向量机）。所有的训练数据都来自同一类，支持向量机建立了一个边界，将该类与特征空间的其余部分分开。"
  },
  {
    "origin": "EPS_SVR",
    "local": "每股收益"
  },
  {
    "origin": "\\(\\epsilon\\)-Support Vector Regression. The distance between feature vectors from the training set and the fitting hyper-plane must be less than p. For outliers the penalty multiplier C is used.",
    "local": "\\（\\epsilon\\）-支持向量回归。从训练集到拟合超平面的特征向量之间的距离必须小于p。对于异常值，使用惩罚乘数C。"
  },
  {
    "origin": "NU_SVR",
    "local": "NU\\U SVR公司"
  },
  {
    "origin": "\\(\\nu\\)-Support Vector Regression. \\(\\nu\\) is used instead of p. See",
    "local": "\\（\\nu\\）-支持向量回归\\(\\nu\\）代替p。看到了吗"
  },
  {
    "origin": "for details.",
    "local": "详情。"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::ml::SVM::create",
    "local": "&燃气轮机；cv:：ml:：SVM:：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml.SVM_create(",
    "local": "cv.ml.SVM\\U创建("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Creates empty model. Use",
    "local": "创建空模型。使用"
  },
  {
    "origin": "to train the model. Since SVM has several parameters, you may want to find the best parameters for your problem, it can be done with",
    "local": "训练模特。由于支持向量机有几个参数，你可能想找到最好的参数为您的问题，它可以用"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getC()",
    "local": "getC（）"
  },
  {
    "origin": "virtual double cv::ml::SVM::getC",
    "local": "虚拟双cv:：ml:：SVM:：getC"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getC(",
    "local": "cv.ml\\ U支持向量机.getC("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Parameter",
    "local": "参数"
  },
  {
    "origin": "C",
    "local": "C"
  },
  {
    "origin": "of a SVM optimization problem. For",
    "local": "支持向量机优化问题。为了"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getClassWeights()",
    "local": "getClassWeights（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::SVM::getClassWeights",
    "local": "cv：：ml：：SVM：：getClassWeights"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getClassWeights(",
    "local": "cv.ml\\u SVM.getClassWeights("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Optional weights in the",
    "local": "中的可选权重"
  },
  {
    "origin": "problem, assigned to particular classes. They are multiplied by",
    "local": "分配给特定类的问题。它们乘以"
  },
  {
    "origin": "C",
    "local": "C"
  },
  {
    "origin": "so the parameter",
    "local": "所以参数"
  },
  {
    "origin": "C",
    "local": "C"
  },
  {
    "origin": "of class",
    "local": "班级"
  },
  {
    "origin": "i",
    "local": "我"
  },
  {
    "origin": "becomes",
    "local": "变成"
  },
  {
    "origin": ". Thus these weights affect the misclassification penalty for different classes. The larger weight, the larger penalty on misclassification of data from the corresponding class. Default value is empty",
    "local": ". 因此，这些权重会影响不同类别的错误分类惩罚。权重越大，对应类数据的错误分类惩罚越大。默认值为空"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getCoef0()",
    "local": "getCoef0（）"
  },
  {
    "origin": "virtual double cv::ml::SVM::getCoef0",
    "local": "虚拟双cv:：ml:：SVM:：getCoef0"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getCoef0(",
    "local": "cv.ml\\u支持向量机getCoef0("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Parameter",
    "local": "参数"
  },
  {
    "origin": "coef0",
    "local": "系数0"
  },
  {
    "origin": "of a kernel function. For",
    "local": "一个核函数。为了"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDecisionFunction()",
    "local": "获取决策函数（）"
  },
  {
    "origin": "virtual double cv::ml::SVM::getDecisionFunction",
    "local": "虚拟双cv:：ml:：SVM:：getDecisionFunction"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "i",
    "local": "我"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "alpha",
    "local": "阿尔法"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "svidx",
    "local": "svidx公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, alpha, svidx",
    "local": "Retval、alpha、svidx"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getDecisionFunction(",
    "local": "cv.ml\\u SVM.getDecisionFunction("
  },
  {
    "origin": "i[, alpha[, svidx]]",
    "local": "i[，alpha[，svidx]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Retrieves the decision function.",
    "local": "检索决策函数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "i",
    "local": "我"
  },
  {
    "origin": "the index of the decision function. If the problem solved is regression, 1-class or 2-class classification, then there will be just one decision function and the index should always be 0. Otherwise, in the case of N-class classification, there will be \\(N(N-1)/2\\) decision functions.",
    "local": "决策函数的索引。如果解决的问题是回归、一类或二类分类，则只有一个决策函数，且指标应始终为0。否则，在N类分类的情况下，将有\\（N（N-1）/2\\）个决策函数。"
  },
  {
    "origin": "alpha",
    "local": "阿尔法"
  },
  {
    "origin": "the optional output vector for weights, corresponding to different support vectors. In the case of linear SVM all the alpha's will be 1's.",
    "local": "权值的可选输出向量，对应于不同的支持向量。在线性支持向量机的情况下，所有的alpha's将是1's。"
  },
  {
    "origin": "svidx",
    "local": "svidx公司"
  },
  {
    "origin": "the optional output vector of indices of support vectors within the matrix of support vectors (which can be retrieved by",
    "local": "支持向量矩阵中支持向量索引的可选输出向量（可通过"
  },
  {
    "origin": "). In the case of linear SVM each decision function consists of a single \"compressed\" support vector.",
    "local": "). 在线性支持向量机的情况下，每个决策函数由一个“压缩”的支持向量组成。"
  },
  {
    "origin": "The method returns rho parameter of the decision function, a scalar subtracted from the weighted sum of kernel responses.",
    "local": "该方法返回决策函数的rho参数，即从核响应的加权和中减去的标量。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDefaultGrid()",
    "local": "getDefaultGrid（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "cv::ml::SVM::getDefaultGrid",
    "local": "cv:：ml:：SVM:：getDefaultGrid"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "param_id",
    "local": "停止id"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Generates a grid for SVM parameters.",
    "local": "为SVM参数生成网格。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "param_id",
    "local": "停止id"
  },
  {
    "origin": "SVM parameters IDs that must be one of the",
    "local": "SVM参数ID必须是"
  },
  {
    "origin": ". The grid is generated for the parameter with this ID.",
    "local": ". 为具有此ID的参数生成网格。"
  },
  {
    "origin": "The function generates a grid for the specified parameter of the SVM algorithm. The grid may be passed to the function",
    "local": "该函数为SVM算法的指定参数生成网格。网格可以传递给函数"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDefaultGridPtr()",
    "local": "getDefaultGridPtr（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::ml::SVM::getDefaultGridPtr",
    "local": "&燃气轮机；cv:：ml:：SVM:：getDefaultGridPtr"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "param_id",
    "local": "停止id"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml.SVM_getDefaultGridPtr(",
    "local": "cv.ml.SVM\\u getDefaultGridPtr("
  },
  {
    "origin": "param_id",
    "local": "停止id"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Generates a grid for SVM parameters.",
    "local": "为SVM参数生成网格。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "param_id",
    "local": "停止id"
  },
  {
    "origin": "SVM parameters IDs that must be one of the",
    "local": "SVM参数ID必须是"
  },
  {
    "origin": ". The grid is generated for the parameter with this ID.",
    "local": ". 为具有此ID的参数生成网格。"
  },
  {
    "origin": "The function generates a grid pointer for the specified parameter of the SVM algorithm. The grid may be passed to the function",
    "local": "该函数为SVM算法的指定参数生成网格指针。网格可以传递给函数"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDegree()",
    "local": "获取学位（）"
  },
  {
    "origin": "virtual double cv::ml::SVM::getDegree",
    "local": "虚拟双cv:：ml:：SVM:：getDegree"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getDegree(",
    "local": "cv.ml\\ U SVM.getDegree公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Parameter",
    "local": "参数"
  },
  {
    "origin": "degree",
    "local": "度"
  },
  {
    "origin": "of a kernel function. For",
    "local": "一个核函数。为了"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getGamma()",
    "local": "getGamma（）"
  },
  {
    "origin": "virtual double cv::ml::SVM::getGamma",
    "local": "虚拟双cv:：ml:：SVM:：getGamma"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getGamma(",
    "local": "cv.ml\\u SVM.getGamma("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Parameter \\(\\gamma\\) of a kernel function. For",
    "local": "核函数的参数\\（\\gamma\\）。为了"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getKernelType()",
    "local": "getKernelType（）"
  },
  {
    "origin": "virtual int cv::ml::SVM::getKernelType",
    "local": "虚拟int cv:：ml:：SVM:：getKernelType"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getKernelType(",
    "local": "cv.ml\\u SVM.getKernelType("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Type of a SVM kernel. See",
    "local": "支持向量机内核的类型。看到了吗"
  },
  {
    "origin": ". Default value is",
    "local": ". 默认值为"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getNu()",
    "local": "getNu（）"
  },
  {
    "origin": "virtual double cv::ml::SVM::getNu",
    "local": "虚拟双cv:：ml:：SVM:：getNu"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getNu(",
    "local": "cv.ml\\u支持向量机.getNu("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Parameter \\(\\nu\\) of a SVM optimization problem. For",
    "local": "支持向量机优化问题的参数\\（\\nu\\）。为了"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getP()",
    "local": "getP（）"
  },
  {
    "origin": "virtual double cv::ml::SVM::getP",
    "local": "虚拟双cv:：ml:：SVM:：getP"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getP(",
    "local": "cv.ml\\u支持向量机.getP("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Parameter \\(\\epsilon\\) of a SVM optimization problem. For",
    "local": "支持向量机优化问题的参数\\（\\ε\\）。为了"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getSupportVectors()",
    "local": "getSupportVectors（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::SVM::getSupportVectors",
    "local": "cv：：ml：：SVM：：getSupportVectors"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getSupportVectors(",
    "local": "cv.ml\\u SVM.getSupportVectors("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Retrieves all the support vectors.",
    "local": "检索所有支持向量。"
  },
  {
    "origin": "The method returns all the support vectors as a floating-point matrix, where support vectors are stored as matrix rows.",
    "local": "该方法以浮点矩阵的形式返回所有支持向量，其中支持向量存储为矩阵行。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getTermCriteria()",
    "local": "getTermCriteria（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::SVM::getTermCriteria",
    "local": "cv:：ml:：SVM:：getTermCriteria条件"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getTermCriteria(",
    "local": "cv.ml\\u SVM.getterm标准("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Termination criteria of the iterative SVM training procedure which solves a partial case of constrained quadratic optimization problem. You can specify tolerance and/or the maximum number of iterations. Default value is",
    "local": "求解部分约束二次优化问题的迭代支持向量机训练过程的终止准则。可以指定公差和/或最大迭代次数。默认值为"
  },
  {
    "origin": ";",
    "local": ";"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getType()",
    "local": "获取类型（）"
  },
  {
    "origin": "virtual int cv::ml::SVM::getType",
    "local": "虚拟int cv:：ml:：SVM:：getType"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getType(",
    "local": "cv.ml\\u SVM.getType("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Type of a SVM formulation. See",
    "local": "支持向量机公式的类型。看到了吗"
  },
  {
    "origin": ". Default value is",
    "local": ". 默认值为"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getUncompressedSupportVectors()",
    "local": "getUncompressedSupportVectors（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::SVM::getUncompressedSupportVectors",
    "local": "cv：：ml：：SVM：：getUncompressedSupportVectors"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.getUncompressedSupportVectors(",
    "local": "cv.ml\\u SVM.getUncompressedSupportVectors("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Retrieves all the uncompressed support vectors of a linear SVM.",
    "local": "检索线性支持向量机的所有未压缩支持向量。"
  },
  {
    "origin": "The method returns all the uncompressed support vectors of a linear SVM that the compressed support vector, used for prediction, was derived from. They are returned in a floating-point matrix, where the support vectors are stored as matrix rows.",
    "local": "该方法返回用于预测的线性支持向量机的所有未压缩支持向量。它们以浮点矩阵的形式返回，其中支持向量存储为矩阵行。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "load()",
    "local": "加载（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::ml::SVM::load",
    "local": "&燃气轮机；cv:：ml:：SVM:：加载"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filepath",
    "local": "文件路径"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml.SVM_load(",
    "local": "cv.ml.U负载("
  },
  {
    "origin": "filepath",
    "local": "文件路径"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Loads and creates a serialized svm from a file.",
    "local": "从文件加载并创建序列化的svm。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "to serialize and store an",
    "local": "序列化和存储"
  },
  {
    "origin": "to disk. Load the",
    "local": "到磁盘。加载"
  },
  {
    "origin": "from this file again, by calling this function with the path to the file.",
    "local": "再次从这个文件，通过调用这个函数和文件的路径。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filepath",
    "local": "文件路径"
  },
  {
    "origin": "path to serialized svm",
    "local": "序列化svm的路径"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setC()",
    "local": "setC（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setC",
    "local": "虚空cv:：ml:：SVM:：setC"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setC(",
    "local": "cv.ml\\ U支持向量机.setC("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setClassWeights()",
    "local": "setClassWeights（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setClassWeights",
    "local": "虚空cv:：ml:：SVM:：setClassWeights"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setClassWeights(",
    "local": "cv.ml\\u SVM.setClassWeights设置类权重("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setCoef0()",
    "local": "setCoef0（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setCoef0",
    "local": "虚空cv:：ml:：SVM:：setCoef0"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setCoef0(",
    "local": "cv.ml\\支持向量机.setCoef0("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setCustomKernel()",
    "local": "setCustomKernel（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setCustomKernel",
    "local": "虚空cv:：ml:：SVM:：setCustomKernel"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "_kernel",
    "local": "_内核"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Initialize with custom kernel. See",
    "local": "使用自定义内核初始化。看到了吗"
  },
  {
    "origin": "class for implementation details",
    "local": "类以获取实现详细信息"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setDegree()",
    "local": "设定度数（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setDegree",
    "local": "虚空cv:：ml:：SVM:：setDegree"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setDegree(",
    "local": "cv.ml×SVM.setDegree设定值("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setGamma()",
    "local": "setGamma（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setGamma",
    "local": "虚空cv:：ml:：SVM:：setGamma"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setGamma(",
    "local": "cv.ml\\u SVM.setGamma("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setKernel()",
    "local": "setKernel（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setKernel",
    "local": "虚空cv:：ml:：SVM:：setKernel"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "kernelType",
    "local": "内核"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setKernel(",
    "local": "cv.ml\\u SVM.setKernel("
  },
  {
    "origin": "kernelType",
    "local": "内核"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Initialize with one of predefined kernels. See",
    "local": "使用预定义内核之一初始化。看到了吗"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setNu()",
    "local": "setNu（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setNu",
    "local": "虚空cv:：ml:：SVM:：setNu"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setNu(",
    "local": "cv.ml\\u SVM.setNu("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setP()",
    "local": "setP（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setP",
    "local": "虚空cv:：ml:：SVM:：setP"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setP(",
    "local": "cv.ml\\ U SVM.setP设置("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setTermCriteria()",
    "local": "setTermCriteria（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setTermCriteria",
    "local": "虚空cv:：ml:：SVM:：setTermCriteria"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setTermCriteria(",
    "local": "cv.ml\\U SVM.SETTERM标准("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setType()",
    "local": "setType（）"
  },
  {
    "origin": "virtual void cv::ml::SVM::setType",
    "local": "虚空cv:：ml:：SVM:：setType"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.setType(",
    "local": "cv.ml\\ U SVM.setType设置类型("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "trainAuto()",
    "local": "列车自动（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "virtual bool cv::ml::SVM::trainAuto",
    "local": "虚拟布尔cv:：ml:：SVM:：trainAuto"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "data",
    "local": "数据"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "kFold",
    "local": "kFold公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Cgrid",
    "local": "Cgrid公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "gammaGrid",
    "local": "伽玛射线"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "pGrid",
    "local": "pGrid公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "nuGrid",
    "local": "网格"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "coeffGrid",
    "local": "系数网格"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "degreeGrid",
    "local": "网格"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "balanced",
    "local": "平衡的"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.trainAuto(",
    "local": "cv.ml\\U SVM.trainAuto公司("
  },
  {
    "origin": "samples, layout, responses[, kFold[, Cgrid[, gammaGrid[, pGrid[, nuGrid[, coeffGrid[, degreeGrid[, balanced]]]]]]]]",
    "local": "示例，布局，响应[，kFold[，Cgrid[，gammaGrid[，pGrid[，nuGrid[，coeffGrid[，degreeGrid[，balanced]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Trains an SVM with optimal parameters.",
    "local": "用最优参数训练支持向量机。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "data",
    "local": "数据"
  },
  {
    "origin": "the training data that can be constructed using",
    "local": "可以使用"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "kFold",
    "local": "kFold公司"
  },
  {
    "origin": "Cross-validation parameter. The training set is divided into kFold subsets. One subset is used to test the model, the others form the train set. So, the SVM algorithm is executed kFold times.",
    "local": "交叉验证参数。训练集被划分为kFold子集。一个子集用于测试模型，其他子集构成列车组。因此，SVM算法执行了多次。"
  },
  {
    "origin": "Cgrid",
    "local": "Cgrid公司"
  },
  {
    "origin": "grid for C",
    "local": "C的网格"
  },
  {
    "origin": "gammaGrid",
    "local": "伽玛射线"
  },
  {
    "origin": "grid for gamma",
    "local": "伽马射线网格"
  },
  {
    "origin": "pGrid",
    "local": "pGrid公司"
  },
  {
    "origin": "grid for p",
    "local": "p的网格"
  },
  {
    "origin": "nuGrid",
    "local": "网格"
  },
  {
    "origin": "grid for nu",
    "local": "nu的网格"
  },
  {
    "origin": "coeffGrid",
    "local": "系数网格"
  },
  {
    "origin": "grid for coeff",
    "local": "系数网格"
  },
  {
    "origin": "degreeGrid",
    "local": "网格"
  },
  {
    "origin": "grid for degree",
    "local": "度网格"
  },
  {
    "origin": "balanced",
    "local": "平衡的"
  },
  {
    "origin": "If true and the problem is 2-class classification then the method creates more balanced cross-validation subsets that is proportions between classes in subsets are close to such proportion in the whole train dataset.",
    "local": "如果为真，问题是2类分类，则该方法创建更平衡的交叉验证子集，即子集中类之间的比例接近于整个序列数据集中的比例。"
  },
  {
    "origin": "The method trains the SVM model automatically by choosing the optimal parameters C, gamma, p, nu, coef0, degree. Parameters are considered optimal when the cross-validation estimate of the test set error is minimal.",
    "local": "该方法通过选择最优参数C、gamma、p、nu、coef0、degree来自动训练SVM模型。当测试集误差的交叉验证估计最小时，参数被认为是最优的。"
  },
  {
    "origin": "If there is no need to optimize a parameter, the corresponding grid step should be set to any value less than or equal to 1. For example, to avoid optimization in gamma, set",
    "local": "如果不需要优化参数，则应将相应的网格步长设置为小于或等于1的任何值。例如，要避免在gamma中进行优化，请设置"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "as arbitrary numbers. In this case, the value",
    "local": "作为任意数字。在这种情况下，值"
  },
  {
    "origin": "is taken for gamma.",
    "local": "是伽马射线。"
  },
  {
    "origin": "And, finally, if the optimization in a parameter is required but the corresponding grid is unknown, you may call the function",
    "local": "最后，如果需要对参数进行优化，但相应的网格未知，则可以调用该函数"
  },
  {
    "origin": ". To generate a grid, for example, for gamma, call",
    "local": ". 要生成网格（例如gamma），请调用"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "This function works for the classification (",
    "local": "此函数用于分类("
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": ") as well as for the regression (",
    "local": ")以及回归("
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "). If it is",
    "local": "). 如果是的话"
  },
  {
    "origin": ", no optimization is made and the usual SVM with parameters specified in params is executed.",
    "local": "，不进行优化，执行通常的支持向量机，参数在params中指定。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "trainAuto()",
    "local": "列车自动（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "virtual bool cv::ml::SVM::trainAuto",
    "local": "虚拟布尔cv:：ml:：SVM:：trainAuto"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "layout",
    "local": "布局"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "responses",
    "local": "响应"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "kFold",
    "local": "kFold公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "Cgrid",
    "local": "Cgrid公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "gammaGrid",
    "local": "伽玛射线"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "pGrid",
    "local": "pGrid公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "nuGrid",
    "local": "网格"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "coeffGrid",
    "local": "系数网格"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "degreeGrid",
    "local": "网格"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "balanced",
    "local": "平衡的"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_SVM.trainAuto(",
    "local": "cv.ml\\U SVM.trainAuto公司("
  },
  {
    "origin": "samples, layout, responses[, kFold[, Cgrid[, gammaGrid[, pGrid[, nuGrid[, coeffGrid[, degreeGrid[, balanced]]]]]]]]",
    "local": "示例，布局，响应[，kFold[，Cgrid[，gammaGrid[，pGrid[，nuGrid[，coeffGrid[，degreeGrid[，balanced]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Trains an SVM with optimal parameters.",
    "local": "用最优参数训练支持向量机。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "samples",
    "local": "样品"
  },
  {
    "origin": "training samples",
    "local": "训练样本"
  },
  {
    "origin": "layout",
    "local": "布局"
  },
  {
    "origin": "See",
    "local": "看到了吗"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "responses",
    "local": "响应"
  },
  {
    "origin": "vector of responses associated with the training samples.",
    "local": "与训练样本相关的响应向量。"
  },
  {
    "origin": "kFold",
    "local": "kFold公司"
  },
  {
    "origin": "Cross-validation parameter. The training set is divided into kFold subsets. One subset is used to test the model, the others form the train set. So, the SVM algorithm is",
    "local": "交叉验证参数。训练集被划分为kFold子集。一个子集用于测试模型，其他子集构成列车组。因此，支持向量机算法是可行的"
  },
  {
    "origin": "Cgrid",
    "local": "Cgrid公司"
  },
  {
    "origin": "grid for C",
    "local": "C的网格"
  },
  {
    "origin": "gammaGrid",
    "local": "伽玛射线"
  },
  {
    "origin": "grid for gamma",
    "local": "伽马射线网格"
  },
  {
    "origin": "pGrid",
    "local": "pGrid公司"
  },
  {
    "origin": "grid for p",
    "local": "p的网格"
  },
  {
    "origin": "nuGrid",
    "local": "网格"
  },
  {
    "origin": "grid for nu",
    "local": "nu的网格"
  },
  {
    "origin": "coeffGrid",
    "local": "系数网格"
  },
  {
    "origin": "grid for coeff",
    "local": "系数网格"
  },
  {
    "origin": "degreeGrid",
    "local": "网格"
  },
  {
    "origin": "grid for degree",
    "local": "度网格"
  },
  {
    "origin": "balanced",
    "local": "平衡的"
  },
  {
    "origin": "If true and the problem is 2-class classification then the method creates more balanced cross-validation subsets that is proportions between classes in subsets are close to such proportion in the whole train dataset.",
    "local": "如果为真，问题是2类分类，则该方法创建更平衡的交叉验证子集，即子集中类之间的比例接近于整个序列数据集中的比例。"
  },
  {
    "origin": "The method trains the SVM model automatically by choosing the optimal parameters C, gamma, p, nu, coef0, degree. Parameters are considered optimal when the cross-validation estimate of the test set error is minimal.",
    "local": "该方法通过选择最优参数C、gamma、p、nu、coef0、degree来自动训练SVM模型。当测试集误差的交叉验证估计最小时，参数被认为是最优的。"
  },
  {
    "origin": "This function only makes use of",
    "local": "此函数仅使用"
  },
  {
    "origin": "for parameter optimization and thus only offers rudimentary parameter options.",
    "local": "用于参数优化，因此只提供基本的参数选项。"
  },
  {
    "origin": "This function works for the classification (",
    "local": "此函数用于分类("
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": ") as well as for the regression (",
    "local": ")以及回归("
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "). If it is",
    "local": "). 如果是的话"
  },
  {
    "origin": ", no optimization is made and the usual SVM with parameters specified in params is executed.",
    "local": "，不进行优化，执行通常的支持向量机，参数在params中指定。"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:48为OpenCV生成"
  }
]