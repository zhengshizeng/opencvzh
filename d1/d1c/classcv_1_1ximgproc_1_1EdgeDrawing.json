[
  {
    "origin": "OpenCV: cv::ximgproc::EdgeDrawing Class Reference",
    "local": "OpenCV:cv:：ximgproc:：EdgeDrawing类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Public Attributes",
    "local": "公共属性"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::ximgproc::EdgeDrawing Class Reference",
    "local": "cv:：ximgproc:：EdgeDrawing类引用"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "»",
    "local": "»"
  },
  {
    "origin": "Class implementing the ED (",
    "local": "实现ED的类("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": ", EDLines",
    "local": "，编辑行"
  },
  {
    "origin": ", EDPF",
    "local": "，EDPF公司"
  },
  {
    "origin": "and EDCircles",
    "local": "和EDCircles"
  },
  {
    "origin": "algorithms.",
    "local": "算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::ximgproc::EdgeDrawing:",
    "local": "cv:：ximgproc:：EdgeDrawing的继承关系图："
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "struct",
    "local": "结构"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Detects edges and prepares them to detect lines and ellipses.",
    "local": "检测边并准备好检测线和椭圆。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Detects circles and ellipses.",
    "local": "检测圆和椭圆。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Detects lines.",
    "local": "检测线路。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "virtual std::vector&lt; std::vector&lt;",
    "local": "虚拟标准：：向量&lt；标准：：向量&lt；"
  },
  {
    "origin": "&gt; &gt;",
    "local": "&燃气轮机&燃气轮机；"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;parameters)",
    "local": "&amp；（参数）"
  },
  {
    "origin": "sets parameters.",
    "local": "设置参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Attributes",
    "local": "公共属性"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Class implementing the ED (",
    "local": "实现ED的类("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": ", EDLines",
    "local": "，编辑行"
  },
  {
    "origin": ", EDPF",
    "local": "，EDPF公司"
  },
  {
    "origin": "and EDCircles",
    "local": "和EDCircles"
  },
  {
    "origin": "algorithms.",
    "local": "算法。"
  },
  {
    "origin": "EDGE DRAWING LIBRARY FOR GEOMETRIC FEATURE EXTRACTION AND VALIDATION",
    "local": "用于几何特征提取和验证的边图库"
  },
  {
    "origin": "Edge Drawing (ED) algorithm is an proactive approach on edge detection problem. In contrast to many other existing edge detection algorithms which follow a subtractive approach (i.e. after applying gradient filters onto an image eliminating pixels w.r.t. several rules, e.g. non-maximal suppression and hysteresis in Canny), ED algorithm works via an additive strategy, i.e. it picks edge pixels one by one, hence the name Edge Drawing. Then we process those random shaped edge segments to extract higher level edge features, i.e. lines, circles, ellipses, etc. The popular method of extraction edge pixels from the thresholded gradient magnitudes is non-maximal supressiun that tests every pixel whether it has the maximum gradient response along its gradient direction and eliminates if it does not. However, this method does not check status of the neighboring pixels, and therefore might result low quality (in terms of edge continuity, smoothness, thinness, localization) edge segments. Instead of non-maximal supression, ED points a set of edge pixels and join them by maximizing the total gradient response of edge segments. Therefore it can extract high quality edge segments without need for an additional hysteresis step.",
    "local": "边缘提取算法是一种主动的边缘检测方法。与许多其他现有的采用减法方法的边缘检测算法（即，在图像上应用梯度滤波器消除像素w.r.t.若干规则，例如Canny中的非最大抑制和滞后）不同，ED算法通过加法策略工作，即，它逐个拾取边缘像素，因此得名边画。然后对这些随机形状的边缘片段进行处理，提取更高层次的边缘特征，即直线、圆、椭圆，从阈值梯度幅度中提取边缘像素的常用方法是非最大抑制法，即检测每个像素在其梯度方向上是否有最大梯度响应，如果没有则消除。然而，该方法不检查相邻像素的状态，因此可能导致低质量（在边缘连续性、平滑度、稀疏度和定位方面）的边缘分段。该方法不采用非最大化抑制，而是通过最大化边缘段的总梯度响应，将一组边缘像素点连接起来。因此，它可以提取高质量的边缘片段，而不需要额外的滞后步骤。"
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": "成员枚举文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "GradientOperator",
    "local": "梯度算子"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "PREWITT",
    "local": "普雷维特"
  },
  {
    "origin": "SOBEL",
    "local": "索贝尔"
  },
  {
    "origin": "SCHARR",
    "local": "锋利的"
  },
  {
    "origin": "LSD",
    "local": "迷幻剂"
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "~EdgeDrawing()",
    "local": "~EdgeDrawing（）"
  },
  {
    "origin": "virtual cv::ximgproc::EdgeDrawing::~EdgeDrawing",
    "local": "虚拟cv:：ximgproc:：EdgeDrawing:：~ EdgeDrawing"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "detectEdges()",
    "local": "检测到（）"
  },
  {
    "origin": "virtual void cv::ximgproc::EdgeDrawing::detectEdges",
    "local": "虚拟void cv:：ximgproc:：EdgeDrawing:：detectEdges"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ximgproc_EdgeDrawing.detectEdges(",
    "local": "cv.ximgproc\\ U EdgeDrawing.检测("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Detects edges and prepares them to detect lines and ellipses.",
    "local": "检测边并准备好检测线和椭圆。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input image",
    "local": "输入图像"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "detectEllipses()",
    "local": "Detectellipses（）"
  },
  {
    "origin": "virtual void cv::ximgproc::EdgeDrawing::detectEllipses",
    "local": "虚拟void cv:：ximgproc:：EdgeDrawing:：detectEllipses"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "ellipses",
    "local": "椭圆"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "ellipses",
    "local": "椭圆"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ximgproc_EdgeDrawing.detectEllipses(",
    "local": "cv.ximgproc\\ U EdgeDrawing.detectEllipses公司("
  },
  {
    "origin": "[, ellipses]",
    "local": "[，省略号]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Detects circles and ellipses.",
    "local": "检测圆和椭圆。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "ellipses",
    "local": "椭圆"
  },
  {
    "origin": "output Vec&lt;6d&gt; contains center point and perimeter for circles.",
    "local": "输出向量&lt；6d&gt；包含圆的圆心和周长。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "you should call",
    "local": "你应该打电话"
  },
  {
    "origin": "method before call this.",
    "local": "方法，然后调用此。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "detectLines()",
    "local": "探测线（）"
  },
  {
    "origin": "virtual void cv::ximgproc::EdgeDrawing::detectLines",
    "local": "虚拟void cv:：ximgproc:：EdgeDrawing:：detectLines"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "lines",
    "local": "线"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "lines",
    "local": "线"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ximgproc_EdgeDrawing.detectLines(",
    "local": "cv.ximgproc\\ U EdgeDrawing.检测线("
  },
  {
    "origin": "[, lines]",
    "local": "[，行]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Detects lines.",
    "local": "检测线路。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "lines",
    "local": "线"
  },
  {
    "origin": "output Vec&lt;4f&gt; contains start point and end point of detected lines.",
    "local": "输出向量&lt；4f&gt；包含检测线的起点和终点。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "you should call",
    "local": "你应该打电话"
  },
  {
    "origin": "method before call this.",
    "local": "方法，然后调用此。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getEdgeImage()",
    "local": "GetEdgeImage（）"
  },
  {
    "origin": "virtual void cv::ximgproc::EdgeDrawing::getEdgeImage",
    "local": "虚拟void cv:：ximgproc:：EdgeDrawing:：getEdgeImage"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ximgproc_EdgeDrawing.getEdgeImage(",
    "local": "简历：ximgproc\\u EdgeDrawing.getEdgeImage("
  },
  {
    "origin": "[, dst]",
    "local": "[，夏令时]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getGradientImage()",
    "local": "getGradientImage（）"
  },
  {
    "origin": "virtual void cv::ximgproc::EdgeDrawing::getGradientImage",
    "local": "虚拟void cv:：ximgproc:：EdgeDrawing:：getGradientImage"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ximgproc_EdgeDrawing.getGradientImage(",
    "local": "cv.ximgproc edgedrawing.getgradientimage（"
  },
  {
    "origin": "[, dst]",
    "local": "[，夏令时]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getSegments()",
    "local": "getSegments（）"
  },
  {
    "origin": "virtual std::vector&lt;std::vector&lt;",
    "local": "虚拟标准：：向量&lt；标准：：向量&lt；"
  },
  {
    "origin": "&gt; &gt; cv::ximgproc::EdgeDrawing::getSegments",
    "local": "&gt；gt；燃气轮机；cv:：ximgproc:：EdgeDrawing:：getSegments:编辑"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ximgproc_EdgeDrawing.getSegments(",
    "local": "cv.ximgproc\\u EdgeDrawing.getSegments公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setParams()",
    "local": "设置参数（）"
  },
  {
    "origin": "void cv::ximgproc::EdgeDrawing::setParams",
    "local": "void cv:：ximgproc:：EdgeDrawing:：setParams无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "parameters",
    "local": "参数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ximgproc_EdgeDrawing.setParams(",
    "local": "cv.ximgproc\\ U EdgeDrawing.setParams设置参数("
  },
  {
    "origin": "parameters",
    "local": "参数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "sets parameters.",
    "local": "设置参数。"
  },
  {
    "origin": "this function is meant to be used for parameter setting in other languages than c++.",
    "local": "此函数用于c++以外的其他语言的参数设置。"
  },
  {
    "origin": "Member Data Documentation",
    "local": "成员数据文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "params",
    "local": "参数"
  },
  {
    "origin": "cv::ximgproc::EdgeDrawing::params",
    "local": "cv:：ximgproc:：EdgeDrawing:：参数"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/ximgproc/",
    "local": "opencv2/ximgproc/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:49 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:49为OpenCV生成"
  }
]