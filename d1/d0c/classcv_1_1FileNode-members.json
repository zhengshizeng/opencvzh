[
  {
    "origin": "OpenCV: Member List",
    "local": "OpenCV:成员列表"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "cv::FileNode Member List",
    "local": "cv:：FileNode成员列表"
  },
  {
    "origin": "This is the complete list of members for",
    "local": "这是您的完整成员列表"
  },
  {
    "origin": ", including all inherited members.",
    "local": "，包括所有继承的成员。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(const FileStorage *fs, size_t blockIdx, size_t ofs)",
    "local": "（const FileStorage*fs，size\\t blockIdx，size\\t ofs）"
  },
  {
    "origin": "(const FileNode &amp;node)",
    "local": "（const FileNode&amp；节点）"
  },
  {
    "origin": "(FileStorage::Impl *fs, size_t blockIdx, size_t ofs)",
    "local": "（文件存储：：Impl*fs，size\\t blockIdx，size\\t ofs）"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "(int flags)",
    "local": "（int标志）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(int flags)",
    "local": "（int标志）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(int flags)",
    "local": "（int标志）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int flags)",
    "local": "（int标志）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int flags)",
    "local": "（int标志）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "(const FileNode &amp;node)",
    "local": "（const FileNode&amp；节点）"
  },
  {
    "origin": "(const FileNode &amp;n, _Tp &amp;value)",
    "local": "（const FileNode&amp；n、 &amp；值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;n, std::vector&lt; _Tp &gt; &amp;vec)",
    "local": "（const FileNode&amp；n、 标准：：向量&lt；Tp&gt&amp；vec公司）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;n, KeyPoint &amp;kpt)",
    "local": "（const FileNode&amp；n、 关键点和；（kpt）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;n, DMatch &amp;m)",
    "local": "（const FileNode&amp；n、 D匹配和；米）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const String &amp;nodename) const",
    "local": "常量字符串；节点名称）常量"
  },
  {
    "origin": "(const char *nodename) const",
    "local": "（常量字符*节点名）常量"
  },
  {
    "origin": "(int i) const",
    "local": "（内景一）常数"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const FileNode &amp;node, int &amp;value, int default_value)",
    "local": "（const FileNode&amp；节点，内部；值，int（默认值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, float &amp;value, float default_value)",
    "local": "（const FileNode&amp；节点、浮动和；值，浮点值（默认值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, double &amp;value, double default_value)",
    "local": "（const FileNode&amp；节点，双；值，双默认值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, std::string &amp;value, const std::string &amp;default_value)",
    "local": "（const FileNode&amp；节点，std:：string&amp；值，const std:：string&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Mat &amp;mat, const Mat &amp;default_mat=Mat())",
    "local": "（const FileNode&amp；节点、材料和；材料、施工材料和；默认值（mat=mat（））"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, SparseMat &amp;mat, const SparseMat &amp;default_mat=SparseMat())",
    "local": "（const FileNode&amp；节点，SparseMat&amp；材料、结构和备件；默认值\\u mat=SparseMat（））"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, KeyPoint &amp;value, const KeyPoint &amp;default_value)",
    "local": "（const FileNode&amp；节点、关键点和；值、常量关键点和；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, DMatch &amp;value, const DMatch &amp;default_value)",
    "local": "（const FileNode&amp；节点、数据匹配和；值、常量匹配；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Point_&lt; _Tp &gt; &amp;value, const Point_&lt; _Tp &gt; &amp;default_value)",
    "local": "（const FileNode&amp；节点、点_Tp&gt&amp；值，常量点_Tp&gt&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Point3_&lt; _Tp &gt; &amp;value, const Point3_&lt; _Tp &gt; &amp;default_value)",
    "local": "（const FileNode&amp；节点，点3_Tp&gt&amp；值，常量点3&lt_Tp&gt&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Size_&lt; _Tp &gt; &amp;value, const Size_&lt; _Tp &gt; &amp;default_value)",
    "local": "（const FileNode&amp；节点，大小_Tp&gt&amp；值，常量大小_Tp&gt&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Complex&lt; _Tp &gt; &amp;value, const Complex&lt; _Tp &gt; &amp;default_value)",
    "local": "（const FileNode&amp；节点，复杂&lt_Tp&gt&amp；值，const Complex&lt_Tp&gt&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Rect_&lt; _Tp &gt; &amp;value, const Rect_&lt; _Tp &gt; &amp;default_value)",
    "local": "（const FileNode&amp；节点，矩形_Tp&gt&amp；值，const Rect\\lt_Tp&gt&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Vec&lt; _Tp, cn &gt; &amp;value, const Vec&lt; _Tp, cn &gt; &amp;default_value)",
    "local": "（const FileNode&amp；节点，Vec&lt_Tp，cn&gt&amp；值，const Vec&lt_Tp，cn&gt&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Matx&lt; _Tp, m, n &gt; &amp;value, const Matx&lt; _Tp, m, n &gt; &amp;default_matx=Matx&lt; _Tp, m, n &gt;())",
    "local": "（const FileNode&amp；节点，Matx&lt_Tp，m，n&gt&amp；值，const Matx&lt_Tp，m，n&gt&amp；默认值\\u matx=matx&lt_Tp，m，n&gt；（））"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Scalar_&lt; _Tp &gt; &amp;value, const Scalar_&lt; _Tp &gt; &amp;default_value)",
    "local": "（const FileNode&amp；节点，标量_Tp&gt&amp；值，常量标量_Tp&gt&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, Range &amp;value, const Range &amp;default_value)",
    "local": "（const FileNode&amp；节点、范围和；值、常量范围和；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, bool &amp;value, bool default_value)",
    "local": "（const FileNode&amp；节点，布尔和；值，布尔值（默认值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, uchar &amp;value, uchar default_value)",
    "local": "（const FileNode&amp；节点，uchar&amp；值，uchar默认值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, schar &amp;value, schar default_value)",
    "local": "（const FileNode&amp；节点，schar&amp；值（默认值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, ushort &amp;value, ushort default_value)",
    "local": "（const FileNode&amp；节点，ushort&amp；值，ushort默认值（uU值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, short &amp;value, short default_value)",
    "local": "（const FileNode&amp；节点，短&短；值，简称（默认值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(FileNodeIterator &amp;it, std::vector&lt; _Tp &gt; &amp;vec, size_t maxCount=(size_t) INT_MAX)",
    "local": "（FileNodeIterator&amp；it，std：：向量&lt_Tp&gt&amp；vec，size\\u t maxCount=（size\\u t）INT\\u MAX）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, _Tp &amp;value, const _Tp &amp;default_value=static_cast&lt; _Tp &gt;(0))",
    "local": "（const FileNode&amp；节点，Tp&amp；值、常量和；默认值=静态_Tp&gt(0))"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, std::vector&lt; _Tp &gt; &amp;vec, const std::vector&lt; _Tp &gt; &amp;default_value=std::vector&lt; _Tp &gt;())",
    "local": "（const FileNode&amp；节点，std：：向量&lt_Tp&gt&amp；vec，const std:：向量&lt_Tp&gt&amp；默认值=std：：vector&lt_Tp&gt；（））"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, std::vector&lt; KeyPoint &gt; &amp;vec, const std::vector&lt; KeyPoint &gt; &amp;default_value)",
    "local": "（const FileNode&amp；节点，std：：向量&lt；关键点&gt&amp；vec，const std:：向量&lt；关键点&gt&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const FileNode &amp;node, std::vector&lt; DMatch &gt; &amp;vec, const std::vector&lt; DMatch &gt; &amp;default_value)",
    "local": "（const FileNode&amp；节点，std：：向量&lt；D匹配&gt&amp；vec，const std:：向量&lt；D匹配&gt&amp；默认值（U值）"
  },
  {
    "origin": "related",
    "local": "相关"
  },
  {
    "origin": "(const String &amp;fmt, void *vec, size_t len) const",
    "local": "（常量字符串和；fmt，void*vec，size（长度）const"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "(int type, const void *value, int len=-1)",
    "local": "（int type，const void*value，int len=-1）"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:42 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:42为OpenCV生成，&#160；"
  }
]