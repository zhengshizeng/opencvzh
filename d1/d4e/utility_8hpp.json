[
  {
    "origin": "OpenCV: opencv2/core/utility.hpp File Reference",
    "local": "OpenCV:opencv2/core/utility.hpp文件参考"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Namespaces",
    "local": "名称空间"
  },
  {
    "origin": "Macros",
    "local": "宏"
  },
  {
    "origin": "Typedefs",
    "local": "类型定义"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "utility.hpp File Reference",
    "local": "utility.hpp文件参考"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Automatically Allocated Buffer Class.",
    "local": "自动分配的缓冲区类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Designed for command line parsing.",
    "local": "为命令行解析而设计。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Base class for parallel data processors.",
    "local": "并行数据处理器的基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "a Class to measure passing time.",
    "local": "用来衡量时间流逝的课程。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Namespaces",
    "local": "名称空间"
  },
  {
    "origin": "\"black box\" representation of the file storage associated with a file on disk.",
    "local": "“黑盒”表示与磁盘上的文件相关联的文件存储。"
  },
  {
    "origin": "Macros",
    "local": "宏"
  },
  {
    "origin": "(impl)",
    "local": "（实施）"
  },
  {
    "origin": "Collect implementation data on OpenCV function call. Requires ENABLE_IMPL_COLLECTION build option.",
    "local": "收集OpenCV函数调用的实现数据。需要启用\\u IMPL \\u集合生成选项。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Typedefs",
    "local": "类型定义"
  },
  {
    "origin": "typedef std::lock_guard&lt;",
    "local": "typedef std：：锁罩&lt；"
  },
  {
    "origin": "typedef int(*&#160;",
    "local": "类型定义int（*&#160；"
  },
  {
    "origin": ") (int status, const char *func_name, const char *err_msg, const char *file_name, int line, void *userdata)",
    "local": ")（int status，const char*func\\u name，const char*err\\u msg，const char*file\\u name，int line，void*userdata）"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;path)",
    "local": "&amp；路径）"
  },
  {
    "origin": "Override search data path by adding new search location.",
    "local": "通过添加新的搜索位置覆盖搜索数据路径。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;subdir)",
    "local": "&amp；细分市场）"
  },
  {
    "origin": "Append samples search data sub directory.",
    "local": "附加示例搜索数据子目录。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "(_Tp *ptr, int n=(int) sizeof(_Tp))",
    "local": "（\\u Tp*ptr，int n=（int）sizeof（\\u Tp））"
  },
  {
    "origin": "Aligns a pointer to the specified number of bytes.",
    "local": "将指针与指定的字节数对齐。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(size_t sz, int n)",
    "local": "（尺寸\\u t sz，内景）"
  },
  {
    "origin": "Aligns a buffer size to the specified number of bytes.",
    "local": "将缓冲区大小与指定的字节数对齐。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(int feature)",
    "local": "（int特征）"
  },
  {
    "origin": "Returns true if the specified feature is supported by the host hardware.",
    "local": "如果主机硬件支持指定的功能，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(int a, unsigned int b)",
    "local": "（int a，无符号int b）"
  },
  {
    "origin": "Integer division with result round up.",
    "local": "整数除法，结果向上取整。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(size_t a, unsigned int b)",
    "local": "（大小a，无符号整数b）"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;relative_path, bool required=true, bool silentMode=false)",
    "local": "&amp；相对路径，bool required=true，bool silentMode=false）"
  },
  {
    "origin": "Try to find requested data file.",
    "local": "尝试查找请求的数据文件。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;relative_path, bool silentMode=false)",
    "local": "&amp；相对路径，bool silentMode=false）"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns full configuration time cmake output.",
    "local": "返回完整配置时间cmake输出。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns list of CPU features enabled during compilation.",
    "local": "返回编译期间启用的CPU功能的列表。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns the number of CPU ticks.",
    "local": "返回CPU周期数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(int type)",
    "local": "（int类型）"
  },
  {
    "origin": "(int feature)",
    "local": "（int特征）"
  },
  {
    "origin": "Returns feature name by ID.",
    "local": "按ID返回功能名称。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns the number of logical CPUs available for the process.",
    "local": "返回进程可用的逻辑CPU数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns the number of threads used by OpenCV for parallel regions.",
    "local": "返回OpenCV用于并行区域的线程数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns the index of the currently executed thread within the current parallel region. Always returns 0 if called outside of parallel region.",
    "local": "返回当前并行区域中当前执行的线程的索引。如果在并行区域外调用，则始终返回0。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns the number of ticks.",
    "local": "返回刻度数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns the number of ticks per second.",
    "local": "返回每秒的滴答数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns major library version.",
    "local": "返回主要库版本。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns minor library version.",
    "local": "返回次要库版本。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns revision field of the library version.",
    "local": "返回库版本的修订字段。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns library version string.",
    "local": "返回库版本字符串。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(String pattern, std::vector&lt; String &gt; &amp;result, bool recursive=false)",
    "local": "（字符串模式，std：：vector&lt；字符串&gt&amp；结果，bool recursive=false）"
  },
  {
    "origin": "template&lt;int N, typename T &gt;",
    "local": "模板&lt；int N，类型名T&gt；"
  },
  {
    "origin": "(const T &amp;data)",
    "local": "（施工）；（数据）"
  },
  {
    "origin": "Alignment check of passed values.",
    "local": "通过值的对齐检查。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;int N&gt;",
    "local": "模板&lt；国际N&gt；"
  },
  {
    "origin": "(const void *p1)",
    "local": "（const void*p1）"
  },
  {
    "origin": "template&lt;int N&gt;",
    "local": "模板&lt；国际N&gt；"
  },
  {
    "origin": "(const void *p1, const void *p2)",
    "local": "（const void*p1，const void*p2）"
  },
  {
    "origin": "template&lt;int N&gt;",
    "local": "模板&lt；国际N&gt；"
  },
  {
    "origin": "(const void *p1, const void *p2, const void *p3)",
    "local": "（const void*p1，const void*p2，const void*p3）"
  },
  {
    "origin": "template&lt;int N&gt;",
    "local": "模板&lt；国际N&gt；"
  },
  {
    "origin": "(const void *p1, const void *p2, const void *p3, const void *p4)",
    "local": "（const void*p1，const void*p2，const void*p3，const void*p4）"
  },
  {
    "origin": "(std::ostream &amp;out, const TickMeter &amp;tm)",
    "local": "（标准：：ostream&amp；输出，常量计时表；商标）"
  },
  {
    "origin": "output operator",
    "local": "输出运算符"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const Range &amp;range, const ParallelLoopBody &amp;body, double nstripes=-1.)",
    "local": "（常数范围和；范围，常量；正文，双n条=-1。）"
  },
  {
    "origin": "Parallel data processor.",
    "local": "并行数据处理器。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const Range &amp;range, std::function&lt; void(const Range &amp;)&gt; functor, double nstripes=-1.)",
    "local": "（常数范围和；范围，std：：函数&lt；void（常量范围）&燃气轮机；函子，双n阶=-1。）"
  },
  {
    "origin": "(ErrorCallback errCallback, void *userdata=0, void **prevUserdata=0)",
    "local": "（ErrorCallback errCallback，void*userdata=0，void**prevUserdata=0）"
  },
  {
    "origin": "Sets the new error handler and the optional user data.",
    "local": "设置新的错误处理程序和可选的用户数据。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(int a, unsigned int b)",
    "local": "（int a，无符号int b）"
  },
  {
    "origin": "Round first value up to the nearest multiple of second value.",
    "local": "将第一个值四舍五入到第二个值的最近倍数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(size_t a, unsigned int b)",
    "local": "（大小a，无符号整数b）"
  },
  {
    "origin": "(bool flag)",
    "local": "（布尔旗）"
  },
  {
    "origin": "Sets/resets the break-on-error mode.",
    "local": "设置/重置错误中断模式。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(int nthreads)",
    "local": "（内景）"
  },
  {
    "origin": "OpenCV will try to set the number of threads for the next parallel region.",
    "local": "OpenCV将尝试为下一个并行区域设置线程数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(bool onoff)",
    "local": "（布尔-奥诺夫）"
  },
  {
    "origin": "Enables or disables the optimized code.",
    "local": "启用或禁用优化代码。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const char *suffix=0)",
    "local": "（常量字符*后缀=0）"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Returns the status of optimized code usage.",
    "local": "返回优化代码使用的状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Macro Definition Documentation",
    "local": "宏定义文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "CV_IMPL_ADD",
    "local": "CV\\ IMPL\\ U添加"
  },
  {
    "origin": "#define CV_IMPL_ADD",
    "local": "#定义CV\\u IMPL\\u ADD"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "impl",
    "local": "impl公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Collect implementation data on OpenCV function call. Requires ENABLE_IMPL_COLLECTION build option.",
    "local": "收集OpenCV函数调用的实现数据。需要启用\\u IMPL \\u集合生成选项。"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:33 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:33为OpenCV生成，&#160；"
  }
]