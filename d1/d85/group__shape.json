[
  {
    "origin": "OpenCV: Shape Distance and Matching",
    "local": "OpenCV：形状距离和匹配"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "Shape Distance and Matching",
    "local": "形状距离与匹配"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Wrapper class for the OpenCV Affine Transformation algorithm. :",
    "local": "OpenCV仿射变换算法的包装器类："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "An Chi based cost extraction. :",
    "local": "基于Chi的成本提取："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "An EMD based cost extraction. :",
    "local": "基于EMD的成本提取："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "An EMD-L1 based cost extraction. :",
    "local": "基于EMD-L1的成本提取："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "A simple Hausdorff distance measure between shapes defined by contours.",
    "local": "轮廓定义的形状之间的简单Hausdorff距离度量。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Abstract base class for histogram cost algorithms.",
    "local": "直方图代价算法的抽象基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "A norm based cost extraction. :",
    "local": "基于标准的成本提取："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Implementation of the Shape Context descriptor and matching algorithm.",
    "local": "形状上下文描述符和匹配算法的实现。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Abstract base class for shape distance algorithms.",
    "local": "形状距离算法的抽象基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Abstract base class for shape transformation algorithms.",
    "local": "形状变换算法的抽象基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Definition of the transformation.",
    "local": "转换的定义。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(bool fullAffine)",
    "local": "（布尔全仿射）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(int nDummies=25, float defaultCost=0.2f)",
    "local": "（int nDummies=25，float defaultCost=0.2f）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(int flag=",
    "local": "（int标志）="
  },
  {
    "origin": ", int nDummies=25, float defaultCost=0.2f)",
    "local": "，int nDummies=25，float defaultCost=0.2f）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(int nDummies=25, float defaultCost=0.2f)",
    "local": "（int nDummies=25，float defaultCost=0.2f）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(int distanceFlag=",
    "local": "（int距离标志）="
  },
  {
    "origin": ", float rankProp=0.6f)",
    "local": "，浮动范围=0.6f）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(int flag=",
    "local": "（int标志）="
  },
  {
    "origin": ", int nDummies=25, float defaultCost=0.2f)",
    "local": "，int nDummies=25，float defaultCost=0.2f）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(int nAngularBins=12, int nRadialBins=4, float innerRadius=0.2f, float outerRadius=2, int iterations=3, const Ptr&lt; HistogramCostExtractor &gt; &amp;comparer=createChiHistogramCostExtractor(), const Ptr&lt; ShapeTransformer &gt; &amp;transformer=createThinPlateSplineShapeTransformer())",
    "local": "（int nAngularBins=12，int nRadialBins=4，float innerRadius=0.2f，float outerRadius=2，int iterations=3，const Ptr&lt；组织学分析器&gt&amp；comparer=createChiHistorogramCostExtractor（），常量Ptr&lt；形状变换器&gt&amp；transformer=createThinPlateSplineShapeTransformer（））"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(double regularizationParameter=0)",
    "local": "（双正则化参数=0）"
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "signature1,",
    "local": "签名1，"
  },
  {
    "origin": "signature2)",
    "local": "签名2）"
  },
  {
    "origin": "Computes the \"minimal work\" distance between two weighted point configurations base on the papers \"EMD-L1: An efficient and Robust Algorithm for comparing histogram-based descriptors\", by Haibin Ling and Kazunori Okuda; and \"The Earth Mover's Distance is the Mallows Distance: Some Insights from Statistics\", by Elizaveta Levina and Peter Bickel.",
    "local": "计算两个加权点配置之间的“最小工作”距离，基于Haibin Ling和Kazunori Okuda的论文“EMD-L1:一种基于直方图的描述符比较的高效和鲁棒算法”；Elizaveta Levina和Peter Bickel的“地球搬运工的距离就是Mallows距离：从统计数据中得出的一些见解”。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createAffineTransformer()",
    "local": "createaffinetransformer（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::createAffineTransformer",
    "local": "&gt；创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "fullAffine",
    "local": "完全仿射"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.createAffineTransformer(",
    "local": "cv.仿射变换器("
  },
  {
    "origin": "fullAffine",
    "local": "完全仿射"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Complete constructor",
    "local": "完全构造器"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createChiHistogramCostExtractor()",
    "local": "肌动蛋白图"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::createChiHistogramCostExtractor",
    "local": "&燃气轮机；cv：：CreateChistorogramCostextractor"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "nDummies",
    "local": "恩杜米斯"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "defaultCost",
    "local": "违约成本"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.createChiHistogramCostExtractor(",
    "local": "cv.createChistogramCostExtractor公司("
  },
  {
    "origin": "[, nDummies[, defaultCost]]",
    "local": "[，nDummies[，defaultCost]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createEMDHistogramCostExtractor()",
    "local": "createmDhistogramCostextractor（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::createEMDHistogramCostExtractor",
    "local": "&燃气轮机；cv：：createEMDHistogramCostExtractor"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flag",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "nDummies",
    "local": "恩杜米斯"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "defaultCost",
    "local": "违约成本"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.createEMDHistogramCostExtractor(",
    "local": "cv.createEMDHistogramCostExtractor公司("
  },
  {
    "origin": "[, flag[, nDummies[, defaultCost]]]",
    "local": "[，标志[，nDummies[，defaultCost]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createEMDL1HistogramCostExtractor()",
    "local": "createEMDL1HistorogramCostextractor（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::createEMDL1HistogramCostExtractor",
    "local": "&燃气轮机；cv:：CreateEMDL1HistorogramCostExtractor创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "nDummies",
    "local": "恩杜米斯"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "defaultCost",
    "local": "违约成本"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.createEMDL1HistogramCostExtractor(",
    "local": "cv.CreateEMDL1历史图像提取程序("
  },
  {
    "origin": "[, nDummies[, defaultCost]]",
    "local": "[，nDummies[，defaultCost]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createHausdorffDistanceExtractor()",
    "local": "createHausdorffDistanceExtractor（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::createHausdorffDistanceExtractor",
    "local": "&燃气轮机；cv:：CreateHausdorff距离提取器"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "distanceFlag",
    "local": "距离标志"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "rankProp",
    "local": "朗克普罗普"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.createHausdorffDistanceExtractor(",
    "local": "cv.CreateHausdorff距离提取器("
  },
  {
    "origin": "[, distanceFlag[, rankProp]]",
    "local": "[，distanceFlag[，rankProp]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createNormHistogramCostExtractor()",
    "local": "createNormalHistorogramCostextractor（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::createNormHistogramCostExtractor",
    "local": "&燃气轮机；cv：：CreateNormalHistorogramCostextractor"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flag",
    "local": "旗帜"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "nDummies",
    "local": "恩杜米斯"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "defaultCost",
    "local": "违约成本"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.createNormHistogramCostExtractor(",
    "local": "简历CreateNormalHistorogramCostextractor("
  },
  {
    "origin": "[, flag[, nDummies[, defaultCost]]]",
    "local": "[，标志[，nDummies[，defaultCost]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createShapeContextDistanceExtractor()",
    "local": "createShapeContextDistanceExtractor（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::createShapeContextDistanceExtractor",
    "local": "&燃气轮机；cv:：createShapeContextDistanceExtractor"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "nAngularBins",
    "local": "角形垃圾箱"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "nRadialBins",
    "local": "放射性核素"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "innerRadius",
    "local": "因拉迪厄斯"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "outerRadius",
    "local": "外缘"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "iterations",
    "local": "迭代"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "comparer",
    "local": "比较器"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "transformer",
    "local": "变压器"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.createShapeContextDistanceExtractor(",
    "local": "cv.createShapeContextDistanceExtractor("
  },
  {
    "origin": "[, nAngularBins[, nRadialBins[, innerRadius[, outerRadius[, iterations[, comparer[, transformer]]]]]]]",
    "local": "[，nAngularBins[，nradiolbins[，innerRadius[，outerRadius[，iterations[，comparer[，transformer]]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "createThinPlateSplineShapeTransformer()",
    "local": "CreateThinPlatSplineShapeTransformer（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::createThinPlateSplineShapeTransformer",
    "local": "&燃气轮机；cv：：createThinPlateSplineShapeTransformer"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "regularizationParameter",
    "local": "正则化参数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.createThinPlateSplineShapeTransformer(",
    "local": "cv.createThinPlateSplineShapeTransformer公司("
  },
  {
    "origin": "[, regularizationParameter]",
    "local": "[，正则化参数]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Complete constructor",
    "local": "完全构造器"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "EMDL1()",
    "local": "EMDL1（）"
  },
  {
    "origin": "float cv::EMDL1",
    "local": "浮动cv：：EMDL1"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "signature1",
    "local": "签名1"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "signature2",
    "local": "签名2"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Computes the \"minimal work\" distance between two weighted point configurations base on the papers \"EMD-L1: An efficient and Robust Algorithm for comparing histogram-based descriptors\", by Haibin Ling and Kazunori Okuda; and \"The Earth Mover's Distance is the Mallows Distance: Some Insights from Statistics\", by Elizaveta Levina and Peter Bickel.",
    "local": "计算两个加权点配置之间的“最小工作”距离，基于Haibin Ling和Kazunori Okuda的论文“EMD-L1:一种基于直方图的描述符比较的高效和鲁棒算法”；Elizaveta Levina和Peter Bickel的“地球搬运工的距离就是Mallows距离：从统计数据中得出的一些见解”。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "signature1",
    "local": "签名1"
  },
  {
    "origin": "First signature, a single column floating-point matrix. Each row is the value of the histogram in each bin.",
    "local": "第一个签名，单列浮点矩阵。每一行是每个箱子中直方图的值。"
  },
  {
    "origin": "signature2",
    "local": "签名2"
  },
  {
    "origin": "Second signature of the same format and size as signature1.",
    "local": "与签名1格式和大小相同的第二个签名。"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:41为OpenCV生成"
  }
]