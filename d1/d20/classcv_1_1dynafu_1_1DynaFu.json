[
  {
    "origin": "OpenCV: cv::dynafu::DynaFu Class Reference",
    "local": "OpenCV:cv:：dynafu:：dynafu类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::dynafu::DynaFu Class Reference",
    "local": "cv:：dynafu:：dynafu类参考"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "points,",
    "local": "点数，"
  },
  {
    "origin": "Gets points and normals of current 3d mesh.",
    "local": "获取当前三维网格的点和法线。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual std::vector&lt;",
    "local": "虚拟标准：：向量&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "points,",
    "local": "点数，"
  },
  {
    "origin": "Calculates normals for given points.",
    "local": "计算给定点的法线。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual const",
    "local": "虚常量"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "Get current parameters.",
    "local": "获取当前参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Gets points of current 3d mesh.",
    "local": "获取当前三维网格的点。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual const",
    "local": "虚常量"
  },
  {
    "origin": "Get current pose in voxel space.",
    "local": "获取体素空间中的当前姿势。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "vertices,",
    "local": "顶点，"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, const",
    "local": "图像，const"
  },
  {
    "origin": "&amp;cameraPose=",
    "local": "&amp；摄像糖="
  },
  {
    "origin": "Renders a volume into an image.",
    "local": "将卷渲染为图像。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "depthImage,",
    "local": "深度图像，"
  },
  {
    "origin": "vertImage,",
    "local": "垂直图像，"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "Resets the algorithm.",
    "local": "重置算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Process next depth frame.",
    "local": "处理下一个深度帧。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;_params)",
    "local": "&gt；gt；amp_（参数）"
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "~DynaFu()",
    "local": "~DynaFu（）"
  },
  {
    "origin": "virtual cv::dynafu::DynaFu::~DynaFu",
    "local": "虚拟简历：：dynafu：：dynafu:~ dynafu"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::dynafu::DynaFu::create",
    "local": "&燃气轮机；cv:：dynafu:：dynafu:：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "_params",
    "local": "_参数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dynafu.DynaFu_create(",
    "local": "cv.dynafu.dynafu创建("
  },
  {
    "origin": "_params",
    "local": "_参数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getCloud()",
    "local": "getCloud（）"
  },
  {
    "origin": "virtual void cv::dynafu::DynaFu::getCloud",
    "local": "虚拟void cv:：dynafu:：dynafu:：getCloud"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "points",
    "local": "点数"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "normals",
    "local": "法线"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "points, normals",
    "local": "点，法线"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dynafu_DynaFu.getCloud(",
    "local": "动态云.getCloud("
  },
  {
    "origin": "[, points[, normals]]",
    "local": "[，点[，法线]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Gets points and normals of current 3d mesh.",
    "local": "获取当前三维网格的点和法线。"
  },
  {
    "origin": "The order of normals corresponds to order of points. The order of points is undefined.",
    "local": "法线的顺序对应于点的顺序。点的顺序未定义。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "points",
    "local": "点数"
  },
  {
    "origin": "vector of points which are 4-float vectors",
    "local": "点的向量是4-浮点向量"
  },
  {
    "origin": "normals",
    "local": "法线"
  },
  {
    "origin": "vector of normals which are 4-float vectors",
    "local": "法向量，它是4浮点向量"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getNodesPos()",
    "local": "getNodesPos（）"
  },
  {
    "origin": "virtual std::vector&lt;",
    "local": "虚拟标准：：向量&lt；"
  },
  {
    "origin": "&gt; cv::dynafu::DynaFu::getNodesPos",
    "local": "&燃气轮机；简历：：dynafu：：dynafu：：getNodesPos"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getNormals()",
    "local": "获取法线（）"
  },
  {
    "origin": "virtual void cv::dynafu::DynaFu::getNormals",
    "local": "虚空cv:：dynafu:：dynafu:：getNormals"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "points",
    "local": "点数"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "normals",
    "local": "法线"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "normals",
    "local": "法线"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dynafu_DynaFu.getNormals(",
    "local": "DynaFu.getNormals("
  },
  {
    "origin": "points[, normals]",
    "local": "点[，法线]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates normals for given points.",
    "local": "计算给定点的法线。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "points",
    "local": "点数"
  },
  {
    "origin": "input vector of points which are 4-float vectors",
    "local": "点的输入向量为4浮点向量"
  },
  {
    "origin": "normals",
    "local": "法线"
  },
  {
    "origin": "output vector of corresponding normals which are 4-float vectors",
    "local": "对应法线的输出向量，它是4浮点向量"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getParams()",
    "local": "获取参数（）"
  },
  {
    "origin": "virtual const",
    "local": "虚常量"
  },
  {
    "origin": "&amp; cv::dynafu::DynaFu::getParams",
    "local": "&amp；cv:：dynafu:：dynafu:：getParams"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Get current parameters.",
    "local": "获取当前参数。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getPoints()",
    "local": "获取点（）"
  },
  {
    "origin": "virtual void cv::dynafu::DynaFu::getPoints",
    "local": "虚拟void cv:：dynafu:：dynafu:：getPoints"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "points",
    "local": "点数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "points",
    "local": "点数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dynafu_DynaFu.getPoints(",
    "local": "DynaFu.getPoints文件("
  },
  {
    "origin": "[, points]",
    "local": "[，点]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Gets points of current 3d mesh.",
    "local": "获取当前三维网格的点。"
  },
  {
    "origin": "The order of points is undefined.",
    "local": "点的顺序未定义。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "points",
    "local": "点数"
  },
  {
    "origin": "vector of points which are 4-float vectors",
    "local": "点的向量是4-浮点向量"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getPose()",
    "local": "getPose（）"
  },
  {
    "origin": "virtual const",
    "local": "虚常量"
  },
  {
    "origin": "cv::dynafu::DynaFu::getPose",
    "local": "简历：：dynafu：：dynafu：：getPose"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Get current pose in voxel space.",
    "local": "获取体素空间中的当前姿势。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "marchCubes()",
    "local": "marchCubes（）"
  },
  {
    "origin": "virtual void cv::dynafu::DynaFu::marchCubes",
    "local": "虚拟空cv:：dynafu:：dynafu:：marchCubes"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "vertices",
    "local": "顶点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "edges",
    "local": "边缘"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "render()",
    "local": "渲染（）"
  },
  {
    "origin": "virtual void cv::dynafu::DynaFu::render",
    "local": "虚拟void cv:：dynafu:：dynafu:：render"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "cameraPose",
    "local": "摄影师"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dynafu_DynaFu.render(",
    "local": "动态渲染。"
  },
  {
    "origin": "[, image[, cameraPose]]",
    "local": "[，图像[，cameraPose]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Renders a volume into an image.",
    "local": "将卷渲染为图像。"
  },
  {
    "origin": "Renders a 0-surface of TSDF using Phong shading into a CV_8UC4",
    "local": "使用Phong着色将TSDF的0表面渲染为CV8uc4"
  },
  {
    "origin": ". Light pose is fixed in",
    "local": ". 灯光姿势固定在"
  },
  {
    "origin": "params.",
    "local": "参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": "resulting image",
    "local": "结果图像"
  },
  {
    "origin": "cameraPose",
    "local": "摄影师"
  },
  {
    "origin": "pose of camera to render from. If empty then render from current pose which is a last frame camera pose.",
    "local": "要从中渲染的摄影机的姿势。如果为空，则从当前姿势（最后一帧摄影机姿势）渲染。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "renderSurface()",
    "local": "renderSurface（）"
  },
  {
    "origin": "virtual void cv::dynafu::DynaFu::renderSurface",
    "local": "虚拟void cv:：dynafu:：dynafu:：renderSurface"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "depthImage",
    "local": "深度成像"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "vertImage",
    "local": "垂直图像"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "normImage",
    "local": "法线图像"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "warp",
    "local": "弯曲"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "reset()",
    "local": "重置（）"
  },
  {
    "origin": "virtual void cv::dynafu::DynaFu::reset",
    "local": "虚拟void cv:：dynafu:：dynafu:：reset"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dynafu_DynaFu.reset(",
    "local": "动态复位("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Resets the algorithm.",
    "local": "重置算法。"
  },
  {
    "origin": "Clears current model and resets a pose.",
    "local": "清除当前模型并重置姿势。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "update()",
    "local": "更新（）"
  },
  {
    "origin": "virtual bool cv::dynafu::DynaFu::update",
    "local": "虚拟bool cv:：dynafu:：dynafu:：update"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dynafu_DynaFu.update(",
    "local": "cv.dynafu dynafu.update更新("
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Process next depth frame.",
    "local": "处理下一个深度帧。"
  },
  {
    "origin": "Integrates depth into voxel space with respect to its ICP-calculated pose. Input image is converted to CV_32F internally if has another type.",
    "local": "根据ICP计算的姿态将深度集成到体素空间。如果输入图像有其他类型，则在内部将其转换为CV32f。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": "one-channel image which size and depth scale is described in algorithm's parameters",
    "local": "算法参数描述了单通道图像的大小和深度尺度"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "true if succeeded to align new frame with current scene, false if opposite",
    "local": "如果成功将新帧与当前场景对齐，则为true；如果相反，则为false"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/rgbd/",
    "local": "打开CV2/rgbd/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:47为OpenCV生成"
  }
]