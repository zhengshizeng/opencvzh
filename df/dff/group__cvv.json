[
  {
    "origin": "OpenCV: GUI for Interactive Visual Debugging of Computer Vision Programs",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "GUI for Interactive Visual Debugging of Computer Vision Programs",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "RAII-class to call",
    "local": ""
  },
  {
    "origin": "in it's dtor.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img1, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; keypoints1,",
    "local": ""
  },
  {
    "origin": "img2, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; keypoints2, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; matches, const",
    "local": ""
  },
  {
    "origin": "&amp;data, const char *description=nullptr, const char *view=nullptr, bool useTrainDescriptor=true)",
    "local": ""
  },
  {
    "origin": "Add a filled in DMatch &lt;dmatch&gt; to debug GUI.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img1, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; keypoints1,",
    "local": ""
  },
  {
    "origin": "img2, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; keypoints2, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; matches, const",
    "local": ""
  },
  {
    "origin": "&amp;data, const std::string &amp;description, const std::string &amp;view, bool useTrainDescriptor=true)",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "original,",
    "local": ""
  },
  {
    "origin": "result,",
    "local": ""
  },
  {
    "origin": "metaData=",
    "local": ""
  },
  {
    "origin": "(), const char *description=nullptr, const char *view=nullptr)",
    "local": ""
  },
  {
    "origin": "Use the debug-framework to compare two images (from which the second is intended to be the result of a filter applied to the first).",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "original,",
    "local": ""
  },
  {
    "origin": "result,",
    "local": ""
  },
  {
    "origin": "metaData, const ::std::string &amp;description, const ::std::string &amp;view=&quot;&quot;)",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Returns whether debug-mode is active for this TU and thread.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Passes the control to the debug-window for a last time.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(bool active)",
    "local": ""
  },
  {
    "origin": "Enable or disable cvv for current translation unit and thread.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img,",
    "local": ""
  },
  {
    "origin": "metaData=",
    "local": ""
  },
  {
    "origin": "(), const char *description=nullptr, const char *view=nullptr)",
    "local": ""
  },
  {
    "origin": "Add a single image to debug GUI (similar to imshow &lt;&gt;).",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img,",
    "local": ""
  },
  {
    "origin": "metaData, const ::std::string &amp;description, const ::std::string &amp;view=&quot;&quot;)",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Namespace for all functions is",
    "local": ""
  },
  {
    "origin": "cvv",
    "local": ""
  },
  {
    "origin": ", i.e.",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Compilation:",
    "local": ""
  },
  {
    "origin": "For development, i.e. for cvv GUI to show up, compile your code using cvv with g++ -DCVVISUAL_DEBUGMODE*.",
    "local": ""
  },
  {
    "origin": "For release, i.e. cvv calls doing nothing, compile your code without above flag.",
    "local": ""
  },
  {
    "origin": "See cvv tutorial for a commented example application using cvv.",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "debugDMatch()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "static void cvv::debugDMatch",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "keypoints1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "img2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "keypoints2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "matches",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "description",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "view",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "useTrainDescriptor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Add a filled in DMatch &lt;dmatch&gt; to debug GUI.",
    "local": ""
  },
  {
    "origin": "The matches can are visualized for interactive inspection in different GUI views (one similar to an interactive :draw_matches:drawMatches&lt;&gt;).",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "img1",
    "local": ""
  },
  {
    "origin": "First image used in DMatch &lt;dmatch&gt;.",
    "local": ""
  },
  {
    "origin": "keypoints1",
    "local": ""
  },
  {
    "origin": "Keypoints of first image.",
    "local": ""
  },
  {
    "origin": "img2",
    "local": ""
  },
  {
    "origin": "Second image used in DMatch.",
    "local": ""
  },
  {
    "origin": "keypoints2",
    "local": ""
  },
  {
    "origin": "Keypoints of second image.",
    "local": ""
  },
  {
    "origin": "matches",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": "See showImage",
    "local": ""
  },
  {
    "origin": "description",
    "local": ""
  },
  {
    "origin": "See showImage",
    "local": ""
  },
  {
    "origin": "view",
    "local": ""
  },
  {
    "origin": "See showImage",
    "local": ""
  },
  {
    "origin": "useTrainDescriptor",
    "local": ""
  },
  {
    "origin": "Use DMatch &lt;dmatch&gt;'s train descriptor index instead of query descriptor index.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "debugDMatch()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "static void cvv::debugDMatch",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "keypoints1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "img2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "keypoints2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "matches",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "description",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "view",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "useTrainDescriptor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "debugFilter()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "static void cvv::debugFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "original",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "result",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "metaData",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "description",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "view",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Use the debug-framework to compare two images (from which the second is intended to be the result of a filter applied to the first).",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "debugFilter()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "static void cvv::debugFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "original",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "result",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "metaData",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "description",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "view",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "debugMode()",
    "local": ""
  },
  {
    "origin": "static bool cvv::debugMode",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Returns whether debug-mode is active for this TU and thread.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "finalShow()",
    "local": ""
  },
  {
    "origin": "void cvv::finalShow",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Passes the control to the debug-window for a last time.",
    "local": ""
  },
  {
    "origin": "This function",
    "local": ""
  },
  {
    "origin": "must",
    "local": ""
  },
  {
    "origin": "be called",
    "local": ""
  },
  {
    "origin": "once",
    "local": ""
  },
  {
    "origin": "after",
    "local": ""
  },
  {
    "origin": "all cvv calls if any. As an alternative create an instance of",
    "local": ""
  },
  {
    "origin": ", which calls",
    "local": ""
  },
  {
    "origin": "in its destructor (RAII-style).",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setDebugFlag()",
    "local": ""
  },
  {
    "origin": "static void cvv::setDebugFlag",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "active",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Enable or disable cvv for current translation unit and thread.",
    "local": ""
  },
  {
    "origin": "(disabled this way has higher - but still low - overhead compared to using the compile flags).",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "active",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "showImage()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "static void cvv::showImage",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "metaData",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "description",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "view",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Add a single image to debug GUI (similar to imshow &lt;&gt;).",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "Image to show in debug GUI.",
    "local": ""
  },
  {
    "origin": "metaData",
    "local": ""
  },
  {
    "origin": "Properly initialized CallMetaData struct, i.e. information about file, line and function name for GUI. Use CVVISUAL_LOCATION macro.",
    "local": ""
  },
  {
    "origin": "description",
    "local": ""
  },
  {
    "origin": "Human readable description to provide context to image.",
    "local": ""
  },
  {
    "origin": "view",
    "local": ""
  },
  {
    "origin": "Preselect view that will be used to visualize this image in GUI. Other views can still be selected in GUI later on.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "showImage()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "static void cvv::showImage",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "metaData",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "description",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "view",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by &#160;",
    "local": ""
  }
]