[
  {
    "origin": "OpenCV: cv::gapi::streaming Namespace Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming Namespace Reference",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;in)",
    "local": ""
  },
  {
    "origin": "Gets bgr plane from input frame.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;g)",
    "local": ""
  },
  {
    "origin": "Starts a desynchronized branch in the graph.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(GY,&lt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")&gt;, \"org.opencv.streaming.Y\")",
    "local": ""
  },
  {
    "origin": "(GUV,&lt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")&gt;, \"org.opencv.streaming.UV\")",
    "local": ""
  },
  {
    "origin": "(GSize,&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;(",
    "local": ""
  },
  {
    "origin": ")&gt;, \"org.opencv.streaming.size\")",
    "local": ""
  },
  {
    "origin": "(GSizeR,&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;(",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;)&gt;, \"org.opencv.streaming.sizeR\")",
    "local": ""
  },
  {
    "origin": "(GSizeMF,&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;(",
    "local": ""
  },
  {
    "origin": ")&gt;, \"org.opencv.streaming.sizeMF\")",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Create a kernel package object containing kernels and transformations specified in variadic template argument.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;typename T , typename G &gt;",
    "local": ""
  },
  {
    "origin": "&lt; T &gt;",
    "local": ""
  },
  {
    "origin": "(G g, const std::string &amp;tag)",
    "local": ""
  },
  {
    "origin": "template&lt;typename G &gt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "(G g)",
    "local": ""
  },
  {
    "origin": "template&lt;typename G &gt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "(G g)",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;src)",
    "local": ""
  },
  {
    "origin": "Gets dimensions from",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;r)",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;src)",
    "local": ""
  },
  {
    "origin": "Gets dimensions from",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;typename G &gt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "(G g)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;frame)",
    "local": ""
  },
  {
    "origin": "Extracts UV plane from media frame.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;frame)",
    "local": ""
  },
  {
    "origin": "Extracts Y plane from media frame.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Enumeration Type Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "sync_policy",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "strong",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "dont_sync",
    "local": ""
  },
  {
    "origin": "drop",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "BGR()",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming::BGR",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "in",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Gets bgr plane from input frame.",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Function textual ID is \"org.opencv.streaming.BGR\"",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "in",
    "local": ""
  },
  {
    "origin": "Input frame",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "Image in BGR format",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "desync()",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming::desync",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "g",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Starts a desynchronized branch in the graph.",
    "local": ""
  },
  {
    "origin": "This operation takes a single G-API data object and returns a graph-level \"duplicate\" of this object.",
    "local": ""
  },
  {
    "origin": "Operations which use this data object can be desynchronized from the rest of the graph.",
    "local": ""
  },
  {
    "origin": "This operation has no effect when a",
    "local": ""
  },
  {
    "origin": "is compiled with regular",
    "local": ""
  },
  {
    "origin": ", since",
    "local": ""
  },
  {
    "origin": "objects always produce their full output vectors.",
    "local": ""
  },
  {
    "origin": "This operation only makes sense when a",
    "local": ""
  },
  {
    "origin": "is compiled in straming mode with",
    "local": ""
  },
  {
    "origin": ". If this operation is used and there are desynchronized outputs, the user should use a special version of cv::GStreamingCompiled::pull() which produces an array of cv::util::optional&lt;&gt; objects.",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "This feature is highly experimental now and is currently limited to a single",
    "local": ""
  },
  {
    "origin": "argument only.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "G_API_OP()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming::G_API_OP",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "GY",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")&gt;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "\"org.opencv.streaming.Y\"",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "G_API_OP()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming::G_API_OP",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "GUV",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")&gt;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "\"org.opencv.streaming.UV\"",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "G_TYPED_KERNEL()",
    "local": ""
  },
  {
    "origin": "[1/3]",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming::G_TYPED_KERNEL",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "GSize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;(",
    "local": ""
  },
  {
    "origin": ")&gt;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "\"org.opencv.streaming.size\"",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "G_TYPED_KERNEL()",
    "local": ""
  },
  {
    "origin": "[2/3]",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming::G_TYPED_KERNEL",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "GSizeR",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;(",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;)&gt;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "\"org.opencv.streaming.sizeR\"",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "G_TYPED_KERNEL()",
    "local": ""
  },
  {
    "origin": "[3/3]",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming::G_TYPED_KERNEL",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "GSizeMF",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt;(",
    "local": ""
  },
  {
    "origin": ")&gt;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "\"org.opencv.streaming.sizeMF\"",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "meta()",
    "local": ""
  },
  {
    "origin": "template&lt;typename T , typename G &gt;",
    "local": ""
  },
  {
    "origin": "&lt;T&gt; cv::gapi::streaming::meta",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "G",
    "local": ""
  },
  {
    "origin": "g",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::string &amp;",
    "local": ""
  },
  {
    "origin": "tag",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "seq_id()",
    "local": ""
  },
  {
    "origin": "template&lt;typename G &gt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::gapi::streaming::seq_id",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "G",
    "local": ""
  },
  {
    "origin": "g",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "seqNo()",
    "local": ""
  },
  {
    "origin": "template&lt;typename G &gt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::gapi::streaming::seqNo",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "G",
    "local": ""
  },
  {
    "origin": "g",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "size()",
    "local": ""
  },
  {
    "origin": "[1/3]",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::gapi::streaming::size",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.gapi.streaming.size(",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.gapi.streaming.size(",
    "local": ""
  },
  {
    "origin": "r",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Gets dimensions from",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Function textual ID is \"org.opencv.streaming.size\"",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": "Input tensor",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "Size (tensor dimensions).",
    "local": ""
  },
  {
    "origin": "Examples:",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ", and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "size()",
    "local": ""
  },
  {
    "origin": "[2/3]",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::gapi::streaming::size",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "r",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.gapi.streaming.size(",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.gapi.streaming.size(",
    "local": ""
  },
  {
    "origin": "r",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Gets dimensions from rectangle.",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Function textual ID is \"org.opencv.streaming.sizeR\"",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "r",
    "local": ""
  },
  {
    "origin": "Input rectangle.",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "Size (rectangle dimensions).",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "size()",
    "local": ""
  },
  {
    "origin": "[3/3]",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::gapi::streaming::size",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.gapi.streaming.size(",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.gapi.streaming.size(",
    "local": ""
  },
  {
    "origin": "r",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Gets dimensions from",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Function textual ID is \"org.opencv.streaming.sizeMF\"",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": "Input frame",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "Size (frame dimensions).",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "timestamp()",
    "local": ""
  },
  {
    "origin": "template&lt;typename G &gt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::gapi::streaming::timestamp",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "G",
    "local": ""
  },
  {
    "origin": "g",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "UV()",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming::UV",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "frame",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Extracts UV plane from media frame.",
    "local": ""
  },
  {
    "origin": "Output image is 8-bit 2-channel image of",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Function textual ID is \"org.opencv.streaming.UV\"",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "frame",
    "local": ""
  },
  {
    "origin": "input media frame.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "Y()",
    "local": ""
  },
  {
    "origin": "cv::gapi::streaming::Y",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "frame",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Extracts Y plane from media frame.",
    "local": ""
  },
  {
    "origin": "Output image is 8-bit 1-channel image of",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Function textual ID is \"org.opencv.streaming.Y\"",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "frame",
    "local": ""
  },
  {
    "origin": "input media frame.",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by",
    "local": ""
  }
]