[
  {
    "origin": "OpenCV: cv::ccm::ColorCorrectionModel Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel Class Reference",
    "local": ""
  },
  {
    "origin": "»",
    "local": ""
  },
  {
    "origin": "Core class of ccm model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;src,",
    "local": ""
  },
  {
    "origin": "constcolor)",
    "local": ""
  },
  {
    "origin": "Color Correction Model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;src,",
    "local": ""
  },
  {
    "origin": "colors,",
    "local": ""
  },
  {
    "origin": "ref_cs)",
    "local": ""
  },
  {
    "origin": "Color Correction Model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;src,",
    "local": ""
  },
  {
    "origin": "colors,",
    "local": ""
  },
  {
    "origin": "ref_cs,",
    "local": ""
  },
  {
    "origin": "colored)",
    "local": ""
  },
  {
    "origin": "Color Correction Model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;img, bool islinear=false)",
    "local": ""
  },
  {
    "origin": "Infer using fitting ccm.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "make color correction",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "ccm_type)",
    "local": ""
  },
  {
    "origin": "set ccm_type",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "cs)",
    "local": ""
  },
  {
    "origin": "set ColorSpace",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "distance)",
    "local": ""
  },
  {
    "origin": "set Distance",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const double &amp;epsilon)",
    "local": ""
  },
  {
    "origin": "set Epsilon",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "initial_method_type)",
    "local": ""
  },
  {
    "origin": "set InitialMethod",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "linear_type)",
    "local": ""
  },
  {
    "origin": "set Linear",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const int &amp;deg)",
    "local": ""
  },
  {
    "origin": "set degree",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const double &amp;gamma)",
    "local": ""
  },
  {
    "origin": "set Gamma",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const int &amp;max_count)",
    "local": ""
  },
  {
    "origin": "set MaxCount",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const double &amp;lower, const double &amp;upper)",
    "local": ""
  },
  {
    "origin": "set SaturatedThreshold. The colors in the closed interval [lower, upper] are reserved to participate in the calculation of the loss function and initialization parameters",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const double &amp;weights_coeff)",
    "local": ""
  },
  {
    "origin": "set WeightCoeff",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;weights_list)",
    "local": ""
  },
  {
    "origin": "set WeightsList",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Core class of ccm model.",
    "local": ""
  },
  {
    "origin": "Produce a",
    "local": ""
  },
  {
    "origin": "instance for inference",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "ColorCorrectionModel()",
    "local": ""
  },
  {
    "origin": "[1/3]",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel::ColorCorrectionModel",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "constcolor",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;ccm_ColorCorrectionModel object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel(",
    "local": ""
  },
  {
    "origin": "src, constcolor",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;ccm_ColorCorrectionModel object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel(",
    "local": ""
  },
  {
    "origin": "src, colors, ref_cs",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;ccm_ColorCorrectionModel object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel(",
    "local": ""
  },
  {
    "origin": "src, colors, ref_cs, colored",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Color Correction Model.",
    "local": ""
  },
  {
    "origin": "Supported list of color cards:",
    "local": ""
  },
  {
    "origin": ", the Macbeth ColorChecker",
    "local": ""
  },
  {
    "origin": ", the DKK ColorChecker",
    "local": ""
  },
  {
    "origin": ", the DigitalSG ColorChecker with 140 squares",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": "detected colors of ColorChecker patches;",
    "local": ""
  },
  {
    "origin": "the color type is RGB not BGR, and the color values are in [0, 1];",
    "local": ""
  },
  {
    "origin": "constcolor",
    "local": ""
  },
  {
    "origin": "the Built-in color card",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "ColorCorrectionModel()",
    "local": ""
  },
  {
    "origin": "[2/3]",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel::ColorCorrectionModel",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "colors",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ref_cs",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;ccm_ColorCorrectionModel object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel(",
    "local": ""
  },
  {
    "origin": "src, constcolor",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;ccm_ColorCorrectionModel object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel(",
    "local": ""
  },
  {
    "origin": "src, colors, ref_cs",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;ccm_ColorCorrectionModel object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel(",
    "local": ""
  },
  {
    "origin": "src, colors, ref_cs, colored",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Color Correction Model.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": "detected colors of ColorChecker patches;",
    "local": ""
  },
  {
    "origin": "the color type is RGB not BGR, and the color values are in [0, 1];",
    "local": ""
  },
  {
    "origin": "colors",
    "local": ""
  },
  {
    "origin": "the reference color values, the color values are in [0, 1].",
    "local": ""
  },
  {
    "origin": "ref_cs",
    "local": ""
  },
  {
    "origin": "the corresponding color space If the color type is some RGB, the format is RGB not BGR;",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "ColorCorrectionModel()",
    "local": ""
  },
  {
    "origin": "[3/3]",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel::ColorCorrectionModel",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "colors",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ref_cs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "colored",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;ccm_ColorCorrectionModel object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel(",
    "local": ""
  },
  {
    "origin": "src, constcolor",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;ccm_ColorCorrectionModel object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel(",
    "local": ""
  },
  {
    "origin": "src, colors, ref_cs",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;ccm_ColorCorrectionModel object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel(",
    "local": ""
  },
  {
    "origin": "src, colors, ref_cs, colored",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Color Correction Model.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": "detected colors of ColorChecker patches;",
    "local": ""
  },
  {
    "origin": "the color type is RGB not BGR, and the color values are in [0, 1];",
    "local": ""
  },
  {
    "origin": "colors",
    "local": ""
  },
  {
    "origin": "the reference color values, the color values are in [0, 1].",
    "local": ""
  },
  {
    "origin": "ref_cs",
    "local": ""
  },
  {
    "origin": "the corresponding color space If the color type is some RGB, the format is RGB not BGR;",
    "local": ""
  },
  {
    "origin": "colored",
    "local": ""
  },
  {
    "origin": "mask of colored color",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "get_dst_rgbl()",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel::get_dst_rgbl",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.get_dst_rgbl(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "get_src_rgbl()",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel::get_src_rgbl",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.get_src_rgbl(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getCCM()",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel::getCCM",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.getCCM(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getLoss()",
    "local": ""
  },
  {
    "origin": "double cv::ccm::ColorCorrectionModel::getLoss",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.getLoss(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getMask()",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel::getMask",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.getMask(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getWeights()",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel::getWeights",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.getWeights(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "infer()",
    "local": ""
  },
  {
    "origin": "cv::ccm::ColorCorrectionModel::infer",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "islinear",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.infer(",
    "local": ""
  },
  {
    "origin": "img[, islinear]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Infer using fitting ccm.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "img",
    "local": ""
  },
  {
    "origin": "the input image.",
    "local": ""
  },
  {
    "origin": "islinear",
    "local": ""
  },
  {
    "origin": "default false.",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "the output array.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "run()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::run",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.run(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "make color correction",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setCCM_TYPE()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setCCM_TYPE",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "ccm_type",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setCCM_TYPE(",
    "local": ""
  },
  {
    "origin": "ccm_type",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set ccm_type",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "ccm_type",
    "local": ""
  },
  {
    "origin": "the shape of color correction matrix(CCM);",
    "local": ""
  },
  {
    "origin": "default:",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setColorSpace()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setColorSpace",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "cs",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setColorSpace(",
    "local": ""
  },
  {
    "origin": "cs",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set ColorSpace",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "It should be some RGB color space; Supported list of color cards:",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "cs",
    "local": ""
  },
  {
    "origin": "the absolute color space that detected colors convert to;",
    "local": ""
  },
  {
    "origin": "default:",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setDistance()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setDistance",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "distance",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setDistance(",
    "local": ""
  },
  {
    "origin": "distance",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set Distance",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "distance",
    "local": ""
  },
  {
    "origin": "the type of color distance;",
    "local": ""
  },
  {
    "origin": "default:",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setEpsilon()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setEpsilon",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const double &amp;",
    "local": ""
  },
  {
    "origin": "epsilon",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setEpsilon(",
    "local": ""
  },
  {
    "origin": "epsilon",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set Epsilon",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "epsilon",
    "local": ""
  },
  {
    "origin": "used in MinProblemSolver-DownhillSolver;",
    "local": ""
  },
  {
    "origin": "Terminal criteria to the algorithm;",
    "local": ""
  },
  {
    "origin": "default: 1e-4;",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setInitialMethod()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setInitialMethod",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "initial_method_type",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setInitialMethod(",
    "local": ""
  },
  {
    "origin": "initial_method_type",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set InitialMethod",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "initial_method_type",
    "local": ""
  },
  {
    "origin": "the method of calculating CCM initial value;",
    "local": ""
  },
  {
    "origin": "default: INITIAL_METHOD_LEAST_SQUARE",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setLinear()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setLinear",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "linear_type",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setLinear(",
    "local": ""
  },
  {
    "origin": "linear_type",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set Linear",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "linear_type",
    "local": ""
  },
  {
    "origin": "the method of linearization;",
    "local": ""
  },
  {
    "origin": "default:",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setLinearDegree()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setLinearDegree",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const int &amp;",
    "local": ""
  },
  {
    "origin": "deg",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setLinearDegree(",
    "local": ""
  },
  {
    "origin": "deg",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set degree",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "only valid when linear is set to",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "deg",
    "local": ""
  },
  {
    "origin": "the degree of linearization polynomial;",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setLinearGamma()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setLinearGamma",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const double &amp;",
    "local": ""
  },
  {
    "origin": "gamma",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setLinearGamma(",
    "local": ""
  },
  {
    "origin": "gamma",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set Gamma",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "only valid when linear is set to \"gamma\";",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "gamma",
    "local": ""
  },
  {
    "origin": "the gamma value of gamma correction;",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setMaxCount()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setMaxCount",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const int &amp;",
    "local": ""
  },
  {
    "origin": "max_count",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setMaxCount(",
    "local": ""
  },
  {
    "origin": "max_count",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set MaxCount",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "max_count",
    "local": ""
  },
  {
    "origin": "used in MinProblemSolver-DownhillSolver;",
    "local": ""
  },
  {
    "origin": "Terminal criteria to the algorithm;",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setSaturatedThreshold()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setSaturatedThreshold",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const double &amp;",
    "local": ""
  },
  {
    "origin": "lower",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const double &amp;",
    "local": ""
  },
  {
    "origin": "upper",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setSaturatedThreshold(",
    "local": ""
  },
  {
    "origin": "lower, upper",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set SaturatedThreshold. The colors in the closed interval [lower, upper] are reserved to participate in the calculation of the loss function and initialization parameters",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "lower",
    "local": ""
  },
  {
    "origin": "the lower threshold to determine saturation;",
    "local": ""
  },
  {
    "origin": "upper",
    "local": ""
  },
  {
    "origin": "the upper threshold to determine saturation;",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setWeightCoeff()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setWeightCoeff",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const double &amp;",
    "local": ""
  },
  {
    "origin": "weights_coeff",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setWeightCoeff(",
    "local": ""
  },
  {
    "origin": "weights_coeff",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set WeightCoeff",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "weights_coeff",
    "local": ""
  },
  {
    "origin": "the exponent number of L* component of the reference color in CIE Lab color space;",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setWeightsList()",
    "local": ""
  },
  {
    "origin": "void cv::ccm::ColorCorrectionModel::setWeightsList",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "weights_list",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ccm_ColorCorrectionModel.setWeightsList(",
    "local": ""
  },
  {
    "origin": "weights_list",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "set WeightsList",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "weights_list",
    "local": ""
  },
  {
    "origin": "the list of weight of each color;",
    "local": ""
  },
  {
    "origin": "default: empty array",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/mcc/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:44 for OpenCV by",
    "local": ""
  }
]