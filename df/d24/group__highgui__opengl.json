[
  {
    "origin": "OpenCV: OpenGL support",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "OpenGL support",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;winname, const",
    "local": ""
  },
  {
    "origin": "&amp;tex)",
    "local": ""
  },
  {
    "origin": "Displays OpenGL 2D texture in the specified window.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;winname)",
    "local": ""
  },
  {
    "origin": "Sets the specified window as current OpenGL context.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;winname,",
    "local": ""
  },
  {
    "origin": "onOpenGlDraw, void *userdata=0)",
    "local": ""
  },
  {
    "origin": "Sets a callback function to be called to draw on top of displayed image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;winname)",
    "local": ""
  },
  {
    "origin": "Force window to redraw its context and call draw callback ( See",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "imshow()",
    "local": ""
  },
  {
    "origin": "void cv::imshow",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "winname",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "tex",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.imshow(",
    "local": ""
  },
  {
    "origin": "winname, mat",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Displays OpenGL 2D texture in the specified window.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "winname",
    "local": ""
  },
  {
    "origin": "Name of the window.",
    "local": ""
  },
  {
    "origin": "tex",
    "local": ""
  },
  {
    "origin": "OpenGL 2D texture data.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setOpenGlContext()",
    "local": ""
  },
  {
    "origin": "void cv::setOpenGlContext",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "winname",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the specified window as current OpenGL context.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "winname",
    "local": ""
  },
  {
    "origin": "Name of the window.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setOpenGlDrawCallback()",
    "local": ""
  },
  {
    "origin": "void cv::setOpenGlDrawCallback",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "winname",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "onOpenGlDraw",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "void *",
    "local": ""
  },
  {
    "origin": "userdata",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets a callback function to be called to draw on top of displayed image.",
    "local": ""
  },
  {
    "origin": "The function setOpenGlDrawCallback can be used to draw 3D data on the window. See the example of callback function below:",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "winname",
    "local": ""
  },
  {
    "origin": "Name of the window.",
    "local": ""
  },
  {
    "origin": "onOpenGlDraw",
    "local": ""
  },
  {
    "origin": "Pointer to the function to be called every frame. This function should be prototyped as void Foo(void*) .",
    "local": ""
  },
  {
    "origin": "userdata",
    "local": ""
  },
  {
    "origin": "Pointer passed to the callback function.(",
    "local": ""
  },
  {
    "origin": "Optional",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "updateWindow()",
    "local": ""
  },
  {
    "origin": "void cv::updateWindow",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "winname",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Force window to redraw its context and call draw callback ( See",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "winname",
    "local": ""
  },
  {
    "origin": "Name of the window.",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:40 for OpenCV by",
    "local": ""
  }
]