[
  {
    "origin": "OpenCV: Member List",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "cv::Mat_&lt; _Tp &gt; Member List",
    "local": ""
  },
  {
    "origin": "This is the complete list of members for",
    "local": ""
  },
  {
    "origin": ", including all inherited members.",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(int dtop, int dbottom, int dleft, int dright)",
    "local": ""
  },
  {
    "origin": "(Mat &amp;m, int type=-1) const",
    "local": ""
  },
  {
    "origin": "(int i0=0)",
    "local": ""
  },
  {
    "origin": "(int i0=0) const",
    "local": ""
  },
  {
    "origin": "(int row, int col)",
    "local": ""
  },
  {
    "origin": "(int row, int col) const",
    "local": ""
  },
  {
    "origin": "(int i0, int i1, int i2)",
    "local": ""
  },
  {
    "origin": "(int i0, int i1, int i2) const",
    "local": ""
  },
  {
    "origin": "(const int *idx)",
    "local": ""
  },
  {
    "origin": "(const int *idx) const",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx)",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx) const",
    "local": ""
  },
  {
    "origin": "(Point pt)",
    "local": ""
  },
  {
    "origin": "(Point pt) const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(int elemChannels, int depth=-1, bool requireContinuous=true) const",
    "local": ""
  },
  {
    "origin": "() const CV_NODISCARD",
    "local": ""
  },
  {
    "origin": "(int x) const",
    "local": ""
  },
  {
    "origin": "(int startcol, int endcol) const",
    "local": ""
  },
  {
    "origin": "(const Range &amp;r) const",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "(OutputArray m, int rtype, double alpha=1, double beta=0) const",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": ""
  },
  {
    "origin": "(OutputArray m) const",
    "local": ""
  },
  {
    "origin": "(OutputArray m, InputArray mask) const",
    "local": ""
  },
  {
    "origin": "(int _rows, int _cols)",
    "local": ""
  },
  {
    "origin": "(Size _size)",
    "local": ""
  },
  {
    "origin": "(int _ndims, const int *_sizes)",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": ""
  },
  {
    "origin": "(Size size, int type)",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sizes, int type)",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;sizes, int type)",
    "local": ""
  },
  {
    "origin": "(const Mat_ &amp;m) const",
    "local": ""
  },
  {
    "origin": "(InputArray m) const",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "(int d=0) const",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;d)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(InputArray m) const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(int rows, int cols)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Size size)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Size size, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const Functor &amp;operation)",
    "local": ""
  },
  {
    "origin": "(const Functor &amp;operation) const",
    "local": ""
  },
  {
    "origin": "(const Functor &amp;operation)",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(AccessFlag accessFlags, UMatUsageFlags usageFlags=USAGE_DEFAULT) const",
    "local": ""
  },
  {
    "origin": "(int method=DECOMP_LU) const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "(Size &amp;wholeSize, Point &amp;ofs) const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "() CV_NOEXCEPT",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": ""
  },
  {
    "origin": "(Size size, int type)",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type, const Scalar &amp;s)",
    "local": ""
  },
  {
    "origin": "(Size size, int type, const Scalar &amp;s)",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sizes, int type)",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;sizes, int type)",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sizes, int type, const Scalar &amp;s)",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;sizes, int type, const Scalar &amp;s)",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type, void *data, size_t step=AUTO_STEP)",
    "local": ""
  },
  {
    "origin": "(Size size, int type, void *data, size_t step=AUTO_STEP)",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sizes, int type, void *data, const size_t *steps=0)",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;sizes, int type, void *data, const size_t *steps=0)",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;m, const Range &amp;rowRange, const Range &amp;colRange=Range::all())",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;m, const Rect &amp;roi)",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;m, const Range *ranges)",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;m, const std::vector&lt; Range &gt; &amp;ranges)",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; _Tp &gt; &amp;vec, bool copyData=false)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const std::initializer_list&lt; _Tp &gt; list)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const std::initializer_list&lt; int &gt; sizes, const std::initializer_list&lt; _Tp &gt; list)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const std::array&lt; _Tp, _Nm &gt; &amp;arr, bool copyData=false)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; _Tp, n &gt; &amp;vec, bool copyData=true)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const Matx&lt; _Tp, m, n &gt; &amp;mtx, bool copyData=true)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const Point_&lt; _Tp &gt; &amp;pt, bool copyData=true)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const Point3_&lt; _Tp &gt; &amp;pt, bool copyData=true)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const MatCommaInitializer_&lt; _Tp &gt; &amp;commaInitializer)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const cuda::GpuMat &amp;m)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(Mat &amp;&amp;m)",
    "local": ""
  },
  {
    "origin": "() CV_NOEXCEPT",
    "local": ""
  },
  {
    "origin": "(int _rows, int _cols)",
    "local": ""
  },
  {
    "origin": "(int _rows, int _cols, const _Tp &amp;value)",
    "local": ""
  },
  {
    "origin": "(Size _size)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(Size _size, const _Tp &amp;value)",
    "local": ""
  },
  {
    "origin": "(int _ndims, const int *_sizes)",
    "local": ""
  },
  {
    "origin": "(int _ndims, const int *_sizes, const _Tp &amp;value)",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": ""
  },
  {
    "origin": "(const Mat_ &amp;m)",
    "local": ""
  },
  {
    "origin": "(int _rows, int _cols, _Tp *_data, size_t _step=AUTO_STEP)",
    "local": ""
  },
  {
    "origin": "(int _ndims, const int *_sizes, _Tp *_data, const size_t *_steps=0)",
    "local": ""
  },
  {
    "origin": "(const Mat_ &amp;m, const Range &amp;rowRange, const Range &amp;colRange=Range::all())",
    "local": ""
  },
  {
    "origin": "(const Mat_ &amp;m, const Rect &amp;roi)",
    "local": ""
  },
  {
    "origin": "(const Mat_ &amp;m, const Range *ranges)",
    "local": ""
  },
  {
    "origin": "(const Mat_ &amp;m, const std::vector&lt; Range &gt; &amp;ranges)",
    "local": ""
  },
  {
    "origin": "(const MatExpr &amp;e)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; _Tp &gt; &amp;vec, bool copyData=false)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; typename DataType&lt; _Tp &gt;::channel_type, n &gt; &amp;vec, bool copyData=true)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const Matx&lt; typename DataType&lt; _Tp &gt;::channel_type, m, n &gt; &amp;mtx, bool copyData=true)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const Point_&lt; typename DataType&lt; _Tp &gt;::channel_type &gt; &amp;pt, bool copyData=true)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const Point3_&lt; typename DataType&lt; _Tp &gt;::channel_type &gt; &amp;pt, bool copyData=true)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const MatCommaInitializer_&lt; _Tp &gt; &amp;commaInitializer)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(std::initializer_list&lt; _Tp &gt; values)",
    "local": ""
  },
  {
    "origin": "(const std::initializer_list&lt; int &gt; sizes, const std::initializer_list&lt; _Tp &gt; values)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(const std::array&lt; _Tp, _Nm &gt; &amp;arr, bool copyData=false)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(Mat_ &amp;&amp;m)",
    "local": ""
  },
  {
    "origin": "(Mat &amp;&amp;m)",
    "local": ""
  },
  {
    "origin": "(MatExpr &amp;&amp;e)",
    "local": ""
  },
  {
    "origin": "(InputArray m, double scale=1) const",
    "local": ""
  },
  {
    "origin": "(int rows, int cols)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Size size)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int _ndims, const int *_sizes)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Size size, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sz, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(const Range &amp;rowRange, const Range &amp;colRange) const",
    "local": ""
  },
  {
    "origin": "(const Rect &amp;roi) const",
    "local": ""
  },
  {
    "origin": "(const Range *ranges) const",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; Range &gt; &amp;ranges) const",
    "local": ""
  },
  {
    "origin": "(const int *idx)",
    "local": ""
  },
  {
    "origin": "(const int *idx) const",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx)",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx) const",
    "local": ""
  },
  {
    "origin": "(int idx0)",
    "local": ""
  },
  {
    "origin": "(int idx0) const",
    "local": ""
  },
  {
    "origin": "(int row, int col)",
    "local": ""
  },
  {
    "origin": "(int row, int col) const",
    "local": ""
  },
  {
    "origin": "(int idx0, int idx1, int idx2)",
    "local": ""
  },
  {
    "origin": "(int idx0, int idx1, int idx2) const",
    "local": ""
  },
  {
    "origin": "(Point pt)",
    "local": ""
  },
  {
    "origin": "(Point pt) const",
    "local": ""
  },
  {
    "origin": "(Range rowRange, Range colRange) const",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": ""
  },
  {
    "origin": "(const Mat_ &amp;m)",
    "local": ""
  },
  {
    "origin": "(const _Tp &amp;s)",
    "local": ""
  },
  {
    "origin": "(const MatExpr &amp;e)",
    "local": ""
  },
  {
    "origin": "(Mat_ &amp;&amp;m)",
    "local": ""
  },
  {
    "origin": "(Mat &amp;&amp;m)",
    "local": ""
  },
  {
    "origin": "(const Scalar &amp;s)",
    "local": ""
  },
  {
    "origin": "(int y)",
    "local": ""
  },
  {
    "origin": "(int y) const",
    "local": ""
  },
  {
    "origin": "(size_t nelems=1)",
    "local": ""
  },
  {
    "origin": "(int i0=0)",
    "local": ""
  },
  {
    "origin": "(int i0=0) const",
    "local": ""
  },
  {
    "origin": "(int row, int col)",
    "local": ""
  },
  {
    "origin": "(int row, int col) const",
    "local": ""
  },
  {
    "origin": "(int i0, int i1, int i2)",
    "local": ""
  },
  {
    "origin": "(int i0, int i1, int i2) const",
    "local": ""
  },
  {
    "origin": "(const int *idx)",
    "local": ""
  },
  {
    "origin": "(const int *idx) const",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx)",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx) const",
    "local": ""
  },
  {
    "origin": "(int i0=0)",
    "local": ""
  },
  {
    "origin": "(int i0=0) const",
    "local": ""
  },
  {
    "origin": "(int row, int col)",
    "local": ""
  },
  {
    "origin": "(int row, int col) const",
    "local": ""
  },
  {
    "origin": "(int i0, int i1, int i2)",
    "local": ""
  },
  {
    "origin": "(int i0, int i1, int i2) const",
    "local": ""
  },
  {
    "origin": "(const int *idx)",
    "local": ""
  },
  {
    "origin": "(const int *idx) const",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx)",
    "local": ""
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx) const",
    "local": ""
  },
  {
    "origin": "(const _Tp &amp;elem)",
    "local": ""
  },
  {
    "origin": "(const Mat_&lt; _Tp &gt; &amp;elem)",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; _Tp &gt; &amp;elem)",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": ""
  },
  {
    "origin": "(const void *elem)",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(size_t sz)",
    "local": ""
  },
  {
    "origin": "(size_t sz)",
    "local": ""
  },
  {
    "origin": "(int cn, int rows=0) const",
    "local": ""
  },
  {
    "origin": "(int cn, int newndims, const int *newsz) const",
    "local": ""
  },
  {
    "origin": "(int cn, const std::vector&lt; int &gt; &amp;newshape) const",
    "local": ""
  },
  {
    "origin": "(size_t sz)",
    "local": ""
  },
  {
    "origin": "(size_t sz, const Scalar &amp;s)",
    "local": ""
  },
  {
    "origin": "(int y) const",
    "local": ""
  },
  {
    "origin": "(int startrow, int endrow) const",
    "local": ""
  },
  {
    "origin": "(const Range &amp;r) const",
    "local": ""
  },
  {
    "origin": "(MatAllocator *allocator)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(InputArray value, InputArray mask=noArray())",
    "local": ""
  },
  {
    "origin": "(int i=0) const",
    "local": ""
  },
  {
    "origin": "(int i=0) const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(int startDim, int endDim=INT_MAX) const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "(int rows, int cols)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Size size)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int _ndims, const int *_sizes)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Size size, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sz, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by &#160;",
    "local": ""
  }
]