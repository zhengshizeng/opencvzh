[
  {
    "origin": "OpenCV: cv::MatAllocator Class Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::MatAllocator Class Reference",
    "local": ""
  },
  {
    "origin": "abstract",
    "local": ""
  },
  {
    "origin": "&raquo;",
    "local": ""
  },
  {
    "origin": "Custom array allocator.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(int dims, const int *sizes, int type, void *data, size_t *step,",
    "local": ""
  },
  {
    "origin": "flags,",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "*data,",
    "local": ""
  },
  {
    "origin": "accessflags,",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "*srcdata,",
    "local": ""
  },
  {
    "origin": "*dstdata, int dims, const size_t sz[], const size_t srcofs[], const size_t srcstep[], const size_t dstofs[], const size_t dststep[], bool sync) const",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "*data, void *dst, int dims, const size_t sz[], const size_t srcofs[], const size_t srcstep[], const size_t dststep[]) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(const char *id=NULL) const",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "*data,",
    "local": ""
  },
  {
    "origin": "accessflags) const",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "*data) const",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "*data, const void *src, int dims, const size_t sz[], const size_t dstofs[], const size_t dststep[], const size_t srcstep[]) const",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Custom array allocator.",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "MatAllocator()",
    "local": ""
  },
  {
    "origin": "cv::MatAllocator::MatAllocator",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "~MatAllocator()",
    "local": ""
  },
  {
    "origin": "virtual cv::MatAllocator::~MatAllocator",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "allocate()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "* cv::MatAllocator::allocate",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "dims",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "sizes",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "type",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "step",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "flags",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "usageFlags",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "allocate()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "virtual bool cv::MatAllocator::allocate",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "accessflags",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "usageFlags",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "copy()",
    "local": ""
  },
  {
    "origin": "virtual void cv::MatAllocator::copy",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcdata",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstdata",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dims",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "sz",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "srcofs",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "srcstep",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "dstofs",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "dststep",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "sync",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "deallocate()",
    "local": ""
  },
  {
    "origin": "virtual void cv::MatAllocator::deallocate",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "download()",
    "local": ""
  },
  {
    "origin": "virtual void cv::MatAllocator::download",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dims",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "sz",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "srcofs",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "srcstep",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "dststep",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "getBufferPoolController()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "* cv::MatAllocator::getBufferPoolController",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "id",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "map()",
    "local": ""
  },
  {
    "origin": "virtual void cv::MatAllocator::map",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "accessflags",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "unmap()",
    "local": ""
  },
  {
    "origin": "virtual void cv::MatAllocator::unmap",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "upload()",
    "local": ""
  },
  {
    "origin": "virtual void cv::MatAllocator::upload",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "data",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dims",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "sz",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "dstofs",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "dststep",
    "local": ""
  },
  {
    "origin": "[],",
    "local": ""
  },
  {
    "origin": "srcstep",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/core/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by &#160;",
    "local": ""
  }
]