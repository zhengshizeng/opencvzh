[
  {
    "origin": "OpenCV: opencv2/core/softfloat.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Macros",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "softfloat.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "\"black box\" representation of the file storage associated with a file on disk.",
    "local": ""
  },
  {
    "origin": "Macros",
    "local": ""
  },
  {
    "origin": "&#160;&#160;&#160;1",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "(softfloat a)",
    "local": ""
  },
  {
    "origin": "Absolute value.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(softdouble a)",
    "local": ""
  },
  {
    "origin": "(const softfloat &amp;a)",
    "local": ""
  },
  {
    "origin": "Cube root.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const softdouble &amp;a)",
    "local": ""
  },
  {
    "origin": "Cosine.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;a)",
    "local": ""
  },
  {
    "origin": "Rounds number up to integer.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;a)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;a)",
    "local": ""
  },
  {
    "origin": "Rounds a number down to integer.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;a)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;a)",
    "local": ""
  },
  {
    "origin": "Rounds a number to nearest even integer.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;a)",
    "local": ""
  },
  {
    "origin": "int64_t&#160;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;a)",
    "local": ""
  },
  {
    "origin": "Rounds a number to nearest even long long integer.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;a)",
    "local": ""
  },
  {
    "origin": "Truncates number to integer with minimum magnitude.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;a)",
    "local": ""
  },
  {
    "origin": "(const softfloat &amp;a)",
    "local": ""
  },
  {
    "origin": "Exponent.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const softdouble &amp;a)",
    "local": ""
  },
  {
    "origin": "(const softfloat &amp;a)",
    "local": ""
  },
  {
    "origin": "Natural logarithm.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const softdouble &amp;a)",
    "local": ""
  },
  {
    "origin": "(const softfloat &amp;a, const softfloat &amp;b)",
    "local": ""
  },
  {
    "origin": "(const softdouble &amp;a, const softdouble &amp;b)",
    "local": ""
  },
  {
    "origin": "(const softfloat &amp;a, const softfloat &amp;b)",
    "local": ""
  },
  {
    "origin": "Min and Max functions.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const softdouble &amp;a, const softdouble &amp;b)",
    "local": ""
  },
  {
    "origin": "(const softfloat &amp;a, const softfloat &amp;b, const softfloat &amp;c)",
    "local": ""
  },
  {
    "origin": "Fused Multiplication and Addition.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const softdouble &amp;a, const softdouble &amp;b, const softdouble &amp;c)",
    "local": ""
  },
  {
    "origin": "(const softfloat &amp;a, const softfloat &amp;b)",
    "local": ""
  },
  {
    "origin": "Raising to the power.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const softdouble &amp;a, const softdouble &amp;b)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "(softfloat a)",
    "local": ""
  },
  {
    "origin": "Saturate casts.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "(softdouble a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "int64_t&#160;",
    "local": ""
  },
  {
    "origin": "(softfloat a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "int64_t&#160;",
    "local": ""
  },
  {
    "origin": "(softdouble a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softfloat a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softdouble a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softfloat a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softdouble a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softfloat a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softdouble a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "uint64_t&#160;",
    "local": ""
  },
  {
    "origin": "(softfloat a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "uint64_t&#160;",
    "local": ""
  },
  {
    "origin": "(softdouble a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softfloat a)",
    "local": ""
  },
  {
    "origin": "Saturate cast to unsigned integer and unsigned long long integer We intentionally do not clip negative numbers, to make -1 become 0xffffffff etc.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softdouble a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softfloat a)",
    "local": ""
  },
  {
    "origin": "template&lt;&gt;",
    "local": ""
  },
  {
    "origin": "(softdouble a)",
    "local": ""
  },
  {
    "origin": "(const softdouble &amp;a)",
    "local": ""
  },
  {
    "origin": "Sine.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const softfloat &amp;a)",
    "local": ""
  },
  {
    "origin": "Square root.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const softdouble &amp;a)",
    "local": ""
  },
  {
    "origin": "Macro Definition Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "softfloat_h",
    "local": ""
  },
  {
    "origin": "#define softfloat_h&#160;&#160;&#160;1",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cvCeil()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "int cvCeil",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Rounds number up to integer.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cvCeil()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "int cvCeil",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cvFloor()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "int cvFloor",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Rounds a number down to integer.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cvFloor()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "int cvFloor",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cvRound()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "int cvRound",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Rounds a number to nearest even integer.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cvRound()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "int cvRound",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cvRound64()",
    "local": ""
  },
  {
    "origin": "int64_t cvRound64",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Rounds a number to nearest even long long integer.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cvTrunc()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "int cvTrunc",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Truncates number to integer with minimum magnitude.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "cvTrunc()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "int cvTrunc",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:33 for OpenCV by &#160;",
    "local": ""
  }
]