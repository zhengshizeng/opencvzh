[
  {
    "origin": "OpenCV: cv::omnidir Namespace Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "cv::omnidir Namespace Reference",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= 16,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "objectPoints,",
    "local": ""
  },
  {
    "origin": "imagePoints,",
    "local": ""
  },
  {
    "origin": "size,",
    "local": ""
  },
  {
    "origin": "K,",
    "local": ""
  },
  {
    "origin": "xi,",
    "local": ""
  },
  {
    "origin": "D,",
    "local": ""
  },
  {
    "origin": "rvecs,",
    "local": ""
  },
  {
    "origin": "tvecs, int flags,",
    "local": ""
  },
  {
    "origin": "criteria,",
    "local": ""
  },
  {
    "origin": "idx=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Perform omnidirectional camera calibration, the default depth of outputs is CV_64F.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "K,",
    "local": ""
  },
  {
    "origin": "D,",
    "local": ""
  },
  {
    "origin": "xi,",
    "local": ""
  },
  {
    "origin": "R,",
    "local": ""
  },
  {
    "origin": "P, const",
    "local": ""
  },
  {
    "origin": "&amp;size, int m1type,",
    "local": ""
  },
  {
    "origin": "map1,",
    "local": ""
  },
  {
    "origin": "map2, int flags)",
    "local": ""
  },
  {
    "origin": "Computes undistortion and rectification maps for omnidirectional camera image transform by a rotation R. It output two maps that are used for",
    "local": ""
  },
  {
    "origin": ". If D is empty then zero distortion is used, if R or P is empty then identity matrices are used.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "objectPoints,",
    "local": ""
  },
  {
    "origin": "imagePoints,",
    "local": ""
  },
  {
    "origin": "rvec,",
    "local": ""
  },
  {
    "origin": "tvec,",
    "local": ""
  },
  {
    "origin": "K, double xi,",
    "local": ""
  },
  {
    "origin": "D,",
    "local": ""
  },
  {
    "origin": "jacobian=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Projects points for omnidirectional camera using CMei's model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "objectPoints,",
    "local": ""
  },
  {
    "origin": "imagePoints, const",
    "local": ""
  },
  {
    "origin": "&amp;affine,",
    "local": ""
  },
  {
    "origin": "K, double xi,",
    "local": ""
  },
  {
    "origin": "D,",
    "local": ""
  },
  {
    "origin": "jacobian=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "objectPoints,",
    "local": ""
  },
  {
    "origin": "imagePoints1,",
    "local": ""
  },
  {
    "origin": "imagePoints2, const",
    "local": ""
  },
  {
    "origin": "&amp;imageSize1, const",
    "local": ""
  },
  {
    "origin": "&amp;imageSize2,",
    "local": ""
  },
  {
    "origin": "K1,",
    "local": ""
  },
  {
    "origin": "xi1,",
    "local": ""
  },
  {
    "origin": "D1,",
    "local": ""
  },
  {
    "origin": "K2,",
    "local": ""
  },
  {
    "origin": "xi2,",
    "local": ""
  },
  {
    "origin": "D2,",
    "local": ""
  },
  {
    "origin": "rvec,",
    "local": ""
  },
  {
    "origin": "tvec,",
    "local": ""
  },
  {
    "origin": "rvecsL,",
    "local": ""
  },
  {
    "origin": "tvecsL, int flags,",
    "local": ""
  },
  {
    "origin": "criteria,",
    "local": ""
  },
  {
    "origin": "idx=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Stereo calibration for omnidirectional camera model. It computes the intrinsic parameters for two cameras and the extrinsic parameters between two cameras. The default depth of outputs is CV_64F.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "image1,",
    "local": ""
  },
  {
    "origin": "image2,",
    "local": ""
  },
  {
    "origin": "K1,",
    "local": ""
  },
  {
    "origin": "D1,",
    "local": ""
  },
  {
    "origin": "xi1,",
    "local": ""
  },
  {
    "origin": "K2,",
    "local": ""
  },
  {
    "origin": "D2,",
    "local": ""
  },
  {
    "origin": "xi2,",
    "local": ""
  },
  {
    "origin": "R,",
    "local": ""
  },
  {
    "origin": "T, int flag, int numDisparities, int SADWindowSize,",
    "local": ""
  },
  {
    "origin": "disparity,",
    "local": ""
  },
  {
    "origin": "image1Rec,",
    "local": ""
  },
  {
    "origin": "image2Rec, const",
    "local": ""
  },
  {
    "origin": "&amp;newSize=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "Knew=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "pointCloud=",
    "local": ""
  },
  {
    "origin": "(), int pointType=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Stereo 3D reconstruction from a pair of images.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "R,",
    "local": ""
  },
  {
    "origin": "T,",
    "local": ""
  },
  {
    "origin": "R1,",
    "local": ""
  },
  {
    "origin": "R2)",
    "local": ""
  },
  {
    "origin": "Stereo rectification for omnidirectional camera model. It computes the rectification rotations for two cameras.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "distorted,",
    "local": ""
  },
  {
    "origin": "undistorted,",
    "local": ""
  },
  {
    "origin": "K,",
    "local": ""
  },
  {
    "origin": "D,",
    "local": ""
  },
  {
    "origin": "xi, int flags,",
    "local": ""
  },
  {
    "origin": "Knew=",
    "local": ""
  },
  {
    "origin": "(), const",
    "local": ""
  },
  {
    "origin": "&amp;new_size=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "R=",
    "local": ""
  },
  {
    "origin": "(3, 3,",
    "local": ""
  },
  {
    "origin": "))",
    "local": ""
  },
  {
    "origin": "Undistort omnidirectional images to perspective images.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "distorted,",
    "local": ""
  },
  {
    "origin": "undistorted,",
    "local": ""
  },
  {
    "origin": "K,",
    "local": ""
  },
  {
    "origin": "D,",
    "local": ""
  },
  {
    "origin": "xi,",
    "local": ""
  },
  {
    "origin": "R)",
    "local": ""
  },
  {
    "origin": "Undistort 2D image points for omnidirectional camera using CMei's model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by &#160;",
    "local": ""
  }
]