[
  {
    "origin": "OpenCV: opencv2/ximgproc/edge_filter.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "edge_filter.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Interface for Adaptive Manifold Filter realizations.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Interface for realizations of Domain Transform filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Interface for implementations of Fast Bilateral Solver.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Interface for implementations of Fast Global Smoother filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Interface for realizations of Guided Filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "\"black box\" representation of the file storage associated with a file on disk.",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "(InputArray joint, InputArray src, OutputArray dst, double sigma_s, double sigma_r, bool adjust_outliers=false)",
    "local": ""
  },
  {
    "origin": "Simple one-line Adaptive Manifold Filter call.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray src, OutputArray dst, int fr=3, int numIter=1, double sigmaAlpha=-1., double sigmaAvg=-1.)",
    "local": ""
  },
  {
    "origin": "Applies the bilateral texture filter to an image. It performs structure-preserving texture filter. For more details about this filter see",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(double sigma_s, double sigma_r, bool adjust_outliers=false)",
    "local": ""
  },
  {
    "origin": "Factory method, create instance of",
    "local": ""
  },
  {
    "origin": "and produce some initialization routines.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray guide, double sigmaSpatial, double sigmaColor, int mode=DTF_NC, int numIters=3)",
    "local": ""
  },
  {
    "origin": "Factory method, create instance of",
    "local": ""
  },
  {
    "origin": "and produce initialization routines.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray guide, double sigma_spatial, double sigma_luma, double sigma_chroma, double lambda=128.0, int num_iter=25, double max_tol=1e-5)",
    "local": ""
  },
  {
    "origin": "Factory method, create instance of",
    "local": ""
  },
  {
    "origin": "and execute the initialization routines.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray guide, double lambda, double sigma_color, double lambda_attenuation=0.25, int num_iter=3)",
    "local": ""
  },
  {
    "origin": "Factory method, create instance of",
    "local": ""
  },
  {
    "origin": "and execute the initialization routines.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray guide, int radius, double eps)",
    "local": ""
  },
  {
    "origin": "Factory method, create instance of",
    "local": ""
  },
  {
    "origin": "and produce initialization routines.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray guide, InputArray src, OutputArray dst, double sigmaSpatial, double sigmaColor, int mode=DTF_NC, int numIters=3)",
    "local": ""
  },
  {
    "origin": "Simple one-line Domain Transform filter call. If you have multiple images to filter with the same guided image then use",
    "local": ""
  },
  {
    "origin": "interface to avoid extra computations on initialization stage.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray guide, InputArray src, InputArray confidence, OutputArray dst, double sigma_spatial=8, double sigma_luma=8, double sigma_chroma=8, double lambda=128.0, int num_iter=25, double max_tol=1e-5)",
    "local": ""
  },
  {
    "origin": "Simple one-line Fast Bilateral Solver filter call. If you have multiple images to filter with the same guide then use",
    "local": ""
  },
  {
    "origin": "interface to avoid extra computations.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray guide, InputArray src, OutputArray dst, double lambda, double sigma_color, double lambda_attenuation=0.25, int num_iter=3)",
    "local": ""
  },
  {
    "origin": "Simple one-line Fast Global Smoother filter call. If you have multiple images to filter with the same guide then use",
    "local": ""
  },
  {
    "origin": "interface to avoid extra computations.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray guide, InputArray src, OutputArray dst, int radius, double eps, int dDepth=-1)",
    "local": ""
  },
  {
    "origin": "Simple one-line Guided Filter call.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray joint, InputArray src, OutputArray dst, int d, double sigmaColor, double sigmaSpace, int borderType=BORDER_DEFAULT)",
    "local": ""
  },
  {
    "origin": "Applies the joint bilateral filter to an image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray src, OutputArray dst, double lambda=0.02, double kappa=2.0)",
    "local": ""
  },
  {
    "origin": "Global image smoothing via L0 gradient minimization.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(InputArray src, OutputArray dst, int d=-1, double sigmaColor=25, double sigmaSpace=3, int numOfIter=4, int borderType=BORDER_DEFAULT)",
    "local": ""
  },
  {
    "origin": "Applies the rolling guidance filter to an image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:33 for OpenCV by &#160;",
    "local": ""
  }
]