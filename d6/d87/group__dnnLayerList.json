[
  {
    "origin": "OpenCV: Partial List of Implemented Layers",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Partial List of Implemented Layers",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Detection output layer.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Element wise operation on inputs.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Bilinear resize layer from",
    "local": ""
  },
  {
    "origin": "https://github.com/cdmh/deeplab-public-ver2",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "LSTM recurrent layer.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "\\( L_p \\) - normalization layer.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Adds extra values for specific axes.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Resize input 4-dimensional blob by nearest neighbor or bilinear strategy.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Classical recurrent layer.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "This subsection of dnn module contains information about built-in layers and their descriptions.",
    "local": ""
  },
  {
    "origin": "Classes listed here, in fact, provides C++ API for creating instances of built-in layers. In addition to this way of layers instantiation, there is a more common factory API (see",
    "local": ""
  },
  {
    "origin": "), it allows to create layers dynamically (by name) and register new ones. You can use both API, but factory API is less convenient for native C++ programming and basically designed for use inside importers (see",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "Built-in layers partially reproduce functionality of corresponding Caffe and Torch7 layers. In particular, the following layers and Caffe importer were tested to reproduce",
    "local": ""
  },
  {
    "origin": "Caffe",
    "local": ""
  },
  {
    "origin": "functionality:",
    "local": ""
  },
  {
    "origin": "Convolution",
    "local": ""
  },
  {
    "origin": "Deconvolution",
    "local": ""
  },
  {
    "origin": "Pooling",
    "local": ""
  },
  {
    "origin": "InnerProduct",
    "local": ""
  },
  {
    "origin": "TanH, ReLU, Sigmoid, BNLL, Power, AbsVal",
    "local": ""
  },
  {
    "origin": "Softmax",
    "local": ""
  },
  {
    "origin": "Reshape, Flatten, Slice, Split",
    "local": ""
  },
  {
    "origin": "LRN",
    "local": ""
  },
  {
    "origin": "MVN",
    "local": ""
  },
  {
    "origin": "Dropout (since it does nothing on forward pass -))",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by &#160;",
    "local": ""
  }
]