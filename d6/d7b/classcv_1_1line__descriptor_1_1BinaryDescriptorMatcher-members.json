[
  {
    "origin": "OpenCV: Member List",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "cv::line_descriptor::BinaryDescriptorMatcher Member List",
    "local": ""
  },
  {
    "origin": "This is the complete list of members for",
    "local": ""
  },
  {
    "origin": ", including all inherited members.",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; Mat &gt; &amp;descriptors)",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "() CV_OVERRIDE",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;queryDescriptors, const Mat &amp;trainDescriptors, std::vector&lt; std::vector&lt; DMatch &gt; &gt; &amp;matches, int k, const Mat &amp;mask=Mat(), bool compactResult=false) const",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;queryDescriptors, std::vector&lt; std::vector&lt; DMatch &gt; &gt; &amp;matches, int k, const std::vector&lt; Mat &gt; &amp;masks=std::vector&lt; Mat &gt;(), bool compactResult=false)",
    "local": ""
  },
  {
    "origin": "(const String &amp;filename, const String &amp;objname=String())",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const String &amp;strModel, const String &amp;objname=String())",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;queryDescriptors, const Mat &amp;trainDescriptors, std::vector&lt; DMatch &gt; &amp;matches, const Mat &amp;mask=Mat()) const",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;queryDescriptors, std::vector&lt; DMatch &gt; &amp;matches, const std::vector&lt; Mat &gt; &amp;masks=std::vector&lt; Mat &gt;())",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;queryDescriptors, const Mat &amp;trainDescriptors, std::vector&lt; std::vector&lt; DMatch &gt; &gt; &amp;matches, float maxDistance, const Mat &amp;mask=Mat(), bool compactResult=false) const",
    "local": ""
  },
  {
    "origin": "(const Mat &amp;queryDescriptors, std::vector&lt; std::vector&lt; DMatch &gt; &gt; &amp;matches, float maxDistance, const std::vector&lt; Mat &gt; &amp;masks=std::vector&lt; Mat &gt;(), bool compactResult=false)",
    "local": ""
  },
  {
    "origin": "(const FileNode &amp;fn)",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(const FileNode &amp;fn)",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const String &amp;filename) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(FileStorage &amp;fs) const",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(const Ptr&lt; FileStorage &gt; &amp;fs, const String &amp;name=String()) const",
    "local": ""
  },
  {
    "origin": "(FileStorage &amp;fs) const",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by &#160;",
    "local": ""
  }
]