[
  {
    "origin": "OpenCV: RGB-Depth Processing",
    "local": "OpenCV:RGB深度处理"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "RGB-Depth Processing",
    "local": "RGB深度处理"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "that computes quantized gradient orientations from a color image.",
    "local": "从彩色图像计算量化的梯度方向。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "that computes quantized surface normals from a dense depth map.",
    "local": "从密集深度贴图计算量化曲面法线的。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Object detector using the LINE template matching algorithm with any set of modalities.",
    "local": "目标检测器采用线模板匹配算法，具有任意一组模式。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "struct",
    "local": "结构"
  },
  {
    "origin": "Discriminant feature described by its location and label.",
    "local": "由其位置和标签描述的鉴别特征。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "struct",
    "local": "结构"
  },
  {
    "origin": "Represents a successful template match.",
    "local": "表示模板匹配成功。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Interface for modalities that plug into the LINE template matching representation.",
    "local": "用于插入线模板匹配表示的模式的接口。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "struct",
    "local": "结构"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Represents a modality operating over an image pyramid.",
    "local": "表示在图像金字塔上运行的模态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "struct",
    "local": "结构"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "struct",
    "local": "结构"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "(int x, int y, int label, float",
    "local": "（int x，int y，int label，float）"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "(int",
    "local": "（内景）"
  },
  {
    "origin": ", int",
    "local": "，内景"
  },
  {
    "origin": ", int",
    "local": "，内景"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "(int",
    "local": "（内景）"
  },
  {
    "origin": ", int",
    "local": "，内景"
  },
  {
    "origin": ", float",
    "local": "，浮动"
  },
  {
    "origin": ", const",
    "local": "，常量"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": ", int",
    "local": "，内景"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;quantized,",
    "local": "&amp；量子化，"
  },
  {
    "origin": "&amp;dst)",
    "local": "&amp；（夏时制）"
  },
  {
    "origin": "Debug function to colormap a quantized image for viewing.",
    "local": "调试函数以彩色映射量化图像以供查看。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "depth,",
    "local": "深度，"
  },
  {
    "origin": "K,",
    "local": "克，"
  },
  {
    "origin": "points3d,",
    "local": "点3d，"
  },
  {
    "origin": "mask=",
    "local": "遮罩="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "depth,",
    "local": "深度，"
  },
  {
    "origin": "in_K,",
    "local": "在英国，"
  },
  {
    "origin": "in_points,",
    "local": "在点上，"
  },
  {
    "origin": "points3d)",
    "local": "点3d）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "img, const std::vector&lt;",
    "local": "IMG，const std：：vector&lt；"
  },
  {
    "origin": "&gt; &amp;templates, const",
    "local": "&燃气轮机&amp；模板，常量"
  },
  {
    "origin": "&amp;tl, int size=10)",
    "local": "&amp；tl，int size=10）"
  },
  {
    "origin": "Debug function to draw linemod features.",
    "local": "用于绘制linemod功能的调试函数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Factory function for detector using LINE algorithm with color gradients.",
    "local": "使用带颜色梯度的线性算法的检测器工厂函数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Factory function for detector using LINE-MOD algorithm with color gradients and depth normals.",
    "local": "工厂函数检测器使用线模算法与颜色梯度和深度法线。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const float &amp;depth)",
    "local": "（const float&amp；深度）"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const double &amp;depth)",
    "local": "（const double&amp；深度）"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const short int &amp;depth)",
    "local": "（const short int&amp；深度）"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const unsigned short int &amp;depth)",
    "local": "（const unsigned short int&amp；深度）"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const int &amp;depth)",
    "local": "（施工图）；深度）"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const unsigned int &amp;depth)",
    "local": "（const unsigned int&amp；深度）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "unregisteredCameraMatrix,",
    "local": "未注册的CameraMatrix，"
  },
  {
    "origin": "registeredCameraMatrix,",
    "local": "注册CameraMatrix，"
  },
  {
    "origin": "registeredDistCoeffs,",
    "local": "注册分布系数，"
  },
  {
    "origin": "Rt,",
    "local": "Rt公司，"
  },
  {
    "origin": "unregisteredDepth, const",
    "local": "未注册深度，常量"
  },
  {
    "origin": "&amp;outputImagePlaneSize,",
    "local": "&amp；输出图像平面大小，"
  },
  {
    "origin": "registeredDepth, bool depthDilation=false)",
    "local": "registeredDepth，bool depthDiplication=假）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "in, int depth,",
    "local": "in，int深度，"
  },
  {
    "origin": "out, double depth_factor=1000.0)",
    "local": "输出，双深度（系数=1000.0）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;image, const",
    "local": "&amp；A图像，常量"
  },
  {
    "origin": "&amp;depth, const",
    "local": "&amp；深度，常数"
  },
  {
    "origin": "&amp;mask, const",
    "local": "&amp；面罩，常数"
  },
  {
    "origin": "&amp;Rt, const",
    "local": "&amp；Rt，常数"
  },
  {
    "origin": "&amp;cameraMatrix, const",
    "local": "&amp；摄影机矩阵，常量"
  },
  {
    "origin": "&amp;distCoeff,",
    "local": "&amp；分离系数，"
  },
  {
    "origin": "warpedImage,",
    "local": "扭曲的图像，"
  },
  {
    "origin": "warpedDepth=",
    "local": "翘曲深度="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "warpedMask=",
    "local": "扭曲的任务"
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "Candidate()",
    "local": "候选人（）"
  },
  {
    "origin": "cv::linemod::QuantizedPyramid::Candidate::Candidate",
    "local": "cv:：linemod:：QuantizedPyramid:：Candidate:：候选人"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "x",
    "local": "十"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "y",
    "local": "y"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "label",
    "local": "标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "score",
    "local": "分数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "Feature()",
    "local": "功能（）"
  },
  {
    "origin": "cv::linemod::Feature::Feature",
    "local": "cv:：linemod:：Feature:：功能"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "x",
    "local": "十"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "y",
    "local": "y"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "label",
    "local": "标签"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "Match()",
    "local": "匹配（）"
  },
  {
    "origin": "cv::linemod::Match::Match",
    "local": "cv:：linemod:：Match:：Match匹配"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "x",
    "local": "十"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "y",
    "local": "y"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "similarity",
    "local": "相似性"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "class_id",
    "local": "类别id"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "template_id",
    "local": "模板\\u id"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "colormap()",
    "local": "颜色映射（）"
  },
  {
    "origin": "void cv::linemod::colormap",
    "local": "void cv:：linemod:：colormap"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "quantized",
    "local": "量子化"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.linemod.colormap(",
    "local": "cv.linemod.colormap颜色图("
  },
  {
    "origin": "quantized[, dst]",
    "local": "量化[，dst]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Debug function to colormap a quantized image for viewing.",
    "local": "调试函数以彩色映射量化图像以供查看。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "depthTo3d()",
    "local": "深度到3d（）"
  },
  {
    "origin": "void cv::rgbd::depthTo3d",
    "local": "void cv:：rgbd:：deptho3d"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "points3d",
    "local": "点3d"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "mask",
    "local": "面具"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "points3d",
    "local": "点3d"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd.depthTo3d(",
    "local": "cv.rgbd.depthTo3d深度("
  },
  {
    "origin": "depth, K[, points3d[, mask]]",
    "local": "深度，K[，点3d[，掩码]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Converts a depth image to an organized set of 3d points. The coordinate system is x pointing left, y down and z away from the camera",
    "local": "将深度图像转换为一组有组织的三维点。坐标系为x向左，y向下，z远离相机"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": "the depth image (if given as short int CV_U, it is assumed to be the depth in millimeters (as done with the Microsoft Kinect), otherwise, if given as CV_32F or CV_64F, it is assumed in meters)",
    "local": "深度图像（如果以短int CV\\U形式给出，则假定深度以毫米为单位（与Microsoft Kinect相同），否则，如果以CV\\U 32F或CV\\U 64F形式给出，则假定深度以米为单位）"
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": "The calibration matrix",
    "local": "校准矩阵"
  },
  {
    "origin": "points3d",
    "local": "点3d"
  },
  {
    "origin": "the resulting 3d points. They are of depth the same as",
    "local": "生成的三维点。它们的深度与"
  },
  {
    "origin": "if it is CV_32F or CV_64F, and the depth of",
    "local": "如果是cv32f或cv64f"
  },
  {
    "origin": "if",
    "local": "如果"
  },
  {
    "origin": "is of depth CV_U",
    "local": "深度为"
  },
  {
    "origin": "mask",
    "local": "面具"
  },
  {
    "origin": "the mask of the points to consider (can be empty)",
    "local": "要考虑的点的掩码（可以为空）"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "depthTo3dSparse()",
    "local": "深度到3dsparse（）"
  },
  {
    "origin": "void cv::rgbd::depthTo3dSparse",
    "local": "void cv:：rgbd:：depthTo3dSparse无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "in_K",
    "local": "在英国"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "in_points",
    "local": "积分"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "points3d",
    "local": "点3d"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "points3d",
    "local": "点3d"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd.depthTo3dSparse(",
    "local": "cv.rgbd.DEPTHTO三维稀疏("
  },
  {
    "origin": "depth, in_K, in_points[, points3d]",
    "local": "深度，单位，单位点[，点3d]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": "the depth image",
    "local": "深度图像"
  },
  {
    "origin": "in_K",
    "local": "在英国"
  },
  {
    "origin": "in_points",
    "local": "积分"
  },
  {
    "origin": "the list of xy coordinates",
    "local": "xy坐标的列表"
  },
  {
    "origin": "points3d",
    "local": "点3d"
  },
  {
    "origin": "the resulting 3d points",
    "local": "生成的三维点"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "drawFeatures()",
    "local": "图纸（）"
  },
  {
    "origin": "void cv::linemod::drawFeatures",
    "local": "void cv:：linemod:：drawFeatures无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "templates",
    "local": "模板"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "tl",
    "local": "tl公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "size",
    "local": "大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.linemod.drawFeatures(",
    "local": "cv.linemod.drawFeatures公司("
  },
  {
    "origin": "img, templates, tl[, size]",
    "local": "img，模板，tl[，大小]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Debug function to draw linemod features.",
    "local": "用于绘制linemod功能的调试函数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": "templates",
    "local": "模板"
  },
  {
    "origin": "see",
    "local": "看见"
  },
  {
    "origin": "tl",
    "local": "tl公司"
  },
  {
    "origin": "template bbox top-left offset see",
    "local": "模板bbox左上偏移请参见"
  },
  {
    "origin": "size",
    "local": "大小"
  },
  {
    "origin": "marker size see",
    "local": "标记大小请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDefaultLINE()",
    "local": "DefgetaultLINE（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::linemod::getDefaultLINE",
    "local": "&燃气轮机；cv:：linemod:：getDefaultLINE"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.linemod.getDefaultLINE(",
    "local": "cv.linemod.getDefaultLINE("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Factory function for detector using LINE algorithm with color gradients.",
    "local": "使用带颜色梯度的线性算法的检测器工厂函数。"
  },
  {
    "origin": "Default parameter settings suitable for VGA images.",
    "local": "适用于VGA图像的默认参数设置。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDefaultLINEMOD()",
    "local": "getDefaultLINEMOD（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::linemod::getDefaultLINEMOD",
    "local": "&燃气轮机；cv:：linemod:：getDefaultLINEMOD"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.linemod.getDefaultLINEMOD(",
    "local": "cv.linemod.getDefaultLINEMOD("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Factory function for detector using LINE-MOD algorithm with color gradients and depth normals.",
    "local": "工厂函数检测器使用线模算法与颜色梯度和深度法线。"
  },
  {
    "origin": "Default parameter settings suitable for VGA images.",
    "local": "适用于VGA图像的默认参数设置。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "isValidDepth()",
    "local": "isValidDepth（）"
  },
  {
    "origin": "[1/6]",
    "local": "[1/6]"
  },
  {
    "origin": "bool cv::rgbd::isValidDepth",
    "local": "布尔cv：：rgbd：：isValidDepth"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const float &amp;",
    "local": "常量浮点（&F）；"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Checks if the value is a valid depth. For CV_16U or CV_16S, the convention is to be invalid if it is a limit. For a float/double, we just check if it is a NaN",
    "local": "检查该值是否为有效深度。对于CV_16U或CV_16S，如果公约是一个限制，则该公约无效。对于float/double，我们只检查它是否是NaN"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": "the depth to check for validity",
    "local": "检查有效性的深度"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "isValidDepth()",
    "local": "isValidDepth（）"
  },
  {
    "origin": "[2/6]",
    "local": "[2/6]"
  },
  {
    "origin": "bool cv::rgbd::isValidDepth",
    "local": "布尔cv：：rgbd：：isValidDepth"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const double &amp;",
    "local": "常量双（&D）；"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "isValidDepth()",
    "local": "isValidDepth（）"
  },
  {
    "origin": "[3/6]",
    "local": "[3/6]"
  },
  {
    "origin": "bool cv::rgbd::isValidDepth",
    "local": "布尔cv：：rgbd：：isValidDepth"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const short int &amp;",
    "local": "常量短整型（&S）；"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "isValidDepth()",
    "local": "isValidDepth（）"
  },
  {
    "origin": "[4/6]",
    "local": "[4/6]"
  },
  {
    "origin": "bool cv::rgbd::isValidDepth",
    "local": "布尔cv：：rgbd：：isValidDepth"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const unsigned short int &amp;",
    "local": "常量无符号短整型（&A）；"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "isValidDepth()",
    "local": "isValidDepth（）"
  },
  {
    "origin": "[5/6]",
    "local": "[5/6]"
  },
  {
    "origin": "bool cv::rgbd::isValidDepth",
    "local": "布尔cv：：rgbd：：isValidDepth"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const int &amp;",
    "local": "常量int&amp；"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "isValidDepth()",
    "local": "isValidDepth（）"
  },
  {
    "origin": "[6/6]",
    "local": "[6/6]"
  },
  {
    "origin": "bool cv::rgbd::isValidDepth",
    "local": "布尔cv：：rgbd：：isValidDepth"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const unsigned int &amp;",
    "local": "常量无符号整数（&N）；"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "registerDepth()",
    "local": "寄存器深度（）"
  },
  {
    "origin": "void cv::rgbd::registerDepth",
    "local": "无效cv:：rgbd:：registerDepth"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "unregisteredCameraMatrix",
    "local": "未注册的CameraMatrix"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "registeredCameraMatrix",
    "local": "注册摄影机矩阵"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "registeredDistCoeffs",
    "local": "注册数据系数"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Rt",
    "local": "放射性同位素"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "unregisteredDepth",
    "local": "未注册深度"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "outputImagePlaneSize",
    "local": "输出图像平面大小"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "registeredDepth",
    "local": "寄存器深度"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "depthDilation",
    "local": "深度扩张"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "registeredDepth",
    "local": "寄存器深度"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd.registerDepth(",
    "local": "cv.rgbd.寄存器深度("
  },
  {
    "origin": "unregisteredCameraMatrix, registeredCameraMatrix, registeredDistCoeffs, Rt, unregisteredDepth, outputImagePlaneSize[, registeredDepth[, depthDilation]]",
    "local": "unregisteredCameraMatrix，registeredCameraMatrix，registeredDistCoefs，Rt，unregisteredDepth，outputImagePlaneSize[，registeredDepth[，depthDistriction]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Registers depth data to an external camera Registration is performed by creating a depth cloud, transforming the cloud by the rigid body transformation between the cameras, and then projecting the transformed points into the RGB camera.",
    "local": "将深度数据注册到外部相机通过创建深度云、通过相机之间的刚体变换变换云，然后将变换后的点投影到RGB相机来执行注册。"
  },
  {
    "origin": "uv_rgb = K_rgb * [R | t] * z * inv(K_ir) * uv_ir",
    "local": "uv\\u rgb=K\\u rgb*[R[UNK]t]*z*inv（K\\u ir）*uv\\u ir"
  },
  {
    "origin": "Currently does not check for negative depth values.",
    "local": "当前不检查负深度值。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "unregisteredCameraMatrix",
    "local": "未注册的CameraMatrix"
  },
  {
    "origin": "the camera matrix of the depth camera",
    "local": "深度相机的相机矩阵"
  },
  {
    "origin": "registeredCameraMatrix",
    "local": "注册摄影机矩阵"
  },
  {
    "origin": "the camera matrix of the external camera",
    "local": "外部摄像机的摄像机矩阵"
  },
  {
    "origin": "registeredDistCoeffs",
    "local": "注册数据系数"
  },
  {
    "origin": "the distortion coefficients of the external camera",
    "local": "外置摄像机的畸变系数"
  },
  {
    "origin": "Rt",
    "local": "放射性同位素"
  },
  {
    "origin": "the rigid body transform between the cameras. Transforms points from depth camera frame to external camera frame.",
    "local": "刚体在摄影机之间变换。将点从深度摄影机帧转换为外部摄影机帧。"
  },
  {
    "origin": "unregisteredDepth",
    "local": "未注册深度"
  },
  {
    "origin": "the input depth data",
    "local": "输入深度数据"
  },
  {
    "origin": "outputImagePlaneSize",
    "local": "输出图像平面大小"
  },
  {
    "origin": "the image plane dimensions of the external camera (width, height)",
    "local": "外部相机的图像平面尺寸（宽度、高度）"
  },
  {
    "origin": "registeredDepth",
    "local": "寄存器深度"
  },
  {
    "origin": "the result of transforming the depth into the external camera",
    "local": "将深度转换为外部摄影机的结果"
  },
  {
    "origin": "depthDilation",
    "local": "深度扩张"
  },
  {
    "origin": "whether or not the depth is dilated to avoid holes and occlusion errors (optional)",
    "local": "是否扩大深度以避免孔洞和遮挡错误（可选）"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "rescaleDepth()",
    "local": "重缩放深度（）"
  },
  {
    "origin": "void cv::rgbd::rescaleDepth",
    "local": "void cv:：rgbd:：rescaleDepth无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "in",
    "local": "在里面"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "out",
    "local": "外面的"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "depth_factor",
    "local": "深度系数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "out",
    "local": "外面的"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd.rescaleDepth(",
    "local": "cv.rgbd.rescaleDepth重缩放深度("
  },
  {
    "origin": "in, depth[, out[, depth_factor]]",
    "local": "输入，深度[，输出[，深度系数]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "If the input image is of type CV_16UC1 (like the Kinect one), the image is converted to floats, divided by depth_factor to get a depth in meters, and the values 0 are converted to std::numeric_limits&lt;float&gt;::quiet_NaN() Otherwise, the image is simply converted to floats",
    "local": "如果输入图像的类型为CV\\u 16UC1（类似于Kinect），则图像将转换为浮点值，除以深度因子以获得以米为单位的深度，值0将转换为std:：numeric\\u limits&lt；浮动（&gt；：：quiet_NaN（）否则，图像将简单地转换为浮点数"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "in",
    "local": "在里面"
  },
  {
    "origin": "the depth image (if given as short int CV_U, it is assumed to be the depth in millimeters (as done with the Microsoft Kinect), it is assumed in meters)",
    "local": "深度图像（如果给定为短int CV_，则假定为深度，单位为毫米（与Microsoft Kinect相同），假定为米）"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": "the desired output depth (floats or double)",
    "local": "所需的输出深度（浮动或双精度）"
  },
  {
    "origin": "out",
    "local": "外面的"
  },
  {
    "origin": "The rescaled float depth image",
    "local": "重新缩放的浮点深度图像"
  },
  {
    "origin": "depth_factor",
    "local": "深度系数"
  },
  {
    "origin": "(optional) factor by which depth is converted to distance (by default = 1000.0 for Kinect sensor)",
    "local": "（可选）将深度转换为距离的系数（对于Kinect传感器，默认值为1000.0）"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "warpFrame()",
    "local": "warpFrame（）"
  },
  {
    "origin": "void cv::rgbd::warpFrame",
    "local": "void cv:：rgbd:：warpFrame"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "mask",
    "local": "面具"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "Rt",
    "local": "放射性同位素"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "cameraMatrix",
    "local": "摄影机矩阵"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "distCoeff",
    "local": "分离系数"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "warpedImage",
    "local": "扭曲图像"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "warpedDepth",
    "local": "翘曲深度"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "warpedMask",
    "local": "扭曲的任务"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "warpedImage, warpedDepth, warpedMask",
    "local": "扭曲的图像，扭曲的深度，扭曲的任务"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd.warpFrame(",
    "local": "cv.rgbd.warpFrame公司("
  },
  {
    "origin": "image, depth, mask, Rt, cameraMatrix, distCoeff[, warpedImage[, warpedDepth[, warpedMask]]]",
    "local": "图像，深度，遮罩，Rt，cameraMatrix，distCoeff[，warpedImage[，warpedDepth[，warpedMask]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Warp the image: compute 3d points from the depth, transform them using given transformation, then project color point cloud to an image plane. This function can be used to visualize results of the",
    "local": "扭曲图像：从深度计算3d点，使用给定的变换对其进行变换，然后将彩色点云投影到图像平面。此函数可用于可视化"
  },
  {
    "origin": "algorithm.",
    "local": "算法。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": "The image (of CV_8UC1 or CV_8UC3 type)",
    "local": "图像（CV\\ U 8UC1或CV\\ U 8UC3类型）"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": "The depth (of type used in depthTo3d fuction)",
    "local": "深度（用于深度到三维函数的类型）"
  },
  {
    "origin": "mask",
    "local": "面具"
  },
  {
    "origin": "The mask of used pixels (of CV_8UC1), it can be empty",
    "local": "已用像素（CV8uc1）的掩码，可以为空"
  },
  {
    "origin": "Rt",
    "local": "放射性同位素"
  },
  {
    "origin": "The transformation that will be applied to the 3d points computed from the depth",
    "local": "将应用于从深度计算的三维点的变换"
  },
  {
    "origin": "cameraMatrix",
    "local": "摄影机矩阵"
  },
  {
    "origin": "Camera matrix",
    "local": "摄像机矩阵"
  },
  {
    "origin": "distCoeff",
    "local": "分离系数"
  },
  {
    "origin": "Distortion coefficients",
    "local": "畸变系数"
  },
  {
    "origin": "warpedImage",
    "local": "扭曲图像"
  },
  {
    "origin": "The warped image.",
    "local": "扭曲的图像。"
  },
  {
    "origin": "warpedDepth",
    "local": "翘曲深度"
  },
  {
    "origin": "The warped depth.",
    "local": "弯曲的深度。"
  },
  {
    "origin": "warpedMask",
    "local": "扭曲的任务"
  },
  {
    "origin": "The warped mask.",
    "local": "扭曲的面具。"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:41为OpenCV生成"
  }
]