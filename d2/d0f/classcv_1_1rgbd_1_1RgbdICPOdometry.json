[
  {
    "origin": "OpenCV: cv::rgbd::RgbdICPOdometry Class Reference",
    "local": "OpenCV:cv:：rgbd:：RgbdICPOdometry类参考"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "Protected Member Functions",
    "local": "受保护的成员函数"
  },
  {
    "origin": "Protected Attributes",
    "local": "受保护的属性"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry Class Reference",
    "local": "cv:：rgbd:：RgbdICPOdometry类参考"
  },
  {
    "origin": "Inheritance diagram for cv::rgbd::RgbdICPOdometry:",
    "local": "cv:：rgbd:：RgbdICPOdometry的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": ", float",
    "local": "，浮动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "(), float",
    "local": "（），浮动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "(), float",
    "local": "（），浮动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "(), float",
    "local": "（），浮动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "(), const std::vector&lt; int &gt; &amp;",
    "local": "（），const std：：向量&lt；内部&gt&amp；"
  },
  {
    "origin": "=std::vector&lt; int &gt;(), const std::vector&lt; float &gt; &amp;",
    "local": "=标准：：向量&lt；int&gt；（），常量标准：：向量&lt；浮动&gt&amp；"
  },
  {
    "origin": "=std::vector&lt; float &gt;(), int",
    "local": "=标准：：向量&lt；浮动&gt；（），内景"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;frame, int cacheType) const",
    "local": "&gt；gt；amp；帧，int cacheType）常量"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;val)",
    "local": "&amp；瓦尔）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;val)",
    "local": "&amp；瓦尔）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(double val)",
    "local": "（双val）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(double val)",
    "local": "（双val）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(double val)",
    "local": "（双val）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(double val)",
    "local": "（双val）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(double val)",
    "local": "（双val）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(double val)",
    "local": "（双val）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;val)",
    "local": "&amp；瓦尔）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(int val)",
    "local": "（内部值）"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;srcImage, const",
    "local": "&amp；SRC图像，常量"
  },
  {
    "origin": "&amp;srcDepth, const",
    "local": "&amp；深度，常数"
  },
  {
    "origin": "&amp;srcMask, const",
    "local": "&amp；srcMask，常量"
  },
  {
    "origin": "&amp;dstImage, const",
    "local": "&amp；DST图像，常量"
  },
  {
    "origin": "&amp;dstDepth, const",
    "local": "&amp；深度，常数"
  },
  {
    "origin": "&amp;dstMask,",
    "local": "&amp；dstMask公司，"
  },
  {
    "origin": "Rt, const",
    "local": "Rt，常数"
  },
  {
    "origin": "&amp;initRt=",
    "local": "&amp；初始化="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;srcFrame,",
    "local": "&gt；&quot；&amp；SRC框架，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;dstFrame,",
    "local": "&gt；和安培，DST框架，"
  },
  {
    "origin": "Rt, const",
    "local": "Rt，常数"
  },
  {
    "origin": "&amp;initRt=",
    "local": "&amp；初始化="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "(), float",
    "local": "（），浮动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "(), float",
    "local": "（），浮动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "(), float",
    "local": "（），浮动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "(), float",
    "local": "（），浮动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "(), const std::vector&lt; int &gt; &amp;",
    "local": "（），const std：：向量&lt；内部&gt&amp；"
  },
  {
    "origin": "=std::vector&lt; int &gt;(), const std::vector&lt; float &gt; &amp;",
    "local": "=标准：：向量&lt；int&gt；（），常量标准：：向量&lt；浮动&gt&amp；"
  },
  {
    "origin": "=std::vector&lt; float &gt;(), int",
    "local": "=标准：：向量&lt；浮动&gt；（），内景"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;odometryType)",
    "local": "&amp；里程计类型）"
  },
  {
    "origin": "static float",
    "local": "静态浮动"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "static float",
    "local": "静态浮动"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "static float",
    "local": "静态浮动"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "static float",
    "local": "静态浮动"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "static float",
    "local": "静态浮动"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "static float",
    "local": "静态浮动"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions",
    "local": "受保护的成员函数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;srcFrame, const",
    "local": "&gt；&quot；&amp；srcFrame，常量"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;dstFrame,",
    "local": "&gt；和安培，DST框架，"
  },
  {
    "origin": "Rt, const",
    "local": "Rt，常数"
  },
  {
    "origin": "&amp;initRt) const",
    "local": "&amp；initrt）const"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Protected Attributes",
    "local": "受保护的属性"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Public Types inherited from",
    "local": "继承自的公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "that merges",
    "local": "合并"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "by minimize sum of their energy functions.",
    "local": "通过最小化它们的能量函数之和。"
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "RgbdICPOdometry()",
    "local": "RgbdICPOdometry（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry::RgbdICPOdometry",
    "local": "简历：：rgbd：：RgbdICPOdometry：：RgbdICPOdometry"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "RgbdICPOdometry()",
    "local": "RgbdICPOdometry（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry::RgbdICPOdometry",
    "local": "简历：：rgbd：：RgbdICPOdometry：：RgbdICPOdometry"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "cameraMatrix",
    "local": "摄影机矩阵"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "minDepth",
    "local": "明德普"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "maxDepth",
    "local": "最大深度"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "maxDepthDiff",
    "local": "最大深度差"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "maxPointsPart",
    "local": "maxPointsPart公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt; int &gt; &amp;",
    "local": "常量标准：：向量&lt；内部&gt&amp；"
  },
  {
    "origin": "iterCounts",
    "local": "iterCounts公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt; float &gt; &amp;",
    "local": "常量标准：：向量&lt；浮动&gt&amp；"
  },
  {
    "origin": "minGradientMagnitudes",
    "local": "明度"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "transformType",
    "local": "选择TransformType"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Constructor.",
    "local": "建造师。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "cameraMatrix",
    "local": "摄影机矩阵"
  },
  {
    "origin": "Camera matrix",
    "local": "摄像机矩阵"
  },
  {
    "origin": "minDepth",
    "local": "明德普"
  },
  {
    "origin": "Pixels with depth less than minDepth will not be used",
    "local": "深度小于minDepth的像素将不被使用"
  },
  {
    "origin": "maxDepth",
    "local": "最大深度"
  },
  {
    "origin": "Pixels with depth larger than maxDepth will not be used",
    "local": "将不使用深度大于maxDepth的像素"
  },
  {
    "origin": "maxDepthDiff",
    "local": "最大深度差"
  },
  {
    "origin": "Correspondences between pixels of two given frames will be filtered out if their depth difference is larger than maxDepthDiff",
    "local": "如果两个给定帧的像素之间的深度差大于maxDepthDiff，则会过滤掉它们之间的对应关系"
  },
  {
    "origin": "maxPointsPart",
    "local": "maxPointsPart公司"
  },
  {
    "origin": "The method uses a random pixels subset of size frameWidth x frameHeight x pointsPart",
    "local": "该方法使用大小为frameWidth x frameHeight x pointsPart的随机像素子集"
  },
  {
    "origin": "iterCounts",
    "local": "iterCounts公司"
  },
  {
    "origin": "Count of iterations on each pyramid level.",
    "local": "每个金字塔级别上的迭代次数。"
  },
  {
    "origin": "minGradientMagnitudes",
    "local": "明度"
  },
  {
    "origin": "For each pyramid level the pixels will be filtered out if they have gradient magnitude less than minGradientMagnitudes[level].",
    "local": "对于每个金字塔级别，如果像素的梯度幅度小于mingRadientMagnites[级别]，则会过滤掉这些像素。"
  },
  {
    "origin": "transformType",
    "local": "选择TransformType"
  },
  {
    "origin": "Class of trasformation",
    "local": "变换类"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "checkParams()",
    "local": "checkParams（）"
  },
  {
    "origin": "virtual void cv::rgbd::RgbdICPOdometry::checkParams",
    "local": "虚拟void cv:：rgbd:：RgbdICPOdometry:：checkParams"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Implements",
    "local": "工具"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "computeImpl()",
    "local": "计算模板（）"
  },
  {
    "origin": "virtual bool cv::rgbd::RgbdICPOdometry::computeImpl",
    "local": "虚拟布尔cv:：rgbd:：RgbdICPOdometry:：computeImpl"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "srcFrame",
    "local": "心"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "dstFrame",
    "local": "DST框架"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Rt",
    "local": "放射性同位素"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "initRt",
    "local": "初始化"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Implements",
    "local": "工具"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::rgbd::RgbdICPOdometry::create",
    "local": "&燃气轮机；简历：：rgbd：：RgbdICPOdometry：：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "cameraMatrix",
    "local": "摄影机矩阵"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "minDepth",
    "local": "明德普"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "maxDepth",
    "local": "最大深度"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "maxDepthDiff",
    "local": "最大深度差"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "maxPointsPart",
    "local": "maxPointsPart公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt; int &gt; &amp;",
    "local": "常量标准：：向量&lt；内部&gt&amp；"
  },
  {
    "origin": "iterCounts",
    "local": "iterCounts公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt; float &gt; &amp;",
    "local": "常量标准：：向量&lt；浮动&gt&amp；"
  },
  {
    "origin": "minGradientMagnitudes",
    "local": "明度"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "transformType",
    "local": "选择TransformType"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd.RgbdICPOdometry_create(",
    "local": "cv.rgbd.RgbdICPOdometry\\u创建("
  },
  {
    "origin": "[, cameraMatrix[, minDepth[, maxDepth[, maxDepthDiff[, maxPointsPart[, iterCounts[, minGradientMagnitudes[, transformType]]]]]]]]",
    "local": "[，cameraMatrix[，minDepth[，maxDepth[，maxDepthDiff[，maxPointsPart[，iterCounts[，mingRadientMagnites[，transformType]]]]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getCameraMatrix()",
    "local": "getCameraMatrix（）"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry::getCameraMatrix",
    "local": "简历：：rgbd：：RgbdICPOdometry：：getCameraMatrix"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getCameraMatrix(",
    "local": "简历.rgbd\\u RgbdICPOdometry.getCameraMatrix("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Implements",
    "local": "工具"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getIterationCounts()",
    "local": "getIterationCounts（）"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry::getIterationCounts",
    "local": "简历：：rgbd：：RgbdICPOdometry：：getIterationCounts"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getIterationCounts(",
    "local": "cv.rgbd\\u RgbdICPOdometry.getIterationCounts("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMaxDepth()",
    "local": "getMaxDepth（）"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::getMaxDepth",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：getMaxDepth"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getMaxDepth(",
    "local": "cv.rgbd\\u RgbdICPOdometry.getMaxDepth("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMaxDepthDiff()",
    "local": "getMaxDepthDiff（）"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::getMaxDepthDiff",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：getMaxDepthDiff"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getMaxDepthDiff(",
    "local": "cv.rgbd\\u RgbdICPOdometry.getMaxDepthDiff("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMaxPointsPart()",
    "local": "getMaxPointsPart（）"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::getMaxPointsPart",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：getMaxPointsPart"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getMaxPointsPart(",
    "local": "简历.rgbd\\u RgbdICPOdometry.getMaxPointsPart("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMaxRotation()",
    "local": "getMaxRotation（）"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::getMaxRotation",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：getMaxRotation"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getMaxRotation(",
    "local": "cv.rgbd\\u RgbdICPOdometry.getMaxRotation("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMaxTranslation()",
    "local": "GetMaxTranslation（）"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::getMaxTranslation",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：getMaxTranslation"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getMaxTranslation(",
    "local": "简历.rgbd\\u RgbdICPOdometry.getMaxTranslation("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMinDepth()",
    "local": "getMinDepth（）"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::getMinDepth",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：getMinDepth"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getMinDepth(",
    "local": "简历rgbd-u RgbdICPOdometry.getMinDepth("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMinGradientMagnitudes()",
    "local": "GetMingRadientMagnites（）"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry::getMinGradientMagnitudes",
    "local": "cv：：rgbd：：RgbdICPOdometry：：GetMingRadientMagnites"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getMinGradientMagnitudes(",
    "local": "cv.rgbd\\u RgbdICPOdometry.getmingRadientMagnites测量("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getNormalsComputer()",
    "local": "getNormalsComputer（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::rgbd::RgbdICPOdometry::getNormalsComputer",
    "local": "&燃气轮机；简历：：rgbd：：RgbdICPOdometry：：getNormalsComputer"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getNormalsComputer(",
    "local": "cv.rgbd RgbdICPOdometry.getnormals计算机("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getTransformType()",
    "local": "getTransformType（）"
  },
  {
    "origin": "int cv::rgbd::RgbdICPOdometry::getTransformType",
    "local": "int cv:：rgbd:：RgbdICPOdometry:：getTransformType"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.getTransformType(",
    "local": "cv.rgbd\\u RgbdICPOdometry.getTransformType公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Implements",
    "local": "工具"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "prepareFrameCache()",
    "local": "prepareFrameCache（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry::prepareFrameCache",
    "local": "简历：：rgbd：：RgbdICPOdometry：：prepareFrameCache"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "frame",
    "local": "框架"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "cacheType",
    "local": "缓存类型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.prepareFrameCache(",
    "local": "简历.rgbd\\u RgbdICPOdometry.prepareFrameCache("
  },
  {
    "origin": "frame, cacheType",
    "local": "帧，缓存类型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Prepare a cache for the frame. The function checks the precomputed/passed data (throws the error if this data does not satisfy) and computes all remaining cache data needed for the frame. Returned size is a resolution of the prepared frame.",
    "local": "为帧准备缓存。该函数检查预计算/传递的数据（如果该数据不满足，则抛出错误），并计算帧所需的所有剩余缓存数据。返回的大小是准备好的帧的分辨率。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "frame",
    "local": "框架"
  },
  {
    "origin": "The odometry which will process the frame.",
    "local": "将处理帧的里程计。"
  },
  {
    "origin": "cacheType",
    "local": "缓存类型"
  },
  {
    "origin": "The cache type: CACHE_SRC, CACHE_DST or CACHE_ALL.",
    "local": "缓存类型：cache_SRC、cache_DST或cache_ALL。"
  },
  {
    "origin": "Reimplemented from",
    "local": "从重新实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setCameraMatrix()",
    "local": "setCameraMatrix（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setCameraMatrix",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setCameraMatrix"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setCameraMatrix(",
    "local": "简历.rgbd\\u RgbdICPOdometry.setCameraMatrix("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Implements",
    "local": "工具"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setIterationCounts()",
    "local": "setIterationCounts（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setIterationCounts",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setIterationCounts无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setIterationCounts(",
    "local": "cv.rgbd\\u RgbdICPOdometry.setIterationCounts文件("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMaxDepth()",
    "local": "setMaxDepth（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setMaxDepth",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setMaxDepth无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setMaxDepth(",
    "local": "cv.rgbd\\u RgbdICPOdometry.setMaxDepth设置最大深度("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMaxDepthDiff()",
    "local": "setMaxDepthDiff（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setMaxDepthDiff",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setMaxDepthDiff无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setMaxDepthDiff(",
    "local": "cv.rgbd\\u RgbdICPOdometry.setMaxDepthDiff("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMaxPointsPart()",
    "local": "setMaxPointsPart（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setMaxPointsPart",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setMaxPointsPart无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setMaxPointsPart(",
    "local": "cv.rgbd\\u RgbdICPOdometry.setMaxPointsPart文件("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMaxRotation()",
    "local": "setMaxRotation（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setMaxRotation",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setMaxRotation无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setMaxRotation(",
    "local": "cv.rgbd\\u RgbdICPOdometry.setMaxRotation文件("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMaxTranslation()",
    "local": "setMaxTranslation（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setMaxTranslation",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setMaxTranslation无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setMaxTranslation(",
    "local": "cv.rgbd\\u RgbdICPOdometry.setmaxtransation文件("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMinDepth()",
    "local": "setMinDepth（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setMinDepth",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setMinDepth无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setMinDepth(",
    "local": "简历rgbd-u RgbdICPOdometry.setMinDepth("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMinGradientMagnitudes()",
    "local": "设置半径震级（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setMinGradientMagnitudes",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setmingRadientMagnitions无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setMinGradientMagnitudes(",
    "local": "cv.rgbd\\U RgbdICPOdometry.SetmingRadientMagnites设置半径大小("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setTransformType()",
    "local": "setTransformType（）"
  },
  {
    "origin": "void cv::rgbd::RgbdICPOdometry::setTransformType",
    "local": "void cv:：rgbd:：RgbdICPOdometry:：setTransformType"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.rgbd_RgbdICPOdometry.setTransformType(",
    "local": "cv.rgbd\\u RgbdICPOdometry.setTransformType("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Implements",
    "local": "工具"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Member Data Documentation",
    "local": "成员数据文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "cameraMatrix",
    "local": "摄影机矩阵"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry::cameraMatrix",
    "local": "简历：：rgbd：：RgbdICPOdometry：：cameraMatrix"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "iterCounts",
    "local": "iterCounts公司"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry::iterCounts",
    "local": "简历：：rgbd：：RgbdICPOdometry：：iterCounts"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "maxDepth",
    "local": "最大深度"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::maxDepth",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：maxDepth"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "maxDepthDiff",
    "local": "最大深度差"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::maxDepthDiff",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：maxDepthDiff"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "maxPointsPart",
    "local": "maxPointsPart公司"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::maxPointsPart",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：maxPointsPart"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "maxRotation",
    "local": "最大旋转"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::maxRotation",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：maxRotation"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "maxTranslation",
    "local": "最大转换"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::maxTranslation",
    "local": "双cv:：rgbd:：RgbdICPOdometry:：maxTranslation"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "minDepth",
    "local": "明德普"
  },
  {
    "origin": "double cv::rgbd::RgbdICPOdometry::minDepth",
    "local": "双cv：：rgbd：：RgbdICPOdometry：：minDepth"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "minGradientMagnitudes",
    "local": "明度"
  },
  {
    "origin": "cv::rgbd::RgbdICPOdometry::minGradientMagnitudes",
    "local": "cv：：rgbd：：RgbdICPOdometry：：MingRadientMagnites"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "normalsComputer",
    "local": "普通计算机"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::rgbd::RgbdICPOdometry::normalsComputer",
    "local": "&燃气轮机；cv:：rgbd:：RgbdICPOdometry:：Normal计算机"
  },
  {
    "origin": "mutable",
    "local": "可变的"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "transformType",
    "local": "选择TransformType"
  },
  {
    "origin": "int cv::rgbd::RgbdICPOdometry::transformType",
    "local": "int cv:：rgbd:：RgbdICPOdometry:：transformType类型"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/rgbd/",
    "local": "打开CV2/rgbd/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:48为OpenCV生成"
  }
]