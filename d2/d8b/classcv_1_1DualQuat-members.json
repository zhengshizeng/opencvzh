[
  {
    "origin": "OpenCV: Member List",
    "local": "OpenCV:成员列表"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "cv::DualQuat&lt; _Tp &gt; Member List",
    "local": "cv：：双季&lt_Tp&gt；会员名单"
  },
  {
    "origin": "This is the complete list of members for",
    "local": "这是您的完整成员列表"
  },
  {
    "origin": ", including all inherited members.",
    "local": "，包括所有继承的成员。"
  },
  {
    "origin": "(const DualQuat&lt; T &gt; &amp;dq)",
    "local": "（const DualQuat&lt；T&gt&amp；（dq）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const Affine3&lt; _Tp &gt; &amp;R)",
    "local": "（常数3&lt；u）Tp&gt；&gt；amp；（右）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const _Tp angle, const Vec&lt; _Tp, 3 &gt; &amp;axis, const Vec&lt; _Tp, 3 &gt; &amp;translation)",
    "local": "（const u Tp angle，const Vec&lt；Tp，3&gt；安培，轴，常量向量&lt；Tp，3&gt；安培，翻译"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(InputArray _R)",
    "local": "（输入阵列\\R）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const _Tp angle, const _Tp d, const Vec&lt; _Tp, 3 &gt; &amp;axis, const Vec&lt; _Tp, 3 &gt; &amp;moment)",
    "local": "（const-u Tp angle，const-u Tp d，const Vec&lt；u）Tp，3&gt；&gt；amp；坐标轴，常量向量&lt；uTp，3&gt；&gt；amp；力矩）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const Quat&lt; _Tp &gt; &amp;realPart, const Quat&lt; _Tp &gt; &amp;dualPart)",
    "local": "（const Quat&lt_Tp&gt&amp；realPart、const Quat&lt_Tp&gt&amp；双部件）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const T s, const DualQuat&lt; T &gt; &amp;)",
    "local": "（常数T S，常数双精度&lt；&gt；&gt；amp；）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(const DualQuat&lt; T &gt; &amp;, const T s)",
    "local": "（常数双精度（&L）&gt；&gt；安培，常数t s）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(const T s, const DualQuat&lt; T &gt; &amp;)",
    "local": "（常数T S，常数双精度&lt；&gt；&gt；amp；）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(const DualQuat&lt; T &gt; &amp;, const T s)",
    "local": "（常数双精度（&L）&gt；&gt；安培，常数t s）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(const DualQuat&lt; T &gt; &amp;, const T s)",
    "local": "（常数双精度（&L）&gt；&gt；安培，常数t s）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(const T s, const DualQuat&lt; T &gt; &amp;)",
    "local": "（常数T S，常数双精度&lt；&gt；&gt；amp；）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(std::ostream &amp;, const DualQuat&lt; S &gt; &amp;)",
    "local": "（标准：：ostream&amp；，常量DualQuat&lt；S&gt&amp；）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(DualQuat&lt; _Tp &gt; p) const",
    "local": "（双季&ltTp&gt；（p） 常数"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;q1, const DualQuat&lt; _Tp &gt; &amp;q2, const _Tp t, QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT)",
    "local": "（常量双精度（&lt；）&gt；&TP安培；Q1，常量双精度（&lt；&gt；&TP安培；Q2，const tp t，quatsumptype assumpt=quat assumpt not unit）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(const _Tp w, const _Tp x, const _Tp y, const _Tp z, const _Tp w_, const _Tp x_, const _Tp y_, const _Tp z_)",
    "local": "（常数Tpw，常数Tpx，常数Tpy，常数Tpz，常数Tpw，常数Tpx，常数Tpy，常数Tpz）"
  },
  {
    "origin": "(const Vec&lt; _Tp, 8 &gt; &amp;q)",
    "local": "（常量向量&lt；（u）Tp，8&gt&amp；（问）"
  },
  {
    "origin": "(const DualQuat&lt; T &gt; &amp;dq)",
    "local": "（const DualQuat&lt；T&gt&amp；（dq）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const Vec&lt; DualQuat&lt; _Tp &gt;, cn &gt; &amp;dualquat, InputArray weights, QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT)",
    "local": "（常量向量&lt；双季&lt；Tp&gt；，中国&gt&amp；dualquat，InputArray weights，quatasumeType assumeUnit=WHIT假定为非单位）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(InputArray dualquat, InputArray weights, QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT)",
    "local": "（InputArray dualquat，InputArray weights，QuatAssumeType assumeUnit=QUAT\\u ASSUME\\u NOT\\u UNIT）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT) const",
    "local": "（QuatAssumeType assumeUnit=QUAT\\u ASSUME\\u NOT\\u UNIT）常量"
  },
  {
    "origin": "(QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT) const",
    "local": "（QuatAssumeType assumeUnit=QUAT\\u ASSUME\\u NOT\\u UNIT）常量"
  },
  {
    "origin": "(const DualQuat&lt; T &gt; &amp;dq, QuatAssumeType assumeUnit)",
    "local": "（常数双精度（&L）&gt；&gt；安培；DQ，四种假设类型假设）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT) const",
    "local": "（QuatAssumeType assumeUnit=QUAT\\u ASSUME\\u NOT\\u UNIT）常量"
  },
  {
    "origin": "(const DualQuat&lt; T &gt; &amp;dq, QuatAssumeType assumeUnit)",
    "local": "（常数双精度（&L）&gt；&gt；安培；DQ，四种假设类型假设）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT) const",
    "local": "（QuatAssumeType assumeUnit=QUAT\\u ASSUME\\u NOT\\u UNIT）常量"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;) const",
    "local": "（const DualQuat&lt；Tp&gt&amp；）常数"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;)",
    "local": "（const DualQuat&lt；Tp&gt&amp；）"
  },
  {
    "origin": "(const _Tp s)",
    "local": "（施工图）"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;) const",
    "local": "（const DualQuat&lt；Tp&gt&amp；）常数"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;)",
    "local": "（const DualQuat&lt；Tp&gt&amp；）"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;) const",
    "local": "（const DualQuat&lt；Tp&gt&amp；）常数"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;)",
    "local": "（const DualQuat&lt；Tp&gt&amp；）"
  },
  {
    "origin": "(const _Tp s) const",
    "local": "常量（Tps）常量"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;) const",
    "local": "（const DualQuat&lt；Tp&gt&amp；）常数"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;)",
    "local": "（const DualQuat&lt；Tp&gt&amp；）"
  },
  {
    "origin": "(const _Tp s)",
    "local": "（施工图）"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;) const",
    "local": "（const DualQuat&lt；Tp&gt&amp；）常数"
  },
  {
    "origin": "(const DualQuat&lt; T &gt; &amp;dq, const T t, QuatAssumeType assumeUnit)",
    "local": "（常数双精度（&L）&gt；&gt；安培；DQ、常数T、四种假设类型假设）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(const _Tp t, QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT) const",
    "local": "（const\\u Tp t，QuatAssumeType assumeUnit=QUAT\\u ASSUME\\u NOT\\u UNIT）常量"
  },
  {
    "origin": "(const DualQuat&lt; T &gt; &amp;p, const DualQuat&lt; T &gt; &amp;q, QuatAssumeType assumeUnit)",
    "local": "（常数双精度（&L）&gt；&gt；安培；P、常数双精度（&L）&gt；&gt；安培；Q、四种假设类型假设）"
  },
  {
    "origin": "friend",
    "local": "朋友"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;q, QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT) const",
    "local": "（常量双精度（&lt；）&gt；&TP安培；Q、四假设类型假设"
  },
  {
    "origin": "(const DualQuat&lt; _Tp &gt; &amp;q1, const DualQuat&lt; _Tp &gt; &amp;q2, const _Tp t, bool directChange=true, QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT)",
    "local": "（常量双精度（&lt；）&gt；&TP安培；Q1，常量双精度（&lt；&gt；&TP安培；Q2，const tp t，bool directchange=true，quatsumptype assumpt=quat assumpt not unit）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT) const",
    "local": "（QuatAssumeType assumeUnit=QUAT\\u ASSUME\\u NOT\\u UNIT）常量"
  },
  {
    "origin": "(QuatAssumeType assumeUnit=QUAT_ASSUME_NOT_UNIT) const",
    "local": "（QuatAssumeType assumeUnit=QUAT\\u ASSUME\\u NOT\\u UNIT）常量"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:42 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:42为OpenCV生成，&#160；"
  }
]