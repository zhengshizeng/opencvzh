[
  {
    "origin": "OpenCV: cv::StereoMatcher Class Reference",
    "local": "OpenCV:cv:：StereoMatcher类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::StereoMatcher Class Reference",
    "local": "cv:：StereoMatcher类参考"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "The base class for stereo correspondence algorithms.",
    "local": "立体对应算法的基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::StereoMatcher:",
    "local": "cv:：StereoMatcher的继承关系图："
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "= (1 &lt;&lt; DISP_SHIFT)",
    "local": "=（1&lt；）信息技术；显示（u移位）"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "left,",
    "local": "左边，"
  },
  {
    "origin": "right,",
    "local": "正确的，"
  },
  {
    "origin": "Computes disparity map for the specified stereo pair.",
    "local": "计算指定立体对的视差贴图。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "The base class for stereo correspondence algorithms.",
    "local": "立体对应算法的基类。"
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": "成员枚举文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "DISP_SHIFT",
    "local": "显示/轮班"
  },
  {
    "origin": "DISP_SCALE",
    "local": "显示比例"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "compute()",
    "local": "计算（）"
  },
  {
    "origin": "virtual void cv::StereoMatcher::compute",
    "local": "虚空cv:：StereoMatcher:：compute"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "left",
    "local": "左边"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "right",
    "local": "正确的"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "disparity",
    "local": "差距"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "disparity",
    "local": "差距"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.compute(",
    "local": "cv.StereoMatcher.compute计算("
  },
  {
    "origin": "left, right[, disparity]",
    "local": "左，右[，视差]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Computes disparity map for the specified stereo pair.",
    "local": "计算指定立体对的视差贴图。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "left",
    "local": "左边"
  },
  {
    "origin": "Left 8-bit single-channel image.",
    "local": "左8位单通道图像。"
  },
  {
    "origin": "right",
    "local": "正确的"
  },
  {
    "origin": "Right image of the same size and the same type as the left one.",
    "local": "与左图像大小和类型相同的右图像。"
  },
  {
    "origin": "disparity",
    "local": "差距"
  },
  {
    "origin": "Output disparity map. It has the same size as the input images. Some algorithms, like",
    "local": "输出视差图。它与输入图像的大小相同。一些算法，比如"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "compute 16-bit fixed-point disparity map (where each disparity value has 4 fractional bits), whereas other algorithms output 32-bit floating-point disparity map.",
    "local": "计算16位定点视差图（其中每个视差值有4个小数位），而其他算法输出32位浮点视差图。"
  },
  {
    "origin": "Implemented in",
    "local": "实施于"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getBlockSize()",
    "local": "getBlockSize（）"
  },
  {
    "origin": "virtual int cv::StereoMatcher::getBlockSize",
    "local": "虚拟int cv:：StereoMatcher:：getBlockSize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.getBlockSize(",
    "local": "cv.StereoMatcher.getBlockSize("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDisp12MaxDiff()",
    "local": "getDisp12MaxDiff（）"
  },
  {
    "origin": "virtual int cv::StereoMatcher::getDisp12MaxDiff",
    "local": "cv:：StereoMatcher:：getDisp12MaxDiff中的虚拟"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.getDisp12MaxDiff(",
    "local": "cv.StereoMatcher.getDisp12MaxDiff文件("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMinDisparity()",
    "local": "getMinDisparity（）"
  },
  {
    "origin": "virtual int cv::StereoMatcher::getMinDisparity",
    "local": "虚拟int cv:：StereoMatcher:：getMinDisparity"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.getMinDisparity(",
    "local": "cv.StereoMatcher.getMinDisparity("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getNumDisparities()",
    "local": "getNumDisparities（）"
  },
  {
    "origin": "virtual int cv::StereoMatcher::getNumDisparities",
    "local": "虚拟int cv:：StereoMatcher:：getNumDisparities"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.getNumDisparities(",
    "local": "cv.StereoMatcher.getNumDisparities属性("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getSpeckleRange()",
    "local": "GetRange（）"
  },
  {
    "origin": "virtual int cv::StereoMatcher::getSpeckleRange",
    "local": "虚拟int cv:：StereoMatcher:：getscapelRange"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.getSpeckleRange(",
    "local": "cv.StereoMatcher.getspokerrange("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getSpeckleWindowSize()",
    "local": "speGetWindowsSize（）"
  },
  {
    "origin": "virtual int cv::StereoMatcher::getSpeckleWindowSize",
    "local": "虚拟int cv:：StereoMatcher:：getwindowsize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.getSpeckleWindowSize(",
    "local": "cv.StereoMatcher.getWindowSize("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setBlockSize()",
    "local": "setBlockSize（）"
  },
  {
    "origin": "virtual void cv::StereoMatcher::setBlockSize",
    "local": "虚拟空cv:：StereoMatcher:：setBlockSize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "blockSize",
    "local": "块大小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.setBlockSize(",
    "local": "cv.StereoMatcher.setBlockSize公司("
  },
  {
    "origin": "blockSize",
    "local": "块大小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setDisp12MaxDiff()",
    "local": "setDisp12MaxDiff（）"
  },
  {
    "origin": "virtual void cv::StereoMatcher::setDisp12MaxDiff",
    "local": "虚拟空cv:：StereoMatcher:：setDisp12MaxDiff"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "disp12MaxDiff",
    "local": "disp12MaxDiff公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.setDisp12MaxDiff(",
    "local": "cv.StereoMatcher.setDisp12MaxDiff文件("
  },
  {
    "origin": "disp12MaxDiff",
    "local": "disp12MaxDiff公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMinDisparity()",
    "local": "setMinDisparity（）"
  },
  {
    "origin": "virtual void cv::StereoMatcher::setMinDisparity",
    "local": "虚空cv:：StereoMatcher:：setMinDisparity"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "minDisparity",
    "local": "最小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.setMinDisparity(",
    "local": "cv.StereoMatcher.setMinDisparity设置("
  },
  {
    "origin": "minDisparity",
    "local": "最小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setNumDisparities()",
    "local": "setNumDisparities（）"
  },
  {
    "origin": "virtual void cv::StereoMatcher::setNumDisparities",
    "local": "虚拟void cv:：StereoMatcher:：setNumDisparities"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "numDisparities",
    "local": "数字稀疏性"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.setNumDisparities(",
    "local": "cv.StereoMatcher.setNumDisparities属性("
  },
  {
    "origin": "numDisparities",
    "local": "数字稀疏性"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setSpeckleRange()",
    "local": "设置规范范围（）"
  },
  {
    "origin": "virtual void cv::StereoMatcher::setSpeckleRange",
    "local": "虚空cv:：StereoMatcher:：setSpeckleRange"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "speckleRange",
    "local": "散斑范围"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.setSpeckleRange(",
    "local": "cv.StereoMatcher.setSpeckleRange公司("
  },
  {
    "origin": "speckleRange",
    "local": "散斑范围"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setSpeckleWindowSize()",
    "local": "设置规范窗口大小（）"
  },
  {
    "origin": "virtual void cv::StereoMatcher::setSpeckleWindowSize",
    "local": "虚空cv:：StereoMatcher:：SetSpeckleWindowsSize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "speckleWindowSize",
    "local": "斑点窗"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.StereoMatcher.setSpeckleWindowSize(",
    "local": "cv.StereoMatcher.SetSpeckleWindowsSize("
  },
  {
    "origin": "speckleWindowSize",
    "local": "斑点窗"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:43为OpenCV生成"
  }
]