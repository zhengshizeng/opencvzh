[
  {
    "origin": "OpenCV: cv::cuda::HoughLinesDetector Class Reference",
    "local": "OpenCV:cv:：cuda:：HoughLinesDetector类引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::cuda::HoughLinesDetector Class Reference",
    "local": "cv:：cuda:：HoughLinesDetector类引用"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "&raquo;",
    "local": "&引用；"
  },
  {
    "origin": "&raquo;",
    "local": "&引用；"
  },
  {
    "origin": "Base class for lines detector algorithm. :",
    "local": "行检测器算法的基类："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::cuda::HoughLinesDetector:",
    "local": "cv:：cuda:：HoughLinesDetector的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src,",
    "local": "src公司，"
  },
  {
    "origin": "lines,",
    "local": "线，"
  },
  {
    "origin": "&amp;stream=",
    "local": "&amp；溪流="
  },
  {
    "origin": "Finds lines in a binary image using the classical Hough transform.",
    "local": "使用经典Hough变换在二值图像中查找线。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "d_lines,",
    "local": "d\\U线，"
  },
  {
    "origin": "h_lines,",
    "local": "hïU线，"
  },
  {
    "origin": "h_votes=",
    "local": "h\\ U投票="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "&amp;stream=",
    "local": "&amp；溪流="
  },
  {
    "origin": "Downloads results from",
    "local": "从下载结果"
  },
  {
    "origin": "to host memory.",
    "local": "存储内存。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(int",
    "local": "（内景）"
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": "&#160;继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Protected Member Functions inherited from",
    "local": "&#160;继承自的受保护成员函数"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Base class for lines detector algorithm. :",
    "local": "行检测器算法的基类："
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "detect()",
    "local": "检测（）"
  },
  {
    "origin": "virtual void cv::cuda::HoughLinesDetector::detect",
    "local": "虚空cv:：cuda:：HoughLinesDetector:：detect"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "lines",
    "local": "线"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Finds lines in a binary image using the classical Hough transform.",
    "local": "使用经典Hough变换在二值图像中查找线。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "8-bit, single-channel binary source image.",
    "local": "8位，单通道二进制源图像。"
  },
  {
    "origin": "lines",
    "local": "线"
  },
  {
    "origin": "Output vector of lines. Each line is represented by a two-element vector \\((\\rho, \\theta)\\) . \\(\\rho\\) is the distance from the coordinate origin \\((0,0)\\) (top-left corner of the image). \\(\\theta\\) is the line rotation angle in radians ( \\(0 \\sim \\textrm{vertical line}, \\pi/2 \\sim \\textrm{horizontal line}\\) ).",
    "local": "线的输出向量。每一行由一个两元素向量\\（（\\rho，\\theta）\\）表示\\(\\ρ\\）是到坐标原点\\（（0,0）\\）（图像左上角）的距离\\(\\θ\\）是以弧度表示的线旋转角度（\\（0\\sim\\textrm{vertical line}、\\pi/2\\sim\\textrm{horizontal line}\\）。"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "for the asynchronous version.",
    "local": "对于异步版本。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "downloadResults()",
    "local": "下载结果（）"
  },
  {
    "origin": "virtual void cv::cuda::HoughLinesDetector::downloadResults",
    "local": "虚拟void cv:：cuda:：HoughLinesDetector:：downloadResults"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "d_lines",
    "local": "d\\线"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "h_lines",
    "local": "高压线"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "h_votes",
    "local": "h\\ U投票"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Downloads results from",
    "local": "从下载结果"
  },
  {
    "origin": "to host memory.",
    "local": "存储内存。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "d_lines",
    "local": "d\\线"
  },
  {
    "origin": "Result of",
    "local": "的结果"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "h_lines",
    "local": "高压线"
  },
  {
    "origin": "Output host array.",
    "local": "输出主机阵列。"
  },
  {
    "origin": "h_votes",
    "local": "h\\ U投票"
  },
  {
    "origin": "Optional output array for line's votes.",
    "local": "行投票的可选输出数组。"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "for the asynchronous version.",
    "local": "对于异步版本。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getDoSort()",
    "local": "getDoSort（）"
  },
  {
    "origin": "virtual bool cv::cuda::HoughLinesDetector::getDoSort",
    "local": "虚拟布尔cv:：cuda:：HoughLinesDetector:：getDoSort"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getMaxLines()",
    "local": "getMaxLines（）"
  },
  {
    "origin": "virtual int cv::cuda::HoughLinesDetector::getMaxLines",
    "local": "虚拟int cv:：cuda:：HoughLinesDetector:：getMaxLines"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getRho()",
    "local": "getRho（）"
  },
  {
    "origin": "virtual float cv::cuda::HoughLinesDetector::getRho",
    "local": "虚拟浮点cv:：cuda:：HoughLinesDetector:：getRho"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getTheta()",
    "local": "getTheta（）"
  },
  {
    "origin": "virtual float cv::cuda::HoughLinesDetector::getTheta",
    "local": "虚拟浮点cv:：cuda:：HoughLinesDetector:：getTheta"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getThreshold()",
    "local": "getThreshold（）"
  },
  {
    "origin": "virtual int cv::cuda::HoughLinesDetector::getThreshold",
    "local": "虚拟int cv:：cuda:：HoughLinesDetector:：getThreshold"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setDoSort()",
    "local": "塞多特（）"
  },
  {
    "origin": "virtual void cv::cuda::HoughLinesDetector::setDoSort",
    "local": "虚空cv:：cuda:：HoughLinesDetector:：setDoSort"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "doSort",
    "local": "多索"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setMaxLines()",
    "local": "setMaxLines（）"
  },
  {
    "origin": "virtual void cv::cuda::HoughLinesDetector::setMaxLines",
    "local": "虚空cv:：cuda:：HoughLinesDetector:：setMaxLines"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "maxLines",
    "local": "最大线"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setRho()",
    "local": "塞特霍（）"
  },
  {
    "origin": "virtual void cv::cuda::HoughLinesDetector::setRho",
    "local": "虚空cv:：cuda:：HoughLinesDetector:：setRho"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "rho",
    "local": "ρ"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setTheta()",
    "local": "设定值（）"
  },
  {
    "origin": "virtual void cv::cuda::HoughLinesDetector::setTheta",
    "local": "虚空cv:：cuda:：HoughLinesDetector:：setTheta"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "theta",
    "local": "θ"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setThreshold()",
    "local": "设置阈值（）"
  },
  {
    "origin": "virtual void cv::cuda::HoughLinesDetector::setThreshold",
    "local": "虚空cv:：cuda:：HoughLinesDetector:：setThreshold"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "threshold",
    "local": "门槛"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:44 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:44为OpenCV生成，&#160；"
  }
]