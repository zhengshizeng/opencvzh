[
  {
    "origin": "OpenCV: Member List",
    "local": "OpenCV:成员列表"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "cv::SparseMat_&lt; _Tp &gt; Member List",
    "local": "简历：：SparseMat&lt_Tp&gt；会员名单"
  },
  {
    "origin": "This is the complete list of members for",
    "local": "这是您的完整成员列表"
  },
  {
    "origin": ", including all inherited members.",
    "local": "，包括所有继承的成员。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(SparseMat &amp;m, int type=-1) const",
    "local": "（SparseMat&amp；m、 int type=-1）常量"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "() const CV_NODISCARD",
    "local": "（）常量CV\\u NODISCARD"
  },
  {
    "origin": "typedef",
    "local": "类型定义"
  },
  {
    "origin": "(SparseMat &amp;m, int rtype, double alpha=1) const",
    "local": "（SparseMat&amp；m、 int rtype，double alpha=1）常量"
  },
  {
    "origin": "(Mat &amp;m, int rtype, double alpha=1, double beta=0) const",
    "local": "（材料和材料）；m、 int rtype，double alpha=1，double beta=0）常量"
  },
  {
    "origin": "(SparseMat &amp;m) const",
    "local": "（SparseMat&amp；m） 常数"
  },
  {
    "origin": "(Mat &amp;m) const",
    "local": "（材料和材料）；m） 常数"
  },
  {
    "origin": "(int dims, const int *_sizes)",
    "local": "（内部尺寸，常量内部尺寸）"
  },
  {
    "origin": "(int dims, const int *_sizes, int _type)",
    "local": "（int dims，const int*\\u size，int类型）"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int i0, int i1, size_t *hashval=0)",
    "local": "（int i0，int i1，大小\\u t*hashval=0）"
  },
  {
    "origin": "(int i0, int i1, int i2, size_t *hashval=0)",
    "local": "（int i0，int i1，int i2，大小\\u t*hashval=0）"
  },
  {
    "origin": "(const int *idx, size_t *hashval=0)",
    "local": "（const int*idx，size\\u t*hashval=0）"
  },
  {
    "origin": "(int i0, size_t *hashval=0) const",
    "local": "（int i0，size\\u t*hashval=0）常量"
  },
  {
    "origin": "(int i0, int i1, size_t *hashval=0) const",
    "local": "（int i0，int i1，size\\t*hashval=0）常量"
  },
  {
    "origin": "(int i0, int i1, int i2, size_t *hashval=0) const",
    "local": "（int i0，int i1，int i2，size\\t*hashval=0）常量"
  },
  {
    "origin": "(const int *idx, size_t *hashval=0) const",
    "local": "（const int*idx，size\\u t*hashval=0）常量"
  },
  {
    "origin": "(int i0) const",
    "local": "（int i0）常量"
  },
  {
    "origin": "(int i0, int i1) const",
    "local": "（int i0，int i1）常数"
  },
  {
    "origin": "(int i0, int i1, int i2) const",
    "local": "（int i0，int i1，int i2）常数"
  },
  {
    "origin": "(const int *idx) const",
    "local": "（const int*idx）const"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "typedef",
    "local": "类型定义"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "(const int *idx, size_t hashval)",
    "local": "（const int*idx，大小\\u t hashval）"
  },
  {
    "origin": "(size_t nidx)",
    "local": "（尺寸\\u t nidx）"
  },
  {
    "origin": "(size_t nidx) const",
    "local": "（尺寸X）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int i0, size_t *hashval=0) const",
    "local": "（int i0，size\\u t*hashval=0）常量"
  },
  {
    "origin": "(int i0, int i1, size_t *hashval=0) const",
    "local": "（int i0，int i1，size\\t*hashval=0）常量"
  },
  {
    "origin": "(int i0, int i1, int i2, size_t *hashval=0) const",
    "local": "（int i0，int i1，int i2，size\\t*hashval=0）常量"
  },
  {
    "origin": "(const int *idx, size_t *hashval=0) const",
    "local": "（const int*idx，size\\u t*hashval=0）常量"
  },
  {
    "origin": "(const SparseMat &amp;m)",
    "local": "（const SparseMat和；米）"
  },
  {
    "origin": "(const SparseMat_ &amp;m)",
    "local": "（const SparseMat&amp；米）"
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": "（施工材料和；米）"
  },
  {
    "origin": "(int i0, bool createMissing, size_t *hashval=0)",
    "local": "（int i0，bool createMissing，size\\u t*hashval=0）"
  },
  {
    "origin": "(int i0, int i1, bool createMissing, size_t *hashval=0)",
    "local": "（int i0，int i1，bool createMissing，size\\u t*hashval=0）"
  },
  {
    "origin": "(int i0, int i1, int i2, bool createMissing, size_t *hashval=0)",
    "local": "（int i0，int i1，int i2，bool createMissing，size\\u t*hashval=0）"
  },
  {
    "origin": "(const int *idx, bool createMissing, size_t *hashval=0)",
    "local": "（const int*idx，bool createMissing，size\\u t*hashval=0）"
  },
  {
    "origin": "(int i0, size_t *hashval=0)",
    "local": "（int i0，size\\u t*hashval=0）"
  },
  {
    "origin": "(int i0, int i1, size_t *hashval=0)",
    "local": "（int i0，int i1，大小\\u t*hashval=0）"
  },
  {
    "origin": "(int i0, int i1, int i2, size_t *hashval=0)",
    "local": "（int i0，int i1，int i2，大小\\u t*hashval=0）"
  },
  {
    "origin": "(const int *idx, size_t *hashval=0)",
    "local": "（const int*idx，size\\u t*hashval=0）"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(size_t hidx, size_t nidx, size_t previdx)",
    "local": "（大小\\u t hidx，大小\\u t nidx，大小\\u t previdx）"
  },
  {
    "origin": "(size_t newsize)",
    "local": "（大小\\n新闻大小）"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int i) const",
    "local": "（内景一）常数"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(int dims, const int *_sizes, int _type)",
    "local": "（int dims，const int*\\u size，int类型）"
  },
  {
    "origin": "(const SparseMat &amp;m)",
    "local": "（const SparseMat和；米）"
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": "（施工材料和；米）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(int dims, const int *_sizes)",
    "local": "（内部尺寸，常量内部尺寸）"
  },
  {
    "origin": "(const SparseMat &amp;m)",
    "local": "（const SparseMat和；米）"
  },
  {
    "origin": "(const SparseMat_ &amp;m)",
    "local": "（const SparseMat&amp；米）"
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": "（施工材料和；米）"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int i0, size_t *hashval=0) const",
    "local": "（int i0，size\\u t*hashval=0）常量"
  },
  {
    "origin": "(int i0, int i1, size_t *hashval=0) const",
    "local": "（int i0，int i1，size\\t*hashval=0）常量"
  },
  {
    "origin": "(int i0, int i1, int i2, size_t *hashval=0) const",
    "local": "（int i0，int i1，int i2，size\\t*hashval=0）常量"
  },
  {
    "origin": "(const int *idx, size_t *hashval=0) const",
    "local": "（const int*idx，size\\u t*hashval=0）常量"
  },
  {
    "origin": "(Node *n)",
    "local": "（节点*n）"
  },
  {
    "origin": "(const Node *n) const",
    "local": "（const节点*n）const"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:43为OpenCV生成，&#160；"
  }
]