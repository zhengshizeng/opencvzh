[
  {
    "origin": "OpenCV: Member List",
    "local": "OpenCV:成员列表"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "cv::Mat Member List",
    "local": "cv:：Mat成员列表"
  },
  {
    "origin": "This is the complete list of members for",
    "local": "这是您的完整成员列表"
  },
  {
    "origin": ", including all inherited members.",
    "local": "，包括所有继承的成员。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(int dtop, int dbottom, int dleft, int dright)",
    "local": "（int dtop，int dbottom，int dleft，int dright）"
  },
  {
    "origin": "(Mat &amp;m, int type=-1) const",
    "local": "（材料和材料）；m、 int type=-1）常量"
  },
  {
    "origin": "(int i0=0)",
    "local": "（整数i0=0）"
  },
  {
    "origin": "(int i0=0) const",
    "local": "（int i0=0）常数"
  },
  {
    "origin": "(int row, int col)",
    "local": "（int行，int列）"
  },
  {
    "origin": "(int row, int col) const",
    "local": "（int行，int列）常量"
  },
  {
    "origin": "(int i0, int i1, int i2)",
    "local": "（整数i0，整数i1，整数i2）"
  },
  {
    "origin": "(int i0, int i1, int i2) const",
    "local": "（int i0，int i1，int i2）常数"
  },
  {
    "origin": "(const int *idx)",
    "local": "（const int*idx）"
  },
  {
    "origin": "(const int *idx) const",
    "local": "（const int*idx）const"
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx)",
    "local": "（常量向量&lt；内景，n&gt&amp；idx公司）"
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx) const",
    "local": "（常量向量&lt；内景，n&gt&amp；（idx）常量"
  },
  {
    "origin": "(Point pt)",
    "local": "（点pt）"
  },
  {
    "origin": "(Point pt) const",
    "local": "（点pt）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int elemChannels, int depth=-1, bool requireContinuous=true) const",
    "local": "（int elemChannels，int depth=-1，bool requireContinuous=true）常量"
  },
  {
    "origin": "() const CV_NODISCARD",
    "local": "（）常量CV\\u NODISCARD"
  },
  {
    "origin": "(int x) const",
    "local": "（int x）const"
  },
  {
    "origin": "(int startcol, int endcol) const",
    "local": "（int startcol，int endcol）常量"
  },
  {
    "origin": "(const Range &amp;r) const",
    "local": "（常数范围和；r） 常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "(OutputArray m, int rtype, double alpha=1, double beta=0) const",
    "local": "（输出数组m，int rtype，double alpha=1，double beta=0）常量"
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": "（施工材料和；米）"
  },
  {
    "origin": "(OutputArray m) const",
    "local": "（输出阵列m）常数"
  },
  {
    "origin": "(OutputArray m, InputArray mask) const",
    "local": "（输出阵列m，输入阵列掩码）常量"
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": "（int行，int列，int类型）"
  },
  {
    "origin": "(Size size, int type)",
    "local": "（大小，int类型）"
  },
  {
    "origin": "(int ndims, const int *sizes, int type)",
    "local": "（int ndims，const int*大小，int类型）"
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;sizes, int type)",
    "local": "（const std：：向量&lt；内部&gt&amp；尺寸，整型）"
  },
  {
    "origin": "(InputArray m) const",
    "local": "（Inputarray M）const"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "(int d=0) const",
    "local": "（int d=0）常数"
  },
  {
    "origin": "(const Mat &amp;d)",
    "local": "（施工材料和；%d/%m/%Y%I:%m:%S%p"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(InputArray m) const",
    "local": "（Inputarray M）const"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": "（int行，int列，int类型）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(Size size, int type)",
    "local": "（大小，int类型）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const Functor &amp;operation)",
    "local": "（const函子&amp；（操作）"
  },
  {
    "origin": "(const Functor &amp;operation) const",
    "local": "（const函子&amp；操作）常数"
  },
  {
    "origin": "(const Functor &amp;operation)",
    "local": "（const函子&amp；（操作）"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(AccessFlag accessFlags, UMatUsageFlags usageFlags=USAGE_DEFAULT) const",
    "local": "（AccessFlag accessFlags，UMatUsageFlags usageFlags=USAGE DEFAULT）常量"
  },
  {
    "origin": "(int method=DECOMP_LU) const",
    "local": "（int method=DECOMP\\u LU）常量"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(Size &amp;wholeSize, Point &amp;ofs) const",
    "local": "（尺寸和尺寸）；批发、点评；ofs）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "() CV_NOEXCEPT",
    "local": "CV不例外"
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": "（int行，int列，int类型）"
  },
  {
    "origin": "(Size size, int type)",
    "local": "（大小，int类型）"
  },
  {
    "origin": "(int rows, int cols, int type, const Scalar &amp;s)",
    "local": "（int行、int列、int类型、常量标量和；秒）"
  },
  {
    "origin": "(Size size, int type, const Scalar &amp;s)",
    "local": "（大小、int类型、常量标量和；秒）"
  },
  {
    "origin": "(int ndims, const int *sizes, int type)",
    "local": "（int ndims，const int*大小，int类型）"
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;sizes, int type)",
    "local": "（const std：：向量&lt；内部&gt&amp；尺寸，整型）"
  },
  {
    "origin": "(int ndims, const int *sizes, int type, const Scalar &amp;s)",
    "local": "（int ndims，const int*size，int type，const Scalar&amp；秒）"
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;sizes, int type, const Scalar &amp;s)",
    "local": "（const std：：向量&lt；内部&gt&amp；大小、int类型、常量标量；秒）"
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": "（施工材料和；米）"
  },
  {
    "origin": "(int rows, int cols, int type, void *data, size_t step=AUTO_STEP)",
    "local": "（int行，int列，int类型，void*数据，size\\u t step=AUTO\\u step）"
  },
  {
    "origin": "(Size size, int type, void *data, size_t step=AUTO_STEP)",
    "local": "（Size，int type，void*data，Size\\u t step=AUTO\\u step）"
  },
  {
    "origin": "(int ndims, const int *sizes, int type, void *data, const size_t *steps=0)",
    "local": "（int ndims，const int*size，int type，void*data，const size\\u t*steps=0）"
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;sizes, int type, void *data, const size_t *steps=0)",
    "local": "（const std：：向量&lt；内部&gt&amp；大小，int类型，void*data，const size\\u t*steps=0）"
  },
  {
    "origin": "(const Mat &amp;m, const Range &amp;rowRange, const Range &amp;colRange=Range::all())",
    "local": "（施工材料和；m、 常量范围和；行范围、常量范围和；colRange=Range:：all（））"
  },
  {
    "origin": "(const Mat &amp;m, const Rect &amp;roi)",
    "local": "（施工材料和M、常量矩&amp；国王）"
  },
  {
    "origin": "(const Mat &amp;m, const Range *ranges)",
    "local": "（施工材料和；m、 常量范围*范围）"
  },
  {
    "origin": "(const Mat &amp;m, const std::vector&lt; Range &gt; &amp;ranges)",
    "local": "（施工材料和；m、 常量标准：：向量&lt；范围&gt&amp；范围）"
  },
  {
    "origin": "(const std::vector&lt; _Tp &gt; &amp;vec, bool copyData=false)",
    "local": "（const std：：向量&lt；“uTp&gt&amp；vec，bool copyData=假）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(const std::initializer_list&lt; _Tp &gt; list)",
    "local": "（const std：：初始值设定项列表&lt_Tp&gt；（列表）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(const std::initializer_list&lt; int &gt; sizes, const std::initializer_list&lt; _Tp &gt; list)",
    "local": "（const std：：初始值设定项列表&lt；内部&gt；大小，常量std：：初始值设定项\\u list&lt_Tp&gt；（列表）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(const std::array&lt; _Tp, _Nm &gt; &amp;arr, bool copyData=false)",
    "local": "（const std：：数组&lt；“uTp，.u.Nm&gt&amp；arr，bool copyData=假）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(const Vec&lt; _Tp, n &gt; &amp;vec, bool copyData=true)",
    "local": "（常量向量&lt；（u）总磷，n&gt&amp；vec，bool copyData=真）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(const Matx&lt; _Tp, m, n &gt; &amp;mtx, bool copyData=true)",
    "local": "（施工材料&lt_Tp，m，n&gt&amp；mtx，bool copyData=真）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(const Point_&lt; _Tp &gt; &amp;pt, bool copyData=true)",
    "local": "（康斯特点音乐）Tp&gt&amp；pt，bool copyData=真）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(const Point3_&lt; _Tp &gt; &amp;pt, bool copyData=true)",
    "local": "（常量点3&lt；）Tp&gt&amp；pt，bool copyData=真）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(const MatCommaInitializer_&lt; _Tp &gt; &amp;commaInitializer)",
    "local": "（const MatCommaInitializer&lt_Tp&gt&amp；通信初始化程序）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(const cuda::GpuMat &amp;m)",
    "local": "（const cuda:：GpuMat&amp；（米）"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "(Mat &amp;&amp;m)",
    "local": "（材料和材料）&amp；米）"
  },
  {
    "origin": "(InputArray m, double scale=1) const",
    "local": "（InputArray m，双刻度=1）常量"
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": "（int行，int列，int类型）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(Size size, int type)",
    "local": "（大小，int类型）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(int ndims, const int *sz, int type)",
    "local": "（int ndims，const int*sz，int类型）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(Range rowRange, Range colRange) const",
    "local": "（Range rowRange，Range colRange）常量"
  },
  {
    "origin": "(const Rect &amp;roi) const",
    "local": "（常量直流（&amp；C）ROI）常数"
  },
  {
    "origin": "(const Range *ranges) const",
    "local": "（常量范围*范围）常量"
  },
  {
    "origin": "(const std::vector&lt; Range &gt; &amp;ranges) const",
    "local": "（const std：：向量&lt；范围&gt&amp；范围）常数"
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": "（施工材料和；米）"
  },
  {
    "origin": "(const MatExpr &amp;expr)",
    "local": "（常量MATEXPR&amp；出口）"
  },
  {
    "origin": "(const Scalar &amp;s)",
    "local": "（常量和标量）；秒）"
  },
  {
    "origin": "(Mat &amp;&amp;m)",
    "local": "（材料和材料）&amp；米）"
  },
  {
    "origin": "(size_t nelems=1)",
    "local": "（尺寸=1）"
  },
  {
    "origin": "(int i0=0)",
    "local": "（整数i0=0）"
  },
  {
    "origin": "(int i0=0) const",
    "local": "（int i0=0）常数"
  },
  {
    "origin": "(int row, int col)",
    "local": "（int行，int列）"
  },
  {
    "origin": "(int row, int col) const",
    "local": "（int行，int列）常量"
  },
  {
    "origin": "(int i0, int i1, int i2)",
    "local": "（整数i0，整数i1，整数i2）"
  },
  {
    "origin": "(int i0, int i1, int i2) const",
    "local": "（int i0，int i1，int i2）常数"
  },
  {
    "origin": "(const int *idx)",
    "local": "（const int*idx）"
  },
  {
    "origin": "(const int *idx) const",
    "local": "（const int*idx）const"
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx)",
    "local": "（常量向量&lt；内景，n&gt&amp；idx公司）"
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx) const",
    "local": "（常量向量&lt；内景，n&gt&amp；（idx）常量"
  },
  {
    "origin": "(int i0=0)",
    "local": "（整数i0=0）"
  },
  {
    "origin": "(int i0=0) const",
    "local": "（int i0=0）常数"
  },
  {
    "origin": "(int row, int col)",
    "local": "（int行，int列）"
  },
  {
    "origin": "(int row, int col) const",
    "local": "（int行，int列）常量"
  },
  {
    "origin": "(int i0, int i1, int i2)",
    "local": "（整数i0，整数i1，整数i2）"
  },
  {
    "origin": "(int i0, int i1, int i2) const",
    "local": "（int i0，int i1，int i2）常数"
  },
  {
    "origin": "(const int *idx)",
    "local": "（const int*idx）"
  },
  {
    "origin": "(const int *idx) const",
    "local": "（const int*idx）const"
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx)",
    "local": "（常量向量&lt；内景，n&gt&amp；idx公司）"
  },
  {
    "origin": "(const Vec&lt; int, n &gt; &amp;idx) const",
    "local": "（常量向量&lt；内景，n&gt&amp；（idx）常量"
  },
  {
    "origin": "(const _Tp &amp;elem)",
    "local": "（const&Tp；元素）"
  },
  {
    "origin": "(const Mat_&lt; _Tp &gt; &amp;elem)",
    "local": "（施工材料）_Tp&gt；&gt；amp；（元素）"
  },
  {
    "origin": "(const std::vector&lt; _Tp &gt; &amp;elem)",
    "local": "（const std：：向量&lt_Tp&gt；&gt；amp；（元素）"
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": "（施工材料和；米）"
  },
  {
    "origin": "(const void *elem)",
    "local": "（const void*元素）"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(size_t sz)",
    "local": "（尺寸\\u t sz）"
  },
  {
    "origin": "(size_t sz)",
    "local": "（尺寸\\u t sz）"
  },
  {
    "origin": "(int cn, int rows=0) const",
    "local": "（int cn，int rows=0）常量"
  },
  {
    "origin": "(int cn, int newndims, const int *newsz) const",
    "local": "（int cn，int newndims，const int*newsz）常量"
  },
  {
    "origin": "(int cn, const std::vector&lt; int &gt; &amp;newshape) const",
    "local": "（int-cn，const-std：：向量&lt；内部&gt&amp；新形状）常量"
  },
  {
    "origin": "(size_t sz)",
    "local": "（尺寸\\u t sz）"
  },
  {
    "origin": "(size_t sz, const Scalar &amp;s)",
    "local": "（大小\\u t sz，常量和标量）；秒）"
  },
  {
    "origin": "(int y) const",
    "local": "（整型y）常量"
  },
  {
    "origin": "(int startrow, int endrow) const",
    "local": "（int startrow，int endrow）常量"
  },
  {
    "origin": "(const Range &amp;r) const",
    "local": "（常数范围和；r） 常数"
  },
  {
    "origin": "(MatAllocator *allocator)",
    "local": "（分配程序*分配程序）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(InputArray value, InputArray mask=noArray())",
    "local": "InputArray值，InputArray掩码=noArray（））"
  },
  {
    "origin": "(int i=0) const",
    "local": "（int i=0）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int startDim, int endDim=INT_MAX) const",
    "local": "（int startDim，int endDim=int\\u MAX）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": "（int行，int列，int类型）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(Size size, int type)",
    "local": "（大小，int类型）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(int ndims, const int *sz, int type)",
    "local": "（int ndims，const int*sz，int类型）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:43为OpenCV生成，&#160；"
  }
]