[
  {
    "origin": "OpenCV: Hough Transform",
    "local": "OpenCV:霍夫变换"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "Hough Transform",
    "local": "霍夫变换"
  },
  {
    "origin": "&raquo;",
    "local": "&引用；"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Base class for circles detector algorithm. :",
    "local": "圆检测器算法的基类："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Base class for lines detector algorithm. :",
    "local": "行检测器算法的基类："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Base class for line segments detector algorithm. :",
    "local": "线段检测器算法的基类："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Creates implementation for generalized hough transform from",
    "local": "创建广义hough变换的实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Creates implementation for generalized hough transform from",
    "local": "创建广义hough变换的实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "(float dp, float minDist, int cannyThreshold, int votesThreshold, int minRadius, int maxRadius, int maxCircles=4096)",
    "local": "（float dp，float minDist，int cannyThreshold，int votesThreshold，int minRadius，int maxRadius，int maxCircles=4096）"
  },
  {
    "origin": "Creates implementation for",
    "local": "为创建实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "(float rho, float theta, int",
    "local": "（浮点ρ，浮点θ，int）"
  },
  {
    "origin": ", bool doSort=false, int maxLines=4096)",
    "local": "，bool doSort=false，int maxLines=4096）"
  },
  {
    "origin": "Creates implementation for",
    "local": "为创建实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "(float rho, float theta, int minLineLength, int maxLineGap, int maxLines=4096)",
    "local": "（浮点rho，浮点θ，int minLineLength，int maxLineGap，int maxLines=4096）"
  },
  {
    "origin": "Creates implementation for",
    "local": "为创建实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "createGeneralizedHoughBallard()",
    "local": "CreateGeneralizedHaughBallard（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::cuda::createGeneralizedHoughBallard",
    "local": "&燃气轮机；简历：：奇迹：：CreateGeneratedHaughtBallard"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Creates implementation for generalized hough transform from",
    "local": "创建广义hough变换的实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "createGeneralizedHoughGuil()",
    "local": "rcetateGneraliedHouge Gil）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::cuda::createGeneralizedHoughGuil",
    "local": "&燃气轮机；简历：：奇迹：：CreateGeneratedHoughull"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Creates implementation for generalized hough transform from",
    "local": "创建广义hough变换的实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "createHoughCirclesDetector()",
    "local": "createHoughCirclesDetector（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::cuda::createHoughCirclesDetector",
    "local": "&燃气轮机；cv:：cuda:：CreateHoughCircles检测器"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "dp",
    "local": "dp公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "minDist",
    "local": "正念者"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "cannyThreshold",
    "local": "CannyThreshold公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "votesThreshold",
    "local": "VotestThreshold公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "minRadius",
    "local": "最小半径"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "maxRadius",
    "local": "最大半径"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "maxCircles",
    "local": "最大圆"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Creates implementation for",
    "local": "为创建实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "dp",
    "local": "dp公司"
  },
  {
    "origin": "Inverse ratio of the accumulator resolution to the image resolution. For example, if dp=1 , the accumulator has the same resolution as the input image. If dp=2 , the accumulator has half as big width and height.",
    "local": "累加器分辨率与图像分辨率的反比。例如，如果dp=1，累加器的分辨率与输入图像相同。如果dp=2，则蓄能器的宽度和高度为原来的一半。"
  },
  {
    "origin": "minDist",
    "local": "正念者"
  },
  {
    "origin": "Minimum distance between the centers of the detected circles. If the parameter is too small, multiple neighbor circles may be falsely detected in addition to a true one. If it is too large, some circles may be missed.",
    "local": "检测到的圆的中心之间的最小距离。如果参数太小，除了一个真实的圆外，还可能错误地检测到多个相邻圆。如果太大，可能会漏掉一些圆。"
  },
  {
    "origin": "cannyThreshold",
    "local": "CannyThreshold公司"
  },
  {
    "origin": "The higher threshold of the two passed to Canny edge detector (the lower one is twice smaller).",
    "local": "两个阈值中较高的阈值传递给Canny边缘检测器（较低的阈值小两倍）。"
  },
  {
    "origin": "votesThreshold",
    "local": "VotestThreshold公司"
  },
  {
    "origin": "The accumulator threshold for the circle centers at the detection stage. The smaller it is, the more false circles may be detected.",
    "local": "检测阶段圆心的累加器阈值。它越小，检测到的假圆就越多。"
  },
  {
    "origin": "minRadius",
    "local": "最小半径"
  },
  {
    "origin": "Minimum circle radius.",
    "local": "最小圆半径。"
  },
  {
    "origin": "maxRadius",
    "local": "最大半径"
  },
  {
    "origin": "Maximum circle radius.",
    "local": "最大圆半径。"
  },
  {
    "origin": "maxCircles",
    "local": "最大圆"
  },
  {
    "origin": "Maximum number of output circles.",
    "local": "最大输出圈数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "createHoughLinesDetector()",
    "local": "createHoughLinesDetector（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::cuda::createHoughLinesDetector",
    "local": "&燃气轮机；cv：：cuda：：createHoughLinesDetector"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "rho",
    "local": "ρ"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "theta",
    "local": "θ"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "threshold",
    "local": "门槛"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "doSort",
    "local": "多索"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "maxLines",
    "local": "最大线"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Creates implementation for",
    "local": "为创建实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "rho",
    "local": "ρ"
  },
  {
    "origin": "Distance resolution of the accumulator in pixels.",
    "local": "累加器的距离分辨率（像素）。"
  },
  {
    "origin": "theta",
    "local": "θ"
  },
  {
    "origin": "Angle resolution of the accumulator in radians.",
    "local": "累加器的角度分辨率（弧度）。"
  },
  {
    "origin": "threshold",
    "local": "门槛"
  },
  {
    "origin": "threshold parameter. Only those lines are returned that get enough votes ( \\(&gt;\\texttt{threshold}\\) ).",
    "local": "阈值参数。只返回获得足够票数的行（\\（&gt\\texttt{threshold}\\））。"
  },
  {
    "origin": "doSort",
    "local": "多索"
  },
  {
    "origin": "Performs lines sort by votes.",
    "local": "按投票执行行排序。"
  },
  {
    "origin": "maxLines",
    "local": "最大线"
  },
  {
    "origin": "Maximum number of output lines.",
    "local": "最大输出行数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "createHoughSegmentDetector()",
    "local": "createHoughSegmentDetector（）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::cuda::createHoughSegmentDetector",
    "local": "&燃气轮机；cv：：cuda：：createHoughSegmentDetector"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "rho",
    "local": "ρ"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "theta",
    "local": "θ"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "minLineLength",
    "local": "最小长度"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "maxLineGap",
    "local": "最大线间距"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "maxLines",
    "local": "最大线"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Creates implementation for",
    "local": "为创建实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "rho",
    "local": "ρ"
  },
  {
    "origin": "Distance resolution of the accumulator in pixels.",
    "local": "累加器的距离分辨率（像素）。"
  },
  {
    "origin": "theta",
    "local": "θ"
  },
  {
    "origin": "Angle resolution of the accumulator in radians.",
    "local": "累加器的角度分辨率（弧度）。"
  },
  {
    "origin": "minLineLength",
    "local": "最小长度"
  },
  {
    "origin": "Minimum line length. Line segments shorter than that are rejected.",
    "local": "最小线长度。比该线段短的线段将被拒绝。"
  },
  {
    "origin": "maxLineGap",
    "local": "最大线间距"
  },
  {
    "origin": "Maximum allowed gap between points on the same line to link them.",
    "local": "同一直线上的点之间的最大允许间隙。"
  },
  {
    "origin": "maxLines",
    "local": "最大线"
  },
  {
    "origin": "Maximum number of output lines.",
    "local": "最大输出行数。"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by &#160;",
    "local": "于2021年4月2日星期五11:36:41为OpenCV生成，&#160；"
  }
]