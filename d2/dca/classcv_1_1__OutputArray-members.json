[
  {
    "origin": "OpenCV: Member List",
    "local": "OpenCV:成员列表"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "cv::_OutputArray Member List",
    "local": "简历：：输出阵列成员列表"
  },
  {
    "origin": "This is the complete list of members for",
    "local": "这是您的完整成员列表"
  },
  {
    "origin": ", including all inherited members.",
    "local": "，包括所有继承的成员。"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(int _flags, void *_obj)",
    "local": "（int\\u标志，void*\\u obj）"
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": "（施工材料和；米）"
  },
  {
    "origin": "(const MatExpr &amp;expr)",
    "local": "（常量MATEXPR&amp；出口）"
  },
  {
    "origin": "(const std::vector&lt; Mat &gt; &amp;vec)",
    "local": "（const std：：向量&lt；材料&gt&amp；vec公司）"
  },
  {
    "origin": "(const Mat_&lt; _Tp &gt; &amp;m)",
    "local": "（施工材料）_Tp&gt；&gt；amp；（米）"
  },
  {
    "origin": "(const std::vector&lt; _Tp &gt; &amp;vec)",
    "local": "（const std：：向量&lt；“uTp&gt&amp；vec公司）"
  },
  {
    "origin": "(const std::vector&lt; bool &gt; &amp;vec)",
    "local": "（const std：：向量&lt；布尔&gt&amp；vec公司）"
  },
  {
    "origin": "(const std::vector&lt; std::vector&lt; _Tp &gt; &gt; &amp;vec)",
    "local": "（const std：：向量&lt；标准：：向量&lt；Tp&gt&燃气轮机&amp；vec公司）"
  },
  {
    "origin": "(const std::vector&lt; std::vector&lt; bool &gt; &gt; &amp;)=delete",
    "local": "（const std：：向量&lt；标准：：向量&lt；布尔&gt&燃气轮机&amp；）=删除"
  },
  {
    "origin": "(const std::vector&lt; Mat_&lt; _Tp &gt; &gt; &amp;vec)",
    "local": "（const std：：向量&lt；材料（&L）_Tp&gt&燃气轮机&amp；vec公司）"
  },
  {
    "origin": "(const _Tp *vec, int n)",
    "local": "（常数*vec，int n）"
  },
  {
    "origin": "(const Matx&lt; _Tp, m, n &gt; &amp;matx)",
    "local": "（施工材料&lt_Tp、m、n&gt；amp；材料）"
  },
  {
    "origin": "(const double &amp;val)",
    "local": "（const double&amp；瓦尔）"
  },
  {
    "origin": "(const cuda::GpuMat &amp;d_mat)",
    "local": "（const cuda:：GpuMat&amp；d\\垫）"
  },
  {
    "origin": "(const std::vector&lt; cuda::GpuMat &gt; &amp;d_mat_array)",
    "local": "（const std：：向量&lt；cuda：：GpuMat&gt&amp；d\\材料（阵列）"
  },
  {
    "origin": "(const ogl::Buffer &amp;buf)",
    "local": "（const ogl:：缓冲区和；（单位：buf）"
  },
  {
    "origin": "(const cuda::HostMem &amp;cuda_mem)",
    "local": "（const different:：HostMem&amp；cu（内存）"
  },
  {
    "origin": "(const cudev::GpuMat_&lt; _Tp &gt; &amp;m)",
    "local": "（const cudev:：GpuMat&lt；u）Tp&gt；&gt；amp；米）"
  },
  {
    "origin": "(const UMat &amp;um)",
    "local": "（施工）；（一）"
  },
  {
    "origin": "(const std::vector&lt; UMat &gt; &amp;umv)",
    "local": "（const std：：向量&lt；UMat&gt；&gt；amp；（统一媒体）"
  },
  {
    "origin": "(const std::array&lt; _Tp, _Nm &gt; &amp;arr)",
    "local": "（const std：：数组&lt_Tp，\\u Nm&gt&amp；阿里尔）"
  },
  {
    "origin": "(const std::array&lt; Mat, _Nm &gt; &amp;arr)",
    "local": "（const std：：数组&lt；材料，Nm&gt&amp；阿里尔）"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(int _flags, void *_obj)",
    "local": "（int\\u标志，void*\\u obj）"
  },
  {
    "origin": "(Mat &amp;m)",
    "local": "（材料和材料）；米）"
  },
  {
    "origin": "(std::vector&lt; Mat &gt; &amp;vec)",
    "local": "（标准：：向量&lt；材料&gt&amp；vec公司）"
  },
  {
    "origin": "(cuda::GpuMat &amp;d_mat)",
    "local": "（cuda:：GpuMat&amp；d\\垫）"
  },
  {
    "origin": "(std::vector&lt; cuda::GpuMat &gt; &amp;d_mat)",
    "local": "（标准：：向量&lt；cuda：：GpuMat&gt；&amp；d\\垫）"
  },
  {
    "origin": "(ogl::Buffer &amp;buf)",
    "local": "（ogl：：缓冲区和；（单位：buf）"
  },
  {
    "origin": "(cuda::HostMem &amp;cuda_mem)",
    "local": "（e：：主机内存&amp；cu（内存）"
  },
  {
    "origin": "(cudev::GpuMat_&lt; _Tp &gt; &amp;m)",
    "local": "（cudev:：GpuMat&lt；（u）Tp&gt；&gt；amp；米）"
  },
  {
    "origin": "(std::vector&lt; _Tp &gt; &amp;vec)",
    "local": "（标准：：向量&lt_Tp&gt；&gt；amp；（向量）"
  },
  {
    "origin": "(std::vector&lt; bool &gt; &amp;vec)=delete",
    "local": "（标准：：向量&lt；布尔&gt&amp；vec）=删除"
  },
  {
    "origin": "(std::vector&lt; std::vector&lt; _Tp &gt; &gt; &amp;vec)",
    "local": "（标准：：向量&lt；标准：：向量&lt；Tp&gt&燃气轮机&amp；vec公司）"
  },
  {
    "origin": "(std::vector&lt; std::vector&lt; bool &gt; &gt; &amp;)=delete",
    "local": "（标准：：向量&lt；标准：：向量&lt；布尔&gt&燃气轮机&amp；）=删除"
  },
  {
    "origin": "(std::vector&lt; Mat_&lt; _Tp &gt; &gt; &amp;vec)",
    "local": "（标准：：向量&lt；材料（&L）Tp&gt&燃气轮机&amp；vec公司）"
  },
  {
    "origin": "(Mat_&lt; _Tp &gt; &amp;m)",
    "local": "（材料&lt_Tp&gt&amp；米）"
  },
  {
    "origin": "(_Tp *vec, int n)",
    "local": "（\\\\Tp*vec，int n）"
  },
  {
    "origin": "(Matx&lt; _Tp, m, n &gt; &amp;matx)",
    "local": "（材料&lt_Tp、m、n&gt；amp；材料）"
  },
  {
    "origin": "(UMat &amp;m)",
    "local": "（UMat&amp；（米）"
  },
  {
    "origin": "(std::vector&lt; UMat &gt; &amp;vec)",
    "local": "（标准：：向量&lt；UMat&gt；&gt；amp；（向量）"
  },
  {
    "origin": "(const Mat &amp;m)",
    "local": "（施工材料和；米）"
  },
  {
    "origin": "(const std::vector&lt; Mat &gt; &amp;vec)",
    "local": "（const std：：向量&lt；材料&gt&amp；vec公司）"
  },
  {
    "origin": "(const cuda::GpuMat &amp;d_mat)",
    "local": "（const cuda:：GpuMat&amp；d\\垫）"
  },
  {
    "origin": "(const std::vector&lt; cuda::GpuMat &gt; &amp;d_mat)",
    "local": "（const std：：向量&lt；cuda：：GpuMat&gt；&amp；d\\垫）"
  },
  {
    "origin": "(const ogl::Buffer &amp;buf)",
    "local": "（const ogl:：缓冲区和；（单位：buf）"
  },
  {
    "origin": "(const cuda::HostMem &amp;cuda_mem)",
    "local": "（const different:：HostMem&amp；cu（内存）"
  },
  {
    "origin": "(const cudev::GpuMat_&lt; _Tp &gt; &amp;m)",
    "local": "（const cudev:：GpuMat&lt；u）Tp&gt；&gt；amp；米）"
  },
  {
    "origin": "(const std::vector&lt; _Tp &gt; &amp;vec)",
    "local": "（const std：：向量&lt；“uTp&gt&amp；vec公司）"
  },
  {
    "origin": "(const std::vector&lt; std::vector&lt; _Tp &gt; &gt; &amp;vec)",
    "local": "（const std：：向量&lt；标准：：向量&lt；Tp&gt&燃气轮机&amp；vec公司）"
  },
  {
    "origin": "(const std::vector&lt; Mat_&lt; _Tp &gt; &gt; &amp;vec)",
    "local": "（const std：：向量&lt；材料（&L）_Tp&gt&燃气轮机&amp；vec公司）"
  },
  {
    "origin": "(const Mat_&lt; _Tp &gt; &amp;m)",
    "local": "（施工材料）_Tp&gt；&gt；amp；（米）"
  },
  {
    "origin": "(const _Tp *vec, int n)",
    "local": "（常数*vec，int n）"
  },
  {
    "origin": "(const Matx&lt; _Tp, m, n &gt; &amp;matx)",
    "local": "（施工材料&lt_Tp、m、n&gt；amp；材料）"
  },
  {
    "origin": "(const UMat &amp;m)",
    "local": "（施工）；米）"
  },
  {
    "origin": "(const std::vector&lt; UMat &gt; &amp;vec)",
    "local": "（const std：：向量&lt；UMat&gt；&gt；amp；更多）"
  },
  {
    "origin": "(std::array&lt; _Tp, _Nm &gt; &amp;arr)",
    "local": "（标准：：数组&lt_Tp，\\u Nm&gt&amp；阿里尔）"
  },
  {
    "origin": "(const std::array&lt; _Tp, _Nm &gt; &amp;arr)",
    "local": "（const std：：数组&lt_Tp，\\u Nm&gt&amp；阿里尔）"
  },
  {
    "origin": "(std::array&lt; Mat, _Nm &gt; &amp;arr)",
    "local": "（标准：：数组&lt；材料，Nm&gt&amp；阿里尔）"
  },
  {
    "origin": "(const std::array&lt; Mat, _Nm &gt; &amp;arr)",
    "local": "（const std：：数组&lt；材料，Nm&gt&amp；阿里尔）"
  },
  {
    "origin": "(const UMat &amp;u) const",
    "local": "（施工）；u） 常数"
  },
  {
    "origin": "(const Mat &amp;m) const",
    "local": "（施工材料和；（m） 常数"
  },
  {
    "origin": "(const std::vector&lt; UMat &gt; &amp;v) const",
    "local": "（const std：：向量&lt；UMat&gt&amp；v） 常数"
  },
  {
    "origin": "(const std::vector&lt; Mat &gt; &amp;v) const",
    "local": "（const std：：向量&lt；材料&gt&amp；v） 常数"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "(const _OutputArray &amp;arr) const",
    "local": "（常量输出数组和；arr）常数"
  },
  {
    "origin": "(const _OutputArray &amp;arr, const _InputArray &amp;mask) const",
    "local": "（常量输出数组和；arr，const\\u InputArray&amp；掩码）常量"
  },
  {
    "origin": "(Size sz, int type, int i=-1, bool allowTransposed=false, _OutputArray::DepthMask fixedDepthMask=static_cast&lt; _OutputArray::DepthMask &gt;(0)) const",
    "local": "（Size sz，int type，int i=-1，bool allowTransposed=false，\\u OutputArray:：DepthMask fixedDepthMask=static\\u cast&lt_输出阵列：：深度任务&gt(0）常数"
  },
  {
    "origin": "(int rows, int cols, int type, int i=-1, bool allowTransposed=false, _OutputArray::DepthMask fixedDepthMask=static_cast&lt; _OutputArray::DepthMask &gt;(0)) const",
    "local": "（int行，int列，int类型，int i=-1，bool allowTransposed=false，\\u OutputArray:：DepthMask fixedDepthMask=static\\u cast&lt_输出阵列：：深度任务&gt(0）常数"
  },
  {
    "origin": "(int dims, const int *size, int type, int i=-1, bool allowTransposed=false, _OutputArray::DepthMask fixedDepthMask=static_cast&lt; _OutputArray::DepthMask &gt;(0)) const",
    "local": "（int dims，const int*size，int type，int i=-1，bool allowTransposed=false，\\u OutputArray:：DepthMask fixedDepthMask=static\\u cast&lt_输出阵列：：深度任务&gt(0）常数"
  },
  {
    "origin": "(const _InputArray &amp;arr, int mtype) const",
    "local": "（const\\u InputArray&amp；arr，int mtype）常量"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum name",
    "local": "枚举名称"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(std::vector&lt; cuda::GpuMat &gt; &amp;gpumv) const",
    "local": "（标准：：向量&lt；cuda：：GpuMat&gt&amp；gpumv）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int idx=-1) const",
    "local": "（int idx=-1）const"
  },
  {
    "origin": "(int idx=-1) const",
    "local": "（int idx=-1）const"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "(std::vector&lt; Mat &gt; &amp;mv) const",
    "local": "（标准：：向量&lt；材料&gt&amp；mv）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int idx=-1) const",
    "local": "（int idx=-1）const"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "(std::vector&lt; UMat &gt; &amp;umv) const",
    "local": "（标准：：向量&lt；UMat&gt；&gt；amp；（umv）常数"
  },
  {
    "origin": "(int _flags, const void *_obj)",
    "local": "（int flags，const void*obj）"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "(int _flags, const void *_obj, Size _sz)",
    "local": "（int\\u标志，const void*\\u obj，Size\\u sz）"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum name",
    "local": "枚举名称"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "(UMat &amp;u) const",
    "local": "（麻省理工大学）；u） 常数"
  },
  {
    "origin": "(Mat &amp;m) const",
    "local": "（材料和材料）；m） 常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "(const std::vector&lt; _Tp &gt; &amp;vec)",
    "local": "（const std：：向量&lt；“uTp&gt&amp；vec公司）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const std::array&lt; _Tp, _Nm &gt; &amp;arr)",
    "local": "（const std：：数组&lt_Tp，\\u Nm&gt&amp；阿里尔）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(std::vector&lt; _Tp &gt; &amp;vec)",
    "local": "（标准：：向量&lt_Tp&gt；&gt；amp；（向量）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(std::array&lt; _Tp, _Nm &gt; &amp;arr)",
    "local": "（标准：：数组&lt_Tp，\\u Nm&gt&amp；阿里尔）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "(const _InputArray &amp;arr) const",
    "local": "（const inputarray&amp；（arr）const"
  },
  {
    "origin": "(const _InputArray &amp;value, const _InputArray &amp;mask=_InputArray()) const",
    "local": "（const inputarray&amp；价值，const inputarray&amp；mask=inputarray（）const"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "(int *sz, int i=-1) const",
    "local": "（int*sz，int i=-1）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "(int i=-1) const",
    "local": "（int i=-1）常数"
  },
  {
    "origin": "enum value",
    "local": "枚举值"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:42 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:42为OpenCV生成，&#160；"
  }
]