[
  {
    "origin": "OpenCV: OpenCL support",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "OpenCL support",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= OCL_VECTOR_OWN",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;platformName, void *platformID, void *context, void *deviceID)",
    "local": ""
  },
  {
    "origin": "Attaches OpenCL context to OpenCV.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;buildOptions, const",
    "local": ""
  },
  {
    "origin": "&amp;name,",
    "local": ""
  },
  {
    "origin": "_m)",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "(const int *vectorWidths,",
    "local": ""
  },
  {
    "origin": "src1,",
    "local": ""
  },
  {
    "origin": "src2=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src3=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src4=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src5=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src6=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src7=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src8=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src9=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "strat=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(void *cl_mem_buffer, size_t step, int rows, int cols, int type,",
    "local": ""
  },
  {
    "origin": "&amp;dst)",
    "local": ""
  },
  {
    "origin": "Convert OpenCL buffer to",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(void *cl_mem_image,",
    "local": ""
  },
  {
    "origin": "&amp;dst)",
    "local": ""
  },
  {
    "origin": "Convert OpenCL image2d_t to",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "const char *",
    "local": ""
  },
  {
    "origin": "(int sdepth, int ddepth, int cn, char *buf)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "*",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "const char *",
    "local": ""
  },
  {
    "origin": "(int errorCode)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;platform_info)",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;ctx, void *platform, void *context, void *device)",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "_kernel, int ddepth=-1, const char *name=NULL)",
    "local": ""
  },
  {
    "origin": "const char *",
    "local": ""
  },
  {
    "origin": "(int t)",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src1,",
    "local": ""
  },
  {
    "origin": "src2=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src3=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src4=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src5=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src6=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src7=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src8=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src9=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "strat=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src1,",
    "local": ""
  },
  {
    "origin": "src2=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src3=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src4=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src5=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src6=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src7=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src8=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "src9=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(bool flag)",
    "local": ""
  },
  {
    "origin": "const char *",
    "local": ""
  },
  {
    "origin": "(int t)",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "const char *",
    "local": ""
  },
  {
    "origin": "(int t)",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Enumeration Type Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "OclVectorStrategy",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "OCL_VECTOR_OWN",
    "local": ""
  },
  {
    "origin": "Python: cv.ocl.OCL_VECTOR_OWN",
    "local": ""
  },
  {
    "origin": "OCL_VECTOR_MAX",
    "local": ""
  },
  {
    "origin": "Python: cv.ocl.OCL_VECTOR_MAX",
    "local": ""
  },
  {
    "origin": "OCL_VECTOR_DEFAULT",
    "local": ""
  },
  {
    "origin": "Python: cv.ocl.OCL_VECTOR_DEFAULT",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "attachContext()",
    "local": ""
  },
  {
    "origin": "void cv::ocl::attachContext",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "platformName",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "void *",
    "local": ""
  },
  {
    "origin": "platformID",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "void *",
    "local": ""
  },
  {
    "origin": "context",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "void *",
    "local": ""
  },
  {
    "origin": "deviceID",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Attaches OpenCL context to OpenCV.",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "OpenCV will check if available OpenCL platform has platformName name, then assign context to OpenCV and call",
    "local": ""
  },
  {
    "origin": "function. The deviceID device will be used as target device and new command queue will be created.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "platformName",
    "local": ""
  },
  {
    "origin": "name of OpenCL platform to attach, this string is used to check if platform is available to OpenCV at runtime",
    "local": ""
  },
  {
    "origin": "platformID",
    "local": ""
  },
  {
    "origin": "ID of platform attached context was created for",
    "local": ""
  },
  {
    "origin": "context",
    "local": ""
  },
  {
    "origin": "OpenCL context to be attached to OpenCV",
    "local": ""
  },
  {
    "origin": "deviceID",
    "local": ""
  },
  {
    "origin": "ID of device, must be created from attached context",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "buildOptionsAddMatrixDescription()",
    "local": ""
  },
  {
    "origin": "void cv::ocl::buildOptionsAddMatrixDescription",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "buildOptions",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "_m",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "checkOptimalVectorWidth()",
    "local": ""
  },
  {
    "origin": "int cv::ocl::checkOptimalVectorWidth",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const int *",
    "local": ""
  },
  {
    "origin": "vectorWidths",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src2",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src3",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src4",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src5",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src6",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src7",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src8",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src9",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "strat",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "convertFromBuffer()",
    "local": ""
  },
  {
    "origin": "void cv::ocl::convertFromBuffer",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "void *",
    "local": ""
  },
  {
    "origin": "cl_mem_buffer",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "step",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "rows",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "cols",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "type",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Convert OpenCL buffer to",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "OpenCL buffer (cl_mem_buffer) should contain 2D image data, compatible with OpenCV. Memory content is not copied from",
    "local": ""
  },
  {
    "origin": "to",
    "local": ""
  },
  {
    "origin": ". Instead, buffer handle assigned to",
    "local": ""
  },
  {
    "origin": "and",
    "local": ""
  },
  {
    "origin": "is called.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "cl_mem_buffer",
    "local": ""
  },
  {
    "origin": "source clBuffer handle",
    "local": ""
  },
  {
    "origin": "step",
    "local": ""
  },
  {
    "origin": "num of bytes in single row",
    "local": ""
  },
  {
    "origin": "rows",
    "local": ""
  },
  {
    "origin": "number of rows",
    "local": ""
  },
  {
    "origin": "cols",
    "local": ""
  },
  {
    "origin": "number of cols",
    "local": ""
  },
  {
    "origin": "type",
    "local": ""
  },
  {
    "origin": "OpenCV type of image",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "destination",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "convertFromImage()",
    "local": ""
  },
  {
    "origin": "void cv::ocl::convertFromImage",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "void *",
    "local": ""
  },
  {
    "origin": "cl_mem_image",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Convert OpenCL image2d_t to",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "OpenCL",
    "local": ""
  },
  {
    "origin": "(cl_mem_image), should be compatible with OpenCV",
    "local": ""
  },
  {
    "origin": "formats. Memory content is copied from image to",
    "local": ""
  },
  {
    "origin": "with",
    "local": ""
  },
  {
    "origin": "function.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "cl_mem_image",
    "local": ""
  },
  {
    "origin": "source image2d_t handle",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "destination",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "convertTypeStr()",
    "local": ""
  },
  {
    "origin": "const char* cv::ocl::convertTypeStr",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "sdepth",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "ddepth",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "cn",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "char *",
    "local": ""
  },
  {
    "origin": "buf",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "finish()",
    "local": ""
  },
  {
    "origin": "void cv::ocl::finish",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ocl.finish(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getOpenCLAllocator()",
    "local": ""
  },
  {
    "origin": "* cv::ocl::getOpenCLAllocator",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getOpenCLErrorString()",
    "local": ""
  },
  {
    "origin": "const char* cv::ocl::getOpenCLErrorString",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "errorCode",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getPlatfomsInfo()",
    "local": ""
  },
  {
    "origin": "void cv::ocl::getPlatfomsInfo",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "platform_info",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "haveAmdBlas()",
    "local": ""
  },
  {
    "origin": "bool cv::ocl::haveAmdBlas",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ocl.haveAmdBlas(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "haveAmdFft()",
    "local": ""
  },
  {
    "origin": "bool cv::ocl::haveAmdFft",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ocl.haveAmdFft(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "haveOpenCL()",
    "local": ""
  },
  {
    "origin": "bool cv::ocl::haveOpenCL",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ocl.haveOpenCL(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "haveSVM()",
    "local": ""
  },
  {
    "origin": "bool cv::ocl::haveSVM",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "initializeContextFromHandle()",
    "local": ""
  },
  {
    "origin": "void cv::ocl::initializeContextFromHandle",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "ctx",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "void *",
    "local": ""
  },
  {
    "origin": "platform",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "void *",
    "local": ""
  },
  {
    "origin": "context",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "void *",
    "local": ""
  },
  {
    "origin": "device",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "kernelToStr()",
    "local": ""
  },
  {
    "origin": "cv::ocl::kernelToStr",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "_kernel",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "ddepth",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const char *",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "memopTypeToStr()",
    "local": ""
  },
  {
    "origin": "const char* cv::ocl::memopTypeToStr",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "t",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "predictOptimalVectorWidth()",
    "local": ""
  },
  {
    "origin": "int cv::ocl::predictOptimalVectorWidth",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src2",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src3",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src4",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src5",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src6",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src7",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src8",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src9",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "strat",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "predictOptimalVectorWidthMax()",
    "local": ""
  },
  {
    "origin": "int cv::ocl::predictOptimalVectorWidthMax",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "src1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src2",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src3",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src4",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src5",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src6",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src7",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src8",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "src9",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setUseOpenCL()",
    "local": ""
  },
  {
    "origin": "void cv::ocl::setUseOpenCL",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "flag",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ocl.setUseOpenCL(",
    "local": ""
  },
  {
    "origin": "flag",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Examples:",
    "local": ""
  },
  {
    "origin": ", and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "typeToStr()",
    "local": ""
  },
  {
    "origin": "const char* cv::ocl::typeToStr",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "t",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "useOpenCL()",
    "local": ""
  },
  {
    "origin": "bool cv::ocl::useOpenCL",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.ocl.useOpenCL(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Examples:",
    "local": ""
  },
  {
    "origin": ", and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "vecopTypeToStr()",
    "local": ""
  },
  {
    "origin": "const char* cv::ocl::vecopTypeToStr",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "t",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:40 for OpenCV by",
    "local": ""
  }
]