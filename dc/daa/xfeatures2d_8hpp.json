[
  {
    "origin": "OpenCV: opencv2/xfeatures2d.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "xfeatures2d.hpp File Reference",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Class implementing affine adaptation for key points.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing",
    "local": ""
  },
  {
    "origin": "(Boosted Efficient Binary Local Image Descriptor), described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing",
    "local": ""
  },
  {
    "origin": "(Learning Image Descriptors with Boosting), described in",
    "local": ""
  },
  {
    "origin": "and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class for computing BRIEF descriptors described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing",
    "local": ""
  },
  {
    "origin": "descriptor, described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Elliptic region around an interest point.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing the",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "Fast Retina Keypoint",
    "local": ""
  },
  {
    "origin": ") keypoint descriptor, described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing the Harris-Laplace feature detector as described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing the locally uniform comparison image descriptor, described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing the MSD (",
    "local": ""
  },
  {
    "origin": "Maximal Self-Dissimilarity",
    "local": ""
  },
  {
    "origin": ") keypoint detector, described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing PCT (position-color-texture) signature extraction as described in",
    "local": ""
  },
  {
    "origin": ". The algorithm is divided to a feature sampler and a clusterizer. Feature sampler produces samples at given set of coordinates. Clusterizer then produces clusters of these samples using k-means algorithm. Resulting set of clusters is the signature of the input image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing Signature Quadratic Form Distance (SQFD).",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "The class implements the keypoint detector introduced by",
    "local": ""
  },
  {
    "origin": ", synonym of",
    "local": ""
  },
  {
    "origin": ". :",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing the Tree Based Morse Regions (",
    "local": ""
  },
  {
    "origin": ") as described in",
    "local": ""
  },
  {
    "origin": "extended with scaled extraction ability.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Class implementing",
    "local": ""
  },
  {
    "origin": "(Oxford Visual Geometry Group) descriptor trained end to end using \"Descriptor Learning Using Convex Optimisation\" (DLCO) aparatus described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Namespaces",
    "local": ""
  },
  {
    "origin": "\"black box\" representation of the file storage associated with a file on disk.",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "(InputArray image, std::vector&lt; KeyPoint &gt; &amp;keypoints, int threshold, bool nonmaxSuppression=true,",
    "local": ""
  },
  {
    "origin": "type=FastFeatureDetector::TYPE_9_16)",
    "local": ""
  },
  {
    "origin": "Estimates cornerness for prespecified KeyPoints using the FAST algorithm.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const Size &amp;size1, const Size &amp;size2, const std::vector&lt; KeyPoint &gt; &amp;keypoints1, const std::vector&lt; KeyPoint &gt; &amp;keypoints2, const std::vector&lt; DMatch &gt; &amp;matches1to2, std::vector&lt; DMatch &gt; &amp;matchesGMS, const bool withRotation=false, const bool withScale=false, const double thresholdFactor=6.0)",
    "local": ""
  },
  {
    "origin": "GMS (Grid-based Motion Statistics) feature matching strategy described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; KeyPoint &gt; &amp;keypoints1, const std::vector&lt; KeyPoint &gt; &amp;keypoints2, const std::vector&lt; int &gt; &amp;nn1, const std::vector&lt; int &gt; &amp;nn2, std::vector&lt; DMatch &gt; &amp;matches1to2)",
    "local": ""
  },
  {
    "origin": "LOGOS (Local geometric support for high-outlier spatial verification) feature matching strategy described in",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:33 for OpenCV by &#160;",
    "local": ""
  }
]