[
  {
    "origin": "OpenCV: Image Filtering",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "Image Filtering",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Common interface for all CUDA filters :",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType,",
    "local": ""
  },
  {
    "origin": "ksize,",
    "local": ""
  },
  {
    "origin": "anchor=",
    "local": ""
  },
  {
    "origin": "(-1, -1), int borderMode=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal=",
    "local": ""
  },
  {
    "origin": "(0))",
    "local": ""
  },
  {
    "origin": "Creates a normalized 2D box filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType,",
    "local": ""
  },
  {
    "origin": "ksize,",
    "local": ""
  },
  {
    "origin": "anchor=",
    "local": ""
  },
  {
    "origin": "(-1, -1), int borderMode=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal=",
    "local": ""
  },
  {
    "origin": "(0))",
    "local": ""
  },
  {
    "origin": "Creates the maximum filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType,",
    "local": ""
  },
  {
    "origin": "ksize,",
    "local": ""
  },
  {
    "origin": "anchor=",
    "local": ""
  },
  {
    "origin": "(-1, -1), int borderMode=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal=",
    "local": ""
  },
  {
    "origin": "(0))",
    "local": ""
  },
  {
    "origin": "Creates the minimum filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType, int ksize, int anchor=-1, int borderMode=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal=",
    "local": ""
  },
  {
    "origin": "(0))",
    "local": ""
  },
  {
    "origin": "Creates a vertical 1D box filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType, int dx, int dy, int ksize, bool",
    "local": ""
  },
  {
    "origin": "=false, double scale=1, int rowBorderMode=",
    "local": ""
  },
  {
    "origin": ", int columnBorderMode=-1)",
    "local": ""
  },
  {
    "origin": "Creates a generalized Deriv operator.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType,",
    "local": ""
  },
  {
    "origin": "ksize, double sigma1, double sigma2=0, int rowBorderMode=",
    "local": ""
  },
  {
    "origin": ", int columnBorderMode=-1)",
    "local": ""
  },
  {
    "origin": "Creates a Gaussian filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType, int ksize=1, double scale=1, int borderMode=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal=",
    "local": ""
  },
  {
    "origin": "(0))",
    "local": ""
  },
  {
    "origin": "Creates a Laplacian operator.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType,",
    "local": ""
  },
  {
    "origin": "kernel,",
    "local": ""
  },
  {
    "origin": "anchor=",
    "local": ""
  },
  {
    "origin": "(-1, -1), int borderMode=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal=",
    "local": ""
  },
  {
    "origin": "(0))",
    "local": ""
  },
  {
    "origin": "Creates a non-separable linear 2D filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int op, int srcType,",
    "local": ""
  },
  {
    "origin": "kernel,",
    "local": ""
  },
  {
    "origin": "anchor=",
    "local": ""
  },
  {
    "origin": "(-1, -1), int iterations=1)",
    "local": ""
  },
  {
    "origin": "Creates a 2D morphological filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType, int ksize, int anchor=-1, int borderMode=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal=",
    "local": ""
  },
  {
    "origin": "(0))",
    "local": ""
  },
  {
    "origin": "Creates a horizontal 1D box filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType, int dx, int dy, double scale=1, int rowBorderMode=",
    "local": ""
  },
  {
    "origin": ", int columnBorderMode=-1)",
    "local": ""
  },
  {
    "origin": "Creates a vertical or horizontal Scharr operator.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType,",
    "local": ""
  },
  {
    "origin": "rowKernel,",
    "local": ""
  },
  {
    "origin": "columnKernel,",
    "local": ""
  },
  {
    "origin": "anchor=",
    "local": ""
  },
  {
    "origin": "(-1,-1), int rowBorderMode=",
    "local": ""
  },
  {
    "origin": ", int columnBorderMode=-1)",
    "local": ""
  },
  {
    "origin": "Creates a separable linear filter.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "(int srcType, int dstType, int dx, int dy, int ksize=3, double scale=1, int rowBorderMode=",
    "local": ""
  },
  {
    "origin": ", int columnBorderMode=-1)",
    "local": ""
  },
  {
    "origin": "Creates a Sobel operator.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Functions and classes described in this section are used to perform various linear or non-linear filtering operations on 2D images.",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "An example containing all basic morphology operators like erode and dilate can be found at opencv_source_code/samples/gpu/morphology.cpp",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createBoxFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createBoxFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a normalized 2D box filter.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Input image type. Only CV_8UC1, CV_8UC4 and CV_32FC1 are supported for now.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Output image type. Only the same type as src is supported for now.",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "Kernel size.",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "Anchor point. The default value Point(-1, -1) means that the anchor is at the kernel center.",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method. For details, see borderInterpolate .",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "Default border value.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createBoxMaxFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createBoxMaxFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates the maximum filter.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Input/output image type. Only CV_8UC1 and CV_8UC4 are supported.",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "Kernel size.",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "Anchor point. The default value (-1) means that the anchor is at the kernel center.",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method. For details, see borderInterpolate .",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "Default border value.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createBoxMinFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createBoxMinFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates the minimum filter.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Input/output image type. Only CV_8UC1 and CV_8UC4 are supported.",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "Kernel size.",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "Anchor point. The default value (-1) means that the anchor is at the kernel center.",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method. For details, see borderInterpolate .",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "Default border value.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createColumnSumFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createColumnSumFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a vertical 1D box filter.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Input image type. Only CV_8UC1 type is supported for now.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Output image type. Only CV_32FC1 type is supported for now.",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "Kernel size.",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "Anchor point. The default value (-1) means that the anchor is at the kernel center.",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method. For details, see borderInterpolate .",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "Default border value.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createDerivFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createDerivFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dx",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dy",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "normalize",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a generalized Deriv operator.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Source image type.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Destination array type.",
    "local": ""
  },
  {
    "origin": "dx",
    "local": ""
  },
  {
    "origin": "Derivative order in respect of x.",
    "local": ""
  },
  {
    "origin": "dy",
    "local": ""
  },
  {
    "origin": "Derivative order in respect of y.",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "Aperture size. See getDerivKernels for details.",
    "local": ""
  },
  {
    "origin": "normalize",
    "local": ""
  },
  {
    "origin": "Flag indicating whether to normalize (scale down) the filter coefficients or not. See getDerivKernels for details.",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "Optional scale factor for the computed derivative values. By default, no scaling is applied. For details, see getDerivKernels .",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the vertical direction. For details, see borderInterpolate.",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the horizontal direction.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createGaussianFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createGaussianFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "sigma1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "sigma2",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a Gaussian filter.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Source image type.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Destination array type.",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "Aperture size. See getGaussianKernel for details.",
    "local": ""
  },
  {
    "origin": "sigma1",
    "local": ""
  },
  {
    "origin": "Gaussian sigma in the horizontal direction. See getGaussianKernel for details.",
    "local": ""
  },
  {
    "origin": "sigma2",
    "local": ""
  },
  {
    "origin": "Gaussian sigma in the vertical direction. If 0, then \\(\\texttt{sigma2}\\leftarrow\\texttt{sigma1}\\) .",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the vertical direction. For details, see borderInterpolate.",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the horizontal direction.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createLaplacianFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createLaplacianFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a Laplacian operator.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Input image type. Supports CV_8U , CV_16U and CV_32F one and four channel image.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Output image type. Only the same type as src is supported for now.",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "Aperture size used to compute the second-derivative filters (see getDerivKernels). It must be positive and odd. Only ksize = 1 and ksize = 3 are supported.",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "Optional scale factor for the computed Laplacian values. By default, no scaling is applied (see getDerivKernels ).",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method. For details, see borderInterpolate .",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "Default border value.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createLinearFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createLinearFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "kernel",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a non-separable linear 2D filter.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Input image type. Supports CV_8U , CV_16U and CV_32F one and four channel image.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Output image type. Only the same type as src is supported for now.",
    "local": ""
  },
  {
    "origin": "kernel",
    "local": ""
  },
  {
    "origin": "2D array of filter coefficients.",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "Anchor point. The default value Point(-1, -1) means that the anchor is at the kernel center.",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method. For details, see borderInterpolate .",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "Default border value.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createMorphologyFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createMorphologyFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "op",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "kernel",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "iterations",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a 2D morphological filter.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "op",
    "local": ""
  },
  {
    "origin": "Type of morphological operation. The following types are possible:",
    "local": ""
  },
  {
    "origin": "MORPH_ERODE",
    "local": ""
  },
  {
    "origin": "erode",
    "local": ""
  },
  {
    "origin": "MORPH_DILATE",
    "local": ""
  },
  {
    "origin": "dilate",
    "local": ""
  },
  {
    "origin": "MORPH_OPEN",
    "local": ""
  },
  {
    "origin": "opening",
    "local": ""
  },
  {
    "origin": "MORPH_CLOSE",
    "local": ""
  },
  {
    "origin": "closing",
    "local": ""
  },
  {
    "origin": "MORPH_GRADIENT",
    "local": ""
  },
  {
    "origin": "morphological gradient",
    "local": ""
  },
  {
    "origin": "MORPH_TOPHAT",
    "local": ""
  },
  {
    "origin": "\"top hat\"",
    "local": ""
  },
  {
    "origin": "MORPH_BLACKHAT",
    "local": ""
  },
  {
    "origin": "\"black hat\"",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Input/output image type. Only CV_8UC1, CV_8UC4, CV_32FC1 and CV_32FC4 are supported.",
    "local": ""
  },
  {
    "origin": "kernel",
    "local": ""
  },
  {
    "origin": "2D 8-bit structuring element for the morphological operation.",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "Anchor position within the structuring element. Negative values mean that the anchor is at the center.",
    "local": ""
  },
  {
    "origin": "iterations",
    "local": ""
  },
  {
    "origin": "Number of times erosion and dilation to be applied.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createRowSumFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createRowSumFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a horizontal 1D box filter.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Input image type. Only CV_8UC1 type is supported for now.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Output image type. Only CV_32FC1 type is supported for now.",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "Kernel size.",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "Anchor point. The default value (-1) means that the anchor is at the kernel center.",
    "local": ""
  },
  {
    "origin": "borderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method. For details, see borderInterpolate .",
    "local": ""
  },
  {
    "origin": "borderVal",
    "local": ""
  },
  {
    "origin": "Default border value.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createScharrFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createScharrFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dx",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dy",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a vertical or horizontal Scharr operator.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Source image type.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Destination array type.",
    "local": ""
  },
  {
    "origin": "dx",
    "local": ""
  },
  {
    "origin": "Order of the derivative x.",
    "local": ""
  },
  {
    "origin": "dy",
    "local": ""
  },
  {
    "origin": "Order of the derivative y.",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "Optional scale factor for the computed derivative values. By default, no scaling is applied. See getDerivKernels for details.",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the vertical direction. For details, see borderInterpolate.",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the horizontal direction.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createSeparableLinearFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createSeparableLinearFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rowKernel",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "columnKernel",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a separable linear filter.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Source array type.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Destination array type.",
    "local": ""
  },
  {
    "origin": "rowKernel",
    "local": ""
  },
  {
    "origin": "columnKernel",
    "local": ""
  },
  {
    "origin": "anchor",
    "local": ""
  },
  {
    "origin": "Anchor position within the kernel. Negative values mean that anchor is positioned at the aperture center.",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the vertical direction For details, see borderInterpolate.",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the horizontal direction.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createSobelFilter()",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::cuda::createSobelFilter",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dx",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "dy",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates a Sobel operator.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "srcType",
    "local": ""
  },
  {
    "origin": "Source image type.",
    "local": ""
  },
  {
    "origin": "dstType",
    "local": ""
  },
  {
    "origin": "Destination array type.",
    "local": ""
  },
  {
    "origin": "dx",
    "local": ""
  },
  {
    "origin": "Derivative order in respect of x.",
    "local": ""
  },
  {
    "origin": "dy",
    "local": ""
  },
  {
    "origin": "Derivative order in respect of y.",
    "local": ""
  },
  {
    "origin": "ksize",
    "local": ""
  },
  {
    "origin": "Size of the extended Sobel kernel. Possible values are 1, 3, 5 or 7.",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "Optional scale factor for the computed derivative values. By default, no scaling is applied. For details, see getDerivKernels .",
    "local": ""
  },
  {
    "origin": "rowBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the vertical direction. For details, see borderInterpolate.",
    "local": ""
  },
  {
    "origin": "columnBorderMode",
    "local": ""
  },
  {
    "origin": "Pixel extrapolation method in the horizontal direction.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by &#160;",
    "local": ""
  }
]