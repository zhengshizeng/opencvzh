[
  {
    "origin": "OpenCV: Additional flags for video I/O API backends",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Additional flags for video I/O API backends",
    "local": ""
  },
  {
    "origin": "Hardware acceleration support",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Video Acceleration type.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "IEEE 1394 drivers",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= 31",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Modes of the IEEE 1394 controlling registers (can be: auto, manual, auto single push, absolute Latter allowed with any other mode) every feature can have only one mode turned on at a time.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "OpenNI (for Kinect)",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= 1 &lt;&lt; 31,",
    "local": ""
  },
  {
    "origin": "= 1 &lt;&lt; 30,",
    "local": ""
  },
  {
    "origin": "= 1 &lt;&lt; 29,",
    "local": ""
  },
  {
    "origin": "= CAP_OPENNI_DEPTH_GENERATOR + CAP_OPENNI_IMAGE_GENERATOR + CAP_OPENNI_IR_GENERATOR",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "OpenNI map generators.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= CAP_PROP_OPENNI_REGISTRATION,",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through OpenNI backend.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= CAP_OPENNI_IMAGE_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT,",
    "local": ""
  },
  {
    "origin": "= CAP_OPENNI_IMAGE_GENERATOR + CAP_PROP_OPENNI_OUTPUT_MODE,",
    "local": ""
  },
  {
    "origin": "= CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT,",
    "local": ""
  },
  {
    "origin": "= CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_BASELINE,",
    "local": ""
  },
  {
    "origin": "= CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_FOCAL_LENGTH,",
    "local": ""
  },
  {
    "origin": "= CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_REGISTRATION,",
    "local": ""
  },
  {
    "origin": "= CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION,",
    "local": ""
  },
  {
    "origin": "= CAP_OPENNI_IR_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "OpenNI shortcuts.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "OpenNI data given from depth generator.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Supported output modes of OpenNI image generator.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "GStreamer",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= 200 }",
    "local": ""
  },
  {
    "origin": "PvAPI, Prosilica GigE SDK",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "PVAPI.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "PVAPI: FrameStartTriggerMode.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "PVAPI: DecimationHorizontal, DecimationVertical.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "PVAPI: PixelFormat.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "XIMEA Camera API",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through XIMEA SDK backend.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "ARAVIS Camera API",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= 600 }",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through ARAVIS backend.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "AVFoundation framework for iOS",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through AVFOUNDATION backend.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Smartek Giganetix GigEVisionSDK",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through Smartek Giganetix Ethernet Vision backend.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Intel Perceptual Computing SDK",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "= 1 &lt;&lt; 29,",
    "local": ""
  },
  {
    "origin": "= 1 &lt;&lt; 28,",
    "local": ""
  },
  {
    "origin": "= 1 &lt;&lt; 27,",
    "local": ""
  },
  {
    "origin": "= CAP_INTELPERC_DEPTH_GENERATOR + CAP_INTELPERC_IMAGE_GENERATOR + CAP_INTELPERC_IR_GENERATOR",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Intel Perceptual Streams.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "gPhoto2 connection",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "gPhoto2 properties",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Images backend",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Images backend properties.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Enumeration Type Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through Smartek Giganetix Ethernet Vision backend.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GIGA_FRAME_OFFSET_X",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GIGA_FRAME_OFFSET_X",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GIGA_FRAME_OFFSET_Y",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GIGA_FRAME_OFFSET_Y",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GIGA_FRAME_WIDTH_MAX",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GIGA_FRAME_WIDTH_MAX",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GIGA_FRAME_HEIGH_MAX",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GIGA_FRAME_HEIGH_MAX",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GIGA_FRAME_SENS_WIDTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GIGA_FRAME_SENS_WIDTH",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GIGA_FRAME_SENS_HEIGH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GIGA_FRAME_SENS_HEIGH",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_INTELPERC_PROFILE_COUNT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_INTELPERC_PROFILE_COUNT",
    "local": ""
  },
  {
    "origin": "CAP_PROP_INTELPERC_PROFILE_IDX",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_INTELPERC_PROFILE_IDX",
    "local": ""
  },
  {
    "origin": "CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE",
    "local": ""
  },
  {
    "origin": "CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE",
    "local": ""
  },
  {
    "origin": "CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD",
    "local": ""
  },
  {
    "origin": "CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ",
    "local": ""
  },
  {
    "origin": "CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Intel Perceptual Streams.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_INTELPERC_DEPTH_GENERATOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_INTELPERC_DEPTH_GENERATOR",
    "local": ""
  },
  {
    "origin": "CAP_INTELPERC_IMAGE_GENERATOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_INTELPERC_IMAGE_GENERATOR",
    "local": ""
  },
  {
    "origin": "CAP_INTELPERC_IR_GENERATOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_INTELPERC_IR_GENERATOR",
    "local": ""
  },
  {
    "origin": "CAP_INTELPERC_GENERATORS_MASK",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_INTELPERC_GENERATORS_MASK",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_INTELPERC_DEPTH_MAP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_INTELPERC_DEPTH_MAP",
    "local": ""
  },
  {
    "origin": "Each pixel is a 16-bit integer. The value indicates the distance from an object to the camera's XY plane or the Cartesian depth.",
    "local": ""
  },
  {
    "origin": "CAP_INTELPERC_UVDEPTH_MAP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_INTELPERC_UVDEPTH_MAP",
    "local": ""
  },
  {
    "origin": "Each pixel contains two 32-bit floating point values in the range of 0-1, representing the mapping of depth coordinates to the color coordinates.",
    "local": ""
  },
  {
    "origin": "CAP_INTELPERC_IR_MAP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_INTELPERC_IR_MAP",
    "local": ""
  },
  {
    "origin": "Each pixel is a 16-bit integer. The value indicates the intensity of the reflected laser beam.",
    "local": ""
  },
  {
    "origin": "CAP_INTELPERC_IMAGE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_INTELPERC_IMAGE",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "gPhoto2 properties",
    "local": ""
  },
  {
    "origin": "If",
    "local": ""
  },
  {
    "origin": "is less than 0 then work on widget with that",
    "local": ""
  },
  {
    "origin": "additive inversed",
    "local": ""
  },
  {
    "origin": "camera setting ID Get IDs by using CAP_PROP_GPHOTO2_WIDGET_ENUMERATE.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "CvCaptureCAM_GPHOTO2 for more info",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GPHOTO2_PREVIEW",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GPHOTO2_PREVIEW",
    "local": ""
  },
  {
    "origin": "Capture only preview from liveview mode.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GPHOTO2_WIDGET_ENUMERATE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GPHOTO2_WIDGET_ENUMERATE",
    "local": ""
  },
  {
    "origin": "Readonly, returns (const char *).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GPHOTO2_RELOAD_CONFIG",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GPHOTO2_RELOAD_CONFIG",
    "local": ""
  },
  {
    "origin": "Trigger, only by set. Reload camera settings.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE",
    "local": ""
  },
  {
    "origin": "Reload all settings on set.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GPHOTO2_COLLECT_MSGS",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GPHOTO2_COLLECT_MSGS",
    "local": ""
  },
  {
    "origin": "Collect messages with details.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GPHOTO2_FLUSH_MSGS",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GPHOTO2_FLUSH_MSGS",
    "local": ""
  },
  {
    "origin": "Readonly, returns (const char *).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_SPEED",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_SPEED",
    "local": ""
  },
  {
    "origin": "Exposure speed. Can be readonly, depends on camera program.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_APERTURE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_APERTURE",
    "local": ""
  },
  {
    "origin": "Aperture. Can be readonly, depends on camera program.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_EXPOSUREPROGRAM",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_EXPOSUREPROGRAM",
    "local": ""
  },
  {
    "origin": "Camera exposure program.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_VIEWFINDER",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_VIEWFINDER",
    "local": ""
  },
  {
    "origin": "Enter liveview mode.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Images backend properties.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_IMAGES_BASE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_IMAGES_BASE",
    "local": ""
  },
  {
    "origin": "CAP_PROP_IMAGES_LAST",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_IMAGES_LAST",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Modes of the IEEE 1394 controlling registers (can be: auto, manual, auto single push, absolute Latter allowed with any other mode) every feature can have only one mode turned on at a time.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_DC1394_OFF",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_DC1394_OFF",
    "local": ""
  },
  {
    "origin": "turn the feature off (not controlled manually nor automatically).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_DC1394_MODE_MANUAL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_DC1394_MODE_MANUAL",
    "local": ""
  },
  {
    "origin": "set automatically when a value of the feature is set by the user.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_DC1394_MODE_AUTO",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_DC1394_MODE_AUTO",
    "local": ""
  },
  {
    "origin": "CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO",
    "local": ""
  },
  {
    "origin": "CAP_PROP_DC1394_MAX",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_DC1394_MAX",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "OpenNI map generators.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_DEPTH_GENERATOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_DEPTH_GENERATOR",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_IMAGE_GENERATOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_IMAGE_GENERATOR",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_IR_GENERATOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_IR_GENERATOR",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_GENERATORS_MASK",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_GENERATORS_MASK",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through OpenNI backend.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_OUTPUT_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_OUTPUT_MODE",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_FRAME_MAX_DEPTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_FRAME_MAX_DEPTH",
    "local": ""
  },
  {
    "origin": "In mm.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_BASELINE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_BASELINE",
    "local": ""
  },
  {
    "origin": "In mm.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_FOCAL_LENGTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_FOCAL_LENGTH",
    "local": ""
  },
  {
    "origin": "In pixels.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_REGISTRATION",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_REGISTRATION",
    "local": ""
  },
  {
    "origin": "Flag that synchronizes the remapping depth map to image map by changing depth generator's view point (if the flag is \"on\") or sets this view point to its normal one (if the flag is \"off\").",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_REGISTRATION_ON",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_REGISTRATION_ON",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_APPROX_FRAME_SYNC",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_APPROX_FRAME_SYNC",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_MAX_BUFFER_SIZE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_MAX_BUFFER_SIZE",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_CIRCLE_BUFFER",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_CIRCLE_BUFFER",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_MAX_TIME_DURATION",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_MAX_TIME_DURATION",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI_GENERATOR_PRESENT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI_GENERATOR_PRESENT",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI2_SYNC",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI2_SYNC",
    "local": ""
  },
  {
    "origin": "CAP_PROP_OPENNI2_MIRROR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_OPENNI2_MIRROR",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "OpenNI shortcuts.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_IMAGE_GENERATOR_PRESENT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_IMAGE_GENERATOR_PRESENT",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_DEPTH_GENERATOR_PRESENT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_DEPTH_GENERATOR_PRESENT",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_DEPTH_GENERATOR_BASELINE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_DEPTH_GENERATOR_BASELINE",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_IR_GENERATOR_PRESENT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_IR_GENERATOR_PRESENT",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "OpenNI data given from depth generator.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_DEPTH_MAP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_DEPTH_MAP",
    "local": ""
  },
  {
    "origin": "Depth values in mm (CV_16UC1)",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_POINT_CLOUD_MAP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_POINT_CLOUD_MAP",
    "local": ""
  },
  {
    "origin": "XYZ in meters (CV_32FC3)",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_DISPARITY_MAP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_DISPARITY_MAP",
    "local": ""
  },
  {
    "origin": "Disparity in pixels (CV_8UC1)",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_DISPARITY_MAP_32F",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_DISPARITY_MAP_32F",
    "local": ""
  },
  {
    "origin": "Disparity in pixels (CV_32FC1)",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_VALID_DEPTH_MASK",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_VALID_DEPTH_MASK",
    "local": ""
  },
  {
    "origin": "CV_8UC1.",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_BGR_IMAGE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_BGR_IMAGE",
    "local": ""
  },
  {
    "origin": "Data given from RGB image generator.",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_GRAY_IMAGE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_GRAY_IMAGE",
    "local": ""
  },
  {
    "origin": "Data given from RGB image generator.",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_IR_IMAGE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_IR_IMAGE",
    "local": ""
  },
  {
    "origin": "Data given from IR image generator.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Supported output modes of OpenNI image generator.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_VGA_30HZ",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_VGA_30HZ",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_SXGA_15HZ",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_SXGA_15HZ",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_SXGA_30HZ",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_SXGA_30HZ",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_QVGA_30HZ",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_QVGA_30HZ",
    "local": ""
  },
  {
    "origin": "CAP_OPENNI_QVGA_60HZ",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_OPENNI_QVGA_60HZ",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_GSTREAMER_QUEUE_LENGTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_GSTREAMER_QUEUE_LENGTH",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "PVAPI.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_PVAPI_MULTICASTIP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_PVAPI_MULTICASTIP",
    "local": ""
  },
  {
    "origin": "IP for enable multicast master mode. 0 for disable multicast.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE",
    "local": ""
  },
  {
    "origin": "FrameStartTriggerMode: Determines how a frame is initiated.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_PVAPI_DECIMATIONHORIZONTAL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_PVAPI_DECIMATIONHORIZONTAL",
    "local": ""
  },
  {
    "origin": "Horizontal sub-sampling of the image.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_PVAPI_DECIMATIONVERTICAL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_PVAPI_DECIMATIONVERTICAL",
    "local": ""
  },
  {
    "origin": "Vertical sub-sampling of the image.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_PVAPI_BINNINGX",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_PVAPI_BINNINGX",
    "local": ""
  },
  {
    "origin": "Horizontal binning factor.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_PVAPI_BINNINGY",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_PVAPI_BINNINGY",
    "local": ""
  },
  {
    "origin": "Vertical binning factor.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_PVAPI_PIXELFORMAT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_PVAPI_PIXELFORMAT",
    "local": ""
  },
  {
    "origin": "Pixel format.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "PVAPI: FrameStartTriggerMode.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_FSTRIGMODE_FREERUN",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_FSTRIGMODE_FREERUN",
    "local": ""
  },
  {
    "origin": "Freerun.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_FSTRIGMODE_SYNCIN1",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_FSTRIGMODE_SYNCIN1",
    "local": ""
  },
  {
    "origin": "SyncIn1.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_FSTRIGMODE_SYNCIN2",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_FSTRIGMODE_SYNCIN2",
    "local": ""
  },
  {
    "origin": "SyncIn2.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_FSTRIGMODE_FIXEDRATE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_FSTRIGMODE_FIXEDRATE",
    "local": ""
  },
  {
    "origin": "FixedRate.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_FSTRIGMODE_SOFTWARE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_FSTRIGMODE_SOFTWARE",
    "local": ""
  },
  {
    "origin": "Software.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "PVAPI: DecimationHorizontal, DecimationVertical.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_DECIMATION_OFF",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_DECIMATION_OFF",
    "local": ""
  },
  {
    "origin": "Off.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_DECIMATION_2OUTOF4",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_DECIMATION_2OUTOF4",
    "local": ""
  },
  {
    "origin": "2 out of 4 decimation",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_DECIMATION_2OUTOF8",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_DECIMATION_2OUTOF8",
    "local": ""
  },
  {
    "origin": "2 out of 8 decimation",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_DECIMATION_2OUTOF16",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_DECIMATION_2OUTOF16",
    "local": ""
  },
  {
    "origin": "2 out of 16 decimation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "PVAPI: PixelFormat.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_PIXELFORMAT_MONO8",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_PIXELFORMAT_MONO8",
    "local": ""
  },
  {
    "origin": "Mono8.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_PIXELFORMAT_MONO16",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_PIXELFORMAT_MONO16",
    "local": ""
  },
  {
    "origin": "Mono16.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_PIXELFORMAT_BAYER8",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_PIXELFORMAT_BAYER8",
    "local": ""
  },
  {
    "origin": "Bayer8.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_PIXELFORMAT_BAYER16",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_PIXELFORMAT_BAYER16",
    "local": ""
  },
  {
    "origin": "Bayer16.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_PIXELFORMAT_RGB24",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_PIXELFORMAT_RGB24",
    "local": ""
  },
  {
    "origin": "Rgb24.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_PIXELFORMAT_BGR24",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_PIXELFORMAT_BGR24",
    "local": ""
  },
  {
    "origin": "Bgr24.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_PIXELFORMAT_RGBA32",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_PIXELFORMAT_RGBA32",
    "local": ""
  },
  {
    "origin": "Rgba32.",
    "local": ""
  },
  {
    "origin": "CAP_PVAPI_PIXELFORMAT_BGRA32",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PVAPI_PIXELFORMAT_BGRA32",
    "local": ""
  },
  {
    "origin": "Bgra32.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through XIMEA SDK backend.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DOWNSAMPLING",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DOWNSAMPLING",
    "local": ""
  },
  {
    "origin": "Change image resolution by binning or skipping.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DATA_FORMAT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DATA_FORMAT",
    "local": ""
  },
  {
    "origin": "Output data format.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_OFFSET_X",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_OFFSET_X",
    "local": ""
  },
  {
    "origin": "Horizontal offset from the origin to the area of interest (in pixels).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_OFFSET_Y",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_OFFSET_Y",
    "local": ""
  },
  {
    "origin": "Vertical offset from the origin to the area of interest (in pixels).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TRG_SOURCE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TRG_SOURCE",
    "local": ""
  },
  {
    "origin": "Defines source of trigger.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TRG_SOFTWARE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TRG_SOFTWARE",
    "local": ""
  },
  {
    "origin": "Generates an internal trigger. PRM_TRG_SOURCE must be set to TRG_SOFTWARE.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_GPI_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_GPI_SELECTOR",
    "local": ""
  },
  {
    "origin": "Selects general purpose input.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_GPI_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_GPI_MODE",
    "local": ""
  },
  {
    "origin": "Set general purpose input mode.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_GPI_LEVEL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_GPI_LEVEL",
    "local": ""
  },
  {
    "origin": "Get general purpose level.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_GPO_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_GPO_SELECTOR",
    "local": ""
  },
  {
    "origin": "Selects general purpose output.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_GPO_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_GPO_MODE",
    "local": ""
  },
  {
    "origin": "Set general purpose output mode.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LED_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LED_SELECTOR",
    "local": ""
  },
  {
    "origin": "Selects camera signalling LED.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LED_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LED_MODE",
    "local": ""
  },
  {
    "origin": "Define camera signalling LED functionality.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_MANUAL_WB",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_MANUAL_WB",
    "local": ""
  },
  {
    "origin": "Calculates White Balance(must be called during acquisition).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AUTO_WB",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AUTO_WB",
    "local": ""
  },
  {
    "origin": "Automatic white balance.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AEAG",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AEAG",
    "local": ""
  },
  {
    "origin": "Automatic exposure/gain.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_EXP_PRIORITY",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_EXP_PRIORITY",
    "local": ""
  },
  {
    "origin": "Exposure priority (0.5 - exposure 50%, gain 50%).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AE_MAX_LIMIT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AE_MAX_LIMIT",
    "local": ""
  },
  {
    "origin": "Maximum limit of exposure in AEAG procedure.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AG_MAX_LIMIT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AG_MAX_LIMIT",
    "local": ""
  },
  {
    "origin": "Maximum limit of gain in AEAG procedure.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AEAG_LEVEL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AEAG_LEVEL",
    "local": ""
  },
  {
    "origin": "Average intensity of output signal AEAG should achieve(in %).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TIMEOUT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TIMEOUT",
    "local": ""
  },
  {
    "origin": "Image capture timeout in milliseconds.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_EXPOSURE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_EXPOSURE",
    "local": ""
  },
  {
    "origin": "Exposure time in microseconds.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_EXPOSURE_BURST_COUNT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_EXPOSURE_BURST_COUNT",
    "local": ""
  },
  {
    "origin": "Sets the number of times of exposure in one frame.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_GAIN_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_GAIN_SELECTOR",
    "local": ""
  },
  {
    "origin": "Gain selector for parameter Gain allows to select different type of gains.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_GAIN",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_GAIN",
    "local": ""
  },
  {
    "origin": "Gain in dB.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DOWNSAMPLING_TYPE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DOWNSAMPLING_TYPE",
    "local": ""
  },
  {
    "origin": "Change image downsampling type.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_BINNING_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_BINNING_SELECTOR",
    "local": ""
  },
  {
    "origin": "Binning engine selector.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_BINNING_VERTICAL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_BINNING_VERTICAL",
    "local": ""
  },
  {
    "origin": "Vertical Binning - number of vertical photo-sensitive cells to combine together.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_BINNING_HORIZONTAL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_BINNING_HORIZONTAL",
    "local": ""
  },
  {
    "origin": "Horizontal Binning - number of horizontal photo-sensitive cells to combine together.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_BINNING_PATTERN",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_BINNING_PATTERN",
    "local": ""
  },
  {
    "origin": "Binning pattern type.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DECIMATION_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DECIMATION_SELECTOR",
    "local": ""
  },
  {
    "origin": "Decimation engine selector.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DECIMATION_VERTICAL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DECIMATION_VERTICAL",
    "local": ""
  },
  {
    "origin": "Vertical Decimation - vertical sub-sampling of the image - reduces the vertical resolution of the image by the specified vertical decimation factor.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DECIMATION_HORIZONTAL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DECIMATION_HORIZONTAL",
    "local": ""
  },
  {
    "origin": "Horizontal Decimation - horizontal sub-sampling of the image - reduces the horizontal resolution of the image by the specified vertical decimation factor.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DECIMATION_PATTERN",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DECIMATION_PATTERN",
    "local": ""
  },
  {
    "origin": "Decimation pattern type.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR",
    "local": ""
  },
  {
    "origin": "Selects which test pattern generator is controlled by the TestPattern feature.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TEST_PATTERN",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TEST_PATTERN",
    "local": ""
  },
  {
    "origin": "Selects which test pattern type is generated by the selected generator.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_IMAGE_DATA_FORMAT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_IMAGE_DATA_FORMAT",
    "local": ""
  },
  {
    "origin": "Output data format.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SHUTTER_TYPE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SHUTTER_TYPE",
    "local": ""
  },
  {
    "origin": "Change sensor shutter type(CMOS sensor).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SENSOR_TAPS",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SENSOR_TAPS",
    "local": ""
  },
  {
    "origin": "Number of taps.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AEAG_ROI_OFFSET_X",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AEAG_ROI_OFFSET_X",
    "local": ""
  },
  {
    "origin": "Automatic exposure/gain ROI offset X.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AEAG_ROI_OFFSET_Y",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AEAG_ROI_OFFSET_Y",
    "local": ""
  },
  {
    "origin": "Automatic exposure/gain ROI offset Y.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AEAG_ROI_WIDTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AEAG_ROI_WIDTH",
    "local": ""
  },
  {
    "origin": "Automatic exposure/gain ROI Width.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AEAG_ROI_HEIGHT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AEAG_ROI_HEIGHT",
    "local": ""
  },
  {
    "origin": "Automatic exposure/gain ROI Height.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_BPC",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_BPC",
    "local": ""
  },
  {
    "origin": "Correction of bad pixels.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_WB_KR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_WB_KR",
    "local": ""
  },
  {
    "origin": "White balance red coefficient.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_WB_KG",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_WB_KG",
    "local": ""
  },
  {
    "origin": "White balance green coefficient.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_WB_KB",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_WB_KB",
    "local": ""
  },
  {
    "origin": "White balance blue coefficient.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_WIDTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_WIDTH",
    "local": ""
  },
  {
    "origin": "Width of the Image provided by the device (in pixels).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_HEIGHT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_HEIGHT",
    "local": ""
  },
  {
    "origin": "Height of the Image provided by the device (in pixels).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_REGION_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_REGION_SELECTOR",
    "local": ""
  },
  {
    "origin": "Selects Region in Multiple ROI which parameters are set by width, height, ... ,region mode.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_REGION_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_REGION_MODE",
    "local": ""
  },
  {
    "origin": "Activates/deactivates Region selected by Region Selector.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LIMIT_BANDWIDTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LIMIT_BANDWIDTH",
    "local": ""
  },
  {
    "origin": "Set/get bandwidth(datarate)(in Megabits).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH",
    "local": ""
  },
  {
    "origin": "Sensor output data bit depth.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH",
    "local": ""
  },
  {
    "origin": "Device output data bit depth.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH",
    "local": ""
  },
  {
    "origin": "bitdepth of data returned by function xiGetImage.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_OUTPUT_DATA_PACKING",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_OUTPUT_DATA_PACKING",
    "local": ""
  },
  {
    "origin": "Device output data packing (or grouping) enabled. Packing could be enabled if output_data_bit_depth &gt; 8 and packing capability is available.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE",
    "local": ""
  },
  {
    "origin": "Data packing type. Some cameras supports only specific packing type.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_IS_COOLED",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_IS_COOLED",
    "local": ""
  },
  {
    "origin": "Returns 1 for cameras that support cooling.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_COOLING",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_COOLING",
    "local": ""
  },
  {
    "origin": "Start camera cooling.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TARGET_TEMP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TARGET_TEMP",
    "local": ""
  },
  {
    "origin": "Set sensor target temperature for cooling.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CHIP_TEMP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CHIP_TEMP",
    "local": ""
  },
  {
    "origin": "Camera sensor temperature.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_HOUS_TEMP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_HOUS_TEMP",
    "local": ""
  },
  {
    "origin": "Camera housing temperature.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_HOUS_BACK_SIDE_TEMP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_HOUS_BACK_SIDE_TEMP",
    "local": ""
  },
  {
    "origin": "Camera housing back side temperature.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SENSOR_BOARD_TEMP",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SENSOR_BOARD_TEMP",
    "local": ""
  },
  {
    "origin": "Camera sensor board temperature.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CMS",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CMS",
    "local": ""
  },
  {
    "origin": "Mode of color management system.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_APPLY_CMS",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_APPLY_CMS",
    "local": ""
  },
  {
    "origin": "Enable applying of CMS profiles to xiGetImage (see XI_PRM_INPUT_CMS_PROFILE, XI_PRM_OUTPUT_CMS_PROFILE).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_IMAGE_IS_COLOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_IMAGE_IS_COLOR",
    "local": ""
  },
  {
    "origin": "Returns 1 for color cameras.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_COLOR_FILTER_ARRAY",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_COLOR_FILTER_ARRAY",
    "local": ""
  },
  {
    "origin": "Returns color filter array type of RAW data.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_GAMMAY",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_GAMMAY",
    "local": ""
  },
  {
    "origin": "Luminosity gamma.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_GAMMAC",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_GAMMAC",
    "local": ""
  },
  {
    "origin": "Chromaticity gamma.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SHARPNESS",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SHARPNESS",
    "local": ""
  },
  {
    "origin": "Sharpness Strength.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_00",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_00",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [0][0].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_01",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_01",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [0][1].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_02",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_02",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [0][2].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_03",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_03",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [0][3].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_10",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_10",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [1][0].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_11",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_11",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [1][1].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_12",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_12",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [1][2].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_13",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_13",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [1][3].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_20",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_20",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [2][0].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_21",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_21",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [2][1].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_22",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_22",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [2][2].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_23",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_23",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [2][3].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_30",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_30",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [3][0].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_31",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_31",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [3][1].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_32",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_32",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [3][2].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_CC_MATRIX_33",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_CC_MATRIX_33",
    "local": ""
  },
  {
    "origin": "Color Correction Matrix element [3][3].",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DEFAULT_CC_MATRIX",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DEFAULT_CC_MATRIX",
    "local": ""
  },
  {
    "origin": "Set default Color Correction Matrix.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TRG_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TRG_SELECTOR",
    "local": ""
  },
  {
    "origin": "Selects the type of trigger.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_ACQ_FRAME_BURST_COUNT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_ACQ_FRAME_BURST_COUNT",
    "local": ""
  },
  {
    "origin": "Sets number of frames acquired by burst. This burst is used only if trigger is set to FrameBurstStart.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DEBOUNCE_EN",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DEBOUNCE_EN",
    "local": ""
  },
  {
    "origin": "Enable/Disable debounce to selected GPI.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DEBOUNCE_T0",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DEBOUNCE_T0",
    "local": ""
  },
  {
    "origin": "Debounce time (x * 10us).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DEBOUNCE_T1",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DEBOUNCE_T1",
    "local": ""
  },
  {
    "origin": "Debounce time (x * 10us).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DEBOUNCE_POL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DEBOUNCE_POL",
    "local": ""
  },
  {
    "origin": "Debounce polarity (pol = 1 t0 - falling edge, t1 - rising edge).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LENS_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LENS_MODE",
    "local": ""
  },
  {
    "origin": "Status of lens control interface. This shall be set to XI_ON before any Lens operations.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LENS_APERTURE_VALUE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LENS_APERTURE_VALUE",
    "local": ""
  },
  {
    "origin": "Current lens aperture value in stops. Examples: 2.8, 4, 5.6, 8, 11.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE",
    "local": ""
  },
  {
    "origin": "Lens current focus movement value to be used by XI_PRM_LENS_FOCUS_MOVE in motor steps.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LENS_FOCUS_MOVE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LENS_FOCUS_MOVE",
    "local": ""
  },
  {
    "origin": "Moves lens focus motor by steps set in XI_PRM_LENS_FOCUS_MOVEMENT_VALUE.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LENS_FOCUS_DISTANCE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LENS_FOCUS_DISTANCE",
    "local": ""
  },
  {
    "origin": "Lens focus distance in cm.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LENS_FOCAL_LENGTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LENS_FOCAL_LENGTH",
    "local": ""
  },
  {
    "origin": "Lens focal distance in mm.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LENS_FEATURE_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LENS_FEATURE_SELECTOR",
    "local": ""
  },
  {
    "origin": "Selects the current feature which is accessible by XI_PRM_LENS_FEATURE.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LENS_FEATURE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LENS_FEATURE",
    "local": ""
  },
  {
    "origin": "Allows access to lens feature value currently selected by XI_PRM_LENS_FEATURE_SELECTOR.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DEVICE_MODEL_ID",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DEVICE_MODEL_ID",
    "local": ""
  },
  {
    "origin": "Returns device model id.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DEVICE_SN",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DEVICE_SN",
    "local": ""
  },
  {
    "origin": "Returns device serial number.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA",
    "local": ""
  },
  {
    "origin": "The alpha channel of RGB32 output image format.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_IMAGE_PAYLOAD_SIZE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_IMAGE_PAYLOAD_SIZE",
    "local": ""
  },
  {
    "origin": "Buffer size in bytes sufficient for output image returned by xiGetImage.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT",
    "local": ""
  },
  {
    "origin": "Current format of pixels on transport layer.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ",
    "local": ""
  },
  {
    "origin": "Sensor clock frequency in Hz.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX",
    "local": ""
  },
  {
    "origin": "Sensor clock frequency index. Sensor with selected frequencies have possibility to set the frequency only by this index.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT",
    "local": ""
  },
  {
    "origin": "Number of output channels from sensor used for data transfer.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_FRAMERATE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_FRAMERATE",
    "local": ""
  },
  {
    "origin": "Define framerate in Hz.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_COUNTER_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_COUNTER_SELECTOR",
    "local": ""
  },
  {
    "origin": "Select counter.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_COUNTER_VALUE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_COUNTER_VALUE",
    "local": ""
  },
  {
    "origin": "Counter status.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_ACQ_TIMING_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_ACQ_TIMING_MODE",
    "local": ""
  },
  {
    "origin": "Type of sensor frames timing.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AVAILABLE_BANDWIDTH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AVAILABLE_BANDWIDTH",
    "local": ""
  },
  {
    "origin": "Calculate and returns available interface bandwidth(int Megabits).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_BUFFER_POLICY",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_BUFFER_POLICY",
    "local": ""
  },
  {
    "origin": "Data move policy.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LUT_EN",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LUT_EN",
    "local": ""
  },
  {
    "origin": "Activates LUT.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LUT_INDEX",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LUT_INDEX",
    "local": ""
  },
  {
    "origin": "Control the index (offset) of the coefficient to access in the LUT.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_LUT_VALUE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_LUT_VALUE",
    "local": ""
  },
  {
    "origin": "Value at entry LUTIndex of the LUT.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TRG_DELAY",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TRG_DELAY",
    "local": ""
  },
  {
    "origin": "Specifies the delay in microseconds (us) to apply after the trigger reception before activating it.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TS_RST_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TS_RST_MODE",
    "local": ""
  },
  {
    "origin": "Defines how time stamp reset engine will be armed.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_TS_RST_SOURCE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_TS_RST_SOURCE",
    "local": ""
  },
  {
    "origin": "Defines which source will be used for timestamp reset. Writing this parameter will trigger settings of engine (arming).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_IS_DEVICE_EXIST",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_IS_DEVICE_EXIST",
    "local": ""
  },
  {
    "origin": "Returns 1 if camera connected and works properly.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_ACQ_BUFFER_SIZE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_ACQ_BUFFER_SIZE",
    "local": ""
  },
  {
    "origin": "Acquisition buffer size in buffer_size_unit. Default bytes.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT",
    "local": ""
  },
  {
    "origin": "Acquisition buffer size unit in bytes. Default 1. E.g. Value 1024 means that buffer_size is in KiBytes.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE",
    "local": ""
  },
  {
    "origin": "Acquisition transport buffer size in bytes.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_BUFFERS_QUEUE_SIZE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_BUFFERS_QUEUE_SIZE",
    "local": ""
  },
  {
    "origin": "Queue of field/frame buffers.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT",
    "local": ""
  },
  {
    "origin": "Number of buffers to commit to low level.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_RECENT_FRAME",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_RECENT_FRAME",
    "local": ""
  },
  {
    "origin": "GetImage returns most recent frame.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DEVICE_RESET",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DEVICE_RESET",
    "local": ""
  },
  {
    "origin": "Resets the camera to default state.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_COLUMN_FPN_CORRECTION",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_COLUMN_FPN_CORRECTION",
    "local": ""
  },
  {
    "origin": "Correction of column FPN.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_ROW_FPN_CORRECTION",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_ROW_FPN_CORRECTION",
    "local": ""
  },
  {
    "origin": "Correction of row FPN.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SENSOR_MODE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SENSOR_MODE",
    "local": ""
  },
  {
    "origin": "Current sensor mode. Allows to select sensor mode by one integer. Setting of this parameter affects: image dimensions and downsampling.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_HDR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_HDR",
    "local": ""
  },
  {
    "origin": "Enable High Dynamic",
    "local": ""
  },
  {
    "origin": "feature.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_HDR_KNEEPOINT_COUNT",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_HDR_KNEEPOINT_COUNT",
    "local": ""
  },
  {
    "origin": "The number of kneepoints in the PWLR.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_HDR_T1",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_HDR_T1",
    "local": ""
  },
  {
    "origin": "Position of first kneepoint(in % of XI_PRM_EXPOSURE).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_HDR_T2",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_HDR_T2",
    "local": ""
  },
  {
    "origin": "Position of second kneepoint (in % of XI_PRM_EXPOSURE).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_KNEEPOINT1",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_KNEEPOINT1",
    "local": ""
  },
  {
    "origin": "Value of first kneepoint (% of sensor saturation).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_KNEEPOINT2",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_KNEEPOINT2",
    "local": ""
  },
  {
    "origin": "Value of second kneepoint (% of sensor saturation).",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_IMAGE_BLACK_LEVEL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_IMAGE_BLACK_LEVEL",
    "local": ""
  },
  {
    "origin": "Last image black level counts. Can be used for Offline processing to recall it.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_HW_REVISION",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_HW_REVISION",
    "local": ""
  },
  {
    "origin": "Returns hardware revision number.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_DEBUG_LEVEL",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_DEBUG_LEVEL",
    "local": ""
  },
  {
    "origin": "Set debug level.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION",
    "local": ""
  },
  {
    "origin": "Automatic bandwidth calculation.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_FFS_FILE_ID",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_FFS_FILE_ID",
    "local": ""
  },
  {
    "origin": "File number.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_FFS_FILE_SIZE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_FFS_FILE_SIZE",
    "local": ""
  },
  {
    "origin": "Size of file.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_FREE_FFS_SIZE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_FREE_FFS_SIZE",
    "local": ""
  },
  {
    "origin": "Size of free camera FFS.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_USED_FFS_SIZE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_USED_FFS_SIZE",
    "local": ""
  },
  {
    "origin": "Size of used camera FFS.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_FFS_ACCESS_KEY",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_FFS_ACCESS_KEY",
    "local": ""
  },
  {
    "origin": "Setting of key enables file operations on some cameras.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SENSOR_FEATURE_SELECTOR",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SENSOR_FEATURE_SELECTOR",
    "local": ""
  },
  {
    "origin": "Selects the current feature which is accessible by XI_PRM_SENSOR_FEATURE_VALUE.",
    "local": ""
  },
  {
    "origin": "CAP_PROP_XI_SENSOR_FEATURE_VALUE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_XI_SENSOR_FEATURE_VALUE",
    "local": ""
  },
  {
    "origin": "Allows access to sensor feature value currently selected by XI_PRM_SENSOR_FEATURE_SELECTOR.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through ARAVIS backend.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_ARAVIS_AUTOTRIGGER",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_ARAVIS_AUTOTRIGGER",
    "local": ""
  },
  {
    "origin": "Automatically trigger frame capture if camera is configured with software trigger.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Properties of cameras available through AVFOUNDATION backend.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "CAP_PROP_IOS_DEVICE_FOCUS",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_IOS_DEVICE_FOCUS",
    "local": ""
  },
  {
    "origin": "CAP_PROP_IOS_DEVICE_EXPOSURE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_IOS_DEVICE_EXPOSURE",
    "local": ""
  },
  {
    "origin": "CAP_PROP_IOS_DEVICE_FLASH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_IOS_DEVICE_FLASH",
    "local": ""
  },
  {
    "origin": "CAP_PROP_IOS_DEVICE_WHITEBALANCE",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_IOS_DEVICE_WHITEBALANCE",
    "local": ""
  },
  {
    "origin": "CAP_PROP_IOS_DEVICE_TORCH",
    "local": ""
  },
  {
    "origin": "Python: cv.CAP_PROP_IOS_DEVICE_TORCH",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "VideoAccelerationType",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "Video Acceleration type.",
    "local": ""
  },
  {
    "origin": "Used as value in",
    "local": ""
  },
  {
    "origin": "and",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "In case of FFmpeg backend, it translated to enum AVHWDeviceType (",
    "local": ""
  },
  {
    "origin": "https://github.com/FFmpeg/FFmpeg/blob/master/libavutil/hwcontext.h",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "VIDEO_ACCELERATION_NONE",
    "local": ""
  },
  {
    "origin": "Python: cv.VIDEO_ACCELERATION_NONE",
    "local": ""
  },
  {
    "origin": "Do not require any specific H/W acceleration, prefer software processing. Reading of this value means that special H/W accelerated handling is not added or not detected by OpenCV.",
    "local": ""
  },
  {
    "origin": "VIDEO_ACCELERATION_ANY",
    "local": ""
  },
  {
    "origin": "Python: cv.VIDEO_ACCELERATION_ANY",
    "local": ""
  },
  {
    "origin": "Prefer to use H/W acceleration. If no one supported, then fallback to software processing.",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "H/W acceleration may require special configuration of used environment.",
    "local": ""
  },
  {
    "origin": "Results in encoding scenario may differ between software and hardware accelerated encoders.",
    "local": ""
  },
  {
    "origin": "VIDEO_ACCELERATION_D3D11",
    "local": ""
  },
  {
    "origin": "Python: cv.VIDEO_ACCELERATION_D3D11",
    "local": ""
  },
  {
    "origin": "VIDEO_ACCELERATION_VAAPI",
    "local": ""
  },
  {
    "origin": "Python: cv.VIDEO_ACCELERATION_VAAPI",
    "local": ""
  },
  {
    "origin": "VAAPI.",
    "local": ""
  },
  {
    "origin": "VIDEO_ACCELERATION_MFX",
    "local": ""
  },
  {
    "origin": "Python: cv.VIDEO_ACCELERATION_MFX",
    "local": ""
  },
  {
    "origin": "libmfx (Intel MediaSDK/oneVPL)",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:40 for OpenCV by",
    "local": ""
  }
]