[
  {
    "origin": "OpenCV: Eigen support",
    "local": "OpenCV:Eigen支持"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "Eigen support",
    "local": "特征支撑"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "template&lt;typename _Tp , int _layout&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u layout&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, Eigen::Tensor&lt; _Tp, 3, _layout &gt; &amp;dst)",
    "local": "&amp；src，Eigen：：张量&lt_Tp，3，\\u布局&gt&amp；（夏时制）"
  },
  {
    "origin": "Converts a",
    "local": "转换"
  },
  {
    "origin": "to an Eigen::Tensor.",
    "local": "到本征张量。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols, int _options, int _maxRows, int _maxCols&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows，int\\u cols，int\\u options，int\\u maxRows，int\\u maxCols&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, Eigen::Matrix&lt; _Tp, _rows, _cols, _options, _maxRows, _maxCols &gt; &amp;dst)",
    "local": "&amp；src，Eigen：：矩阵&lt_Tp、\\u行、\\u列、\\u选项、\\u最大行、\\u最大列&gt&amp；（夏时制）"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols, int _options, int _maxRows, int _maxCols&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows，int\\u cols，int\\u options，int\\u maxRows，int\\u maxCols&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt; _Tp, _rows, _cols &gt; &amp;src, Eigen::Matrix&lt; _Tp, _rows, _cols, _options, _maxRows, _maxCols &gt; &amp;dst)",
    "local": "&lt_Tp、\\u行、\\u列&gt&amp；src，Eigen：：矩阵&lt_Tp、\\u行、\\u列、\\u选项、\\u最大行、\\u最大列&gt&amp；（夏时制）"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, Eigen::Matrix&lt; _Tp, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;dst)",
    "local": "&amp；src，Eigen：：矩阵&lt_Tp，Eigen:：Dynamic，Eigen:：Dynamic&gt&amp；（夏时制）"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols&gt;",
    "local": "模板&lt；typename\\u Tp，int行，int列&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt; _Tp, _rows, _cols &gt; &amp;src, Eigen::Matrix&lt; _Tp, Eigen::Dynamic, Eigen::Dynamic &gt; &amp;dst)",
    "local": "&lt_Tp、\\u行、\\u列&gt&amp；src，Eigen：：矩阵&lt_Tp，Eigen:：Dynamic，Eigen:：Dynamic&gt&amp；（夏时制）"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, Eigen::Matrix&lt; _Tp, Eigen::Dynamic, 1 &gt; &amp;dst)",
    "local": "&amp；src，Eigen：：矩阵&lt_Tp，特征：：动态，1&gt&amp；（夏时制）"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt; _Tp, _rows, 1 &gt; &amp;src, Eigen::Matrix&lt; _Tp, Eigen::Dynamic, 1 &gt; &amp;dst)",
    "local": "&lt_Tp，行，1&gt&amp；src，Eigen：：矩阵&lt_Tp，特征：：动态，1&gt&amp；（夏时制）"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, Eigen::Matrix&lt; _Tp, 1, Eigen::Dynamic &gt; &amp;dst)",
    "local": "&amp；src，Eigen：：矩阵&lt_Tp，1，特征：：动态&gt&amp；（夏时制）"
  },
  {
    "origin": "template&lt;typename _Tp , int _cols&gt;",
    "local": "模板&lt；类型名称\\u Tp，int cols&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt; _Tp, 1, _cols &gt; &amp;src, Eigen::Matrix&lt; _Tp, 1, Eigen::Dynamic &gt; &amp;dst)",
    "local": "&lt_Tp，1，\\列&gt&amp；src，Eigen：：矩阵&lt_Tp，1，特征：：动态&gt&amp；（夏时制）"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static Eigen::TensorMap&lt; Eigen::Tensor&lt; _Tp, 3, Eigen::RowMajor &gt; &gt;&#160;",
    "local": "静态属性：：TensorMap&lt；自身：：张量&lt；uTp，3，Own:：RowMajor&gt；燃气轮机；160?"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src)",
    "local": "（src）"
  },
  {
    "origin": "Maps",
    "local": "地图"
  },
  {
    "origin": "data to an Eigen::TensorMap.",
    "local": "将数据转换为特征：：张量格式。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp , int _layout&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u layout&gt；"
  },
  {
    "origin": "(const Eigen::Tensor&lt; _Tp, 3, _layout &gt; &amp;src,",
    "local": "（const Eigen：：张量&lt_Tp，3，\\u布局&gt&amp；src公司，"
  },
  {
    "origin": "dst)",
    "local": "（夏时制）"
  },
  {
    "origin": "Converts an Eigen::Tensor to a",
    "local": "将本征：：张量转换为"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols, int _options, int _maxRows, int _maxCols&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows，int\\u cols，int\\u options，int\\u maxRows，int\\u maxCols&gt；"
  },
  {
    "origin": "(const Eigen::Matrix&lt; _Tp, _rows, _cols, _options, _maxRows, _maxCols &gt; &amp;src,",
    "local": "（const Eigen：：矩阵&lt_Tp、\\u行、\\u列、\\u选项、\\u最大行、\\u最大列&gt&amp；src公司，"
  },
  {
    "origin": "dst)",
    "local": "（夏时制）"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols, int _options, int _maxRows, int _maxCols&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows，int\\u cols，int\\u options，int\\u maxRows，int\\u maxCols&gt；"
  },
  {
    "origin": "(const Eigen::Matrix&lt; _Tp, _rows, _cols, _options, _maxRows, _maxCols &gt; &amp;src,",
    "local": "（const Eigen：：矩阵&lt_Tp、\\u行、\\u列、\\u选项、\\u最大行、\\u最大列&gt&amp；src公司，"
  },
  {
    "origin": "&lt; _Tp, _rows, _cols &gt; &amp;dst)",
    "local": "&lt_Tp，行，列&gt；&gt；amp；（夏令时）"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "These functions are provided for OpenCV-Eigen interoperability. They convert",
    "local": "这些函数是为OpenCV-Eigen互操作性提供的。他们转变了"
  },
  {
    "origin": "objects to corresponding",
    "local": "要对应的对象"
  },
  {
    "origin": "objects and vice-versa. Consult the",
    "local": "对象，反之亦然。咨询"
  },
  {
    "origin": "Eigen documentation",
    "local": "特征文件"
  },
  {
    "origin": "for information about the",
    "local": "有关"
  },
  {
    "origin": "template type.",
    "local": "模板类型。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Using these functions requires the",
    "local": "使用这些函数需要"
  },
  {
    "origin": "or similar header to be included before this header.",
    "local": "或类似的标题包含在此标题之前。"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen()",
    "local": "cv2eigen（）"
  },
  {
    "origin": "[1/9]",
    "local": "[1/9]"
  },
  {
    "origin": "template&lt;typename _Tp , int _layout&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u layout&gt；"
  },
  {
    "origin": "static void cv::cv2eigen",
    "local": "静态空隙cv：：cv2eigen"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Eigen::Tensor&lt; _Tp, 3, _layout &gt; &amp;&#160;",
    "local": "本征：：张量&lt_Tp，3，\\u布局&gt&amp&#160;"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Converts a",
    "local": "转换"
  },
  {
    "origin": "to an Eigen::Tensor.",
    "local": "到本征张量。"
  },
  {
    "origin": "The method converts a",
    "local": "该方法转换"
  },
  {
    "origin": "to an Eigen Tensor with shape (H x W x C) where: H = number of rows W = number of columns C = number of channels",
    "local": "形状为（H x W x C）的本征张量，其中：H=行数W=列数C=通道数"
  },
  {
    "origin": "Usage:",
    "local": "用法："
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen()",
    "local": "cv2eigen（）"
  },
  {
    "origin": "[2/9]",
    "local": "[2/9]"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols, int _options, int _maxRows, int _maxCols&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows，int\\u cols，int\\u options，int\\u maxRows，int\\u maxCols&gt；"
  },
  {
    "origin": "static void cv::cv2eigen",
    "local": "静态空隙cv：：cv2eigen"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen()",
    "local": "cv2eigen（）"
  },
  {
    "origin": "[3/9]",
    "local": "[3/9]"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols, int _options, int _maxRows, int _maxCols&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows，int\\u cols，int\\u options，int\\u maxRows，int\\u maxCols&gt；"
  },
  {
    "origin": "static void cv::cv2eigen",
    "local": "静态空隙cv：：cv2eigen"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen()",
    "local": "cv2eigen（）"
  },
  {
    "origin": "[4/9]",
    "local": "[4/9]"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static void cv::cv2eigen",
    "local": "静态空隙cv：：cv2eigen"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen()",
    "local": "cv2eigen（）"
  },
  {
    "origin": "[5/9]",
    "local": "[5/9]"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols&gt;",
    "local": "模板&lt；typename\\u Tp，int行，int列&gt；"
  },
  {
    "origin": "static void cv::cv2eigen",
    "local": "静态空隙cv：：cv2eigen"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen()",
    "local": "cv2eigen（）"
  },
  {
    "origin": "[6/9]",
    "local": "[6/9]"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static void cv::cv2eigen",
    "local": "静态空隙cv：：cv2eigen"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Eigen::Matrix&lt; _Tp, Eigen::Dynamic, 1 &gt; &amp;&#160;",
    "local": "Own:：矩阵&lt；*uTp，Own：：动态，1&gt；&gt；amp&35；160?"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen()",
    "local": "cv2eigen（）"
  },
  {
    "origin": "[7/9]",
    "local": "[7/9]"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows&gt；"
  },
  {
    "origin": "static void cv::cv2eigen",
    "local": "静态空隙cv：：cv2eigen"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt; _Tp, _rows, 1 &gt; &amp;&#160;",
    "local": "&左；（u）Tp，&u行，1&gt&amp；~35；160;"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Eigen::Matrix&lt; _Tp, Eigen::Dynamic, 1 &gt; &amp;&#160;",
    "local": "Own:：矩阵&lt；*uTp，Own：：动态，1&gt；&gt；amp&35；160?"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen()",
    "local": "cv2eigen（）"
  },
  {
    "origin": "[8/9]",
    "local": "[8/9]"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static void cv::cv2eigen",
    "local": "静态空隙cv：：cv2eigen"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Eigen::Matrix&lt; _Tp, 1, Eigen::Dynamic &gt; &amp;&#160;",
    "local": "Own:：矩阵&lt；*uTp，1，Own：：动态&gt；&gt；amp&35；160?"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen()",
    "local": "cv2eigen（）"
  },
  {
    "origin": "[9/9]",
    "local": "[9/9]"
  },
  {
    "origin": "template&lt;typename _Tp , int _cols&gt;",
    "local": "模板&lt；类型名称\\u Tp，int cols&gt；"
  },
  {
    "origin": "static void cv::cv2eigen",
    "local": "静态空隙cv：：cv2eigen"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt; _Tp, 1, _cols &gt; &amp;&#160;",
    "local": "&lt_Tp，1，列&gt；&gt；&#160;"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Eigen::Matrix&lt; _Tp, 1, Eigen::Dynamic &gt; &amp;&#160;",
    "local": "Own:：矩阵&lt；*uTp，1，Own：：动态&gt；&gt；amp&35；160?"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "cv2eigen_tensormap()",
    "local": "cv2property\\u tensormap（）"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static Eigen::TensorMap&lt;Eigen::Tensor&lt;_Tp, 3, Eigen::RowMajor&gt; &gt; cv::cv2eigen_tensormap",
    "local": "静态属性：：TensorMap&lt；自身：：张量&lt；Tp，3，本征：：RowMajor&gt；燃气轮机；cv:：cv2eigenu张量映射"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Maps",
    "local": "地图"
  },
  {
    "origin": "data to an Eigen::TensorMap.",
    "local": "将数据转换为特征：：张量格式。"
  },
  {
    "origin": "The method wraps an existing",
    "local": "该方法包装现有的"
  },
  {
    "origin": "data array with an Eigen TensorMap of shape (H x W x C) where: H = number of rows W = number of columns C = number of channels",
    "local": "具有形状特征张量图（H x W x C）的数据数组，其中：H=行数W=列数C=通道数"
  },
  {
    "origin": "Explicit instantiation of the return type is required.",
    "local": "返回类型的显式实例化是必需的。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Caller should be aware of the lifetime of the",
    "local": "调用者应该知道"
  },
  {
    "origin": "instance and take appropriate safety measures. The",
    "local": "并采取相应的安全措施。这个"
  },
  {
    "origin": "instance will retain ownership of the data and the Eigen::TensorMap will lose access when the",
    "local": "实例将保留数据的所有权，当"
  },
  {
    "origin": "data is deallocated.",
    "local": "数据已释放。"
  },
  {
    "origin": "The example below initializes a",
    "local": "下面的示例初始化"
  },
  {
    "origin": "and produces an Eigen::TensorMap:",
    "local": "并产生一个本征：：张量图："
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "eigen2cv()",
    "local": "特征值2CV（）"
  },
  {
    "origin": "[1/3]",
    "local": "[1/3]"
  },
  {
    "origin": "template&lt;typename _Tp , int _layout&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u layout&gt；"
  },
  {
    "origin": "static void cv::eigen2cv",
    "local": "静态空隙cv：：特征值2CV"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const Eigen::Tensor&lt; _Tp, 3, _layout &gt; &amp;&#160;",
    "local": "常量特征：：张量&lt_Tp，3，\\u布局&gt&amp&#160;"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Converts an Eigen::Tensor to a",
    "local": "将本征：：张量转换为"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "The method converts an Eigen::Tensor with shape (H x W x C) to a",
    "local": "该方法将具有形状（hxwxc）的本征张量转化为"
  },
  {
    "origin": "where: H = number of rows W = number of columns C = number of channels",
    "local": "其中：H=行数W=列数C=通道数"
  },
  {
    "origin": "Usage:",
    "local": "用法："
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "eigen2cv()",
    "local": "特征值2CV（）"
  },
  {
    "origin": "[2/3]",
    "local": "[2/3]"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols, int _options, int _maxRows, int _maxCols&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows，int\\u cols，int\\u options，int\\u maxRows，int\\u maxCols&gt；"
  },
  {
    "origin": "static void cv::eigen2cv",
    "local": "静态空隙cv：：特征值2CV"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "eigen2cv()",
    "local": "特征值2CV（）"
  },
  {
    "origin": "[3/3]",
    "local": "[3/3]"
  },
  {
    "origin": "template&lt;typename _Tp , int _rows, int _cols, int _options, int _maxRows, int _maxCols&gt;",
    "local": "模板&lt；typename\\u Tp，int\\u rows，int\\u cols，int\\u options，int\\u maxRows，int\\u maxCols&gt；"
  },
  {
    "origin": "static void cv::eigen2cv",
    "local": "静态空隙cv：：特征值2CV"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:40 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:40为OpenCV生成，&#160；"
  }
]