[
  {
    "origin": "OpenCV: Member List",
    "local": "OpenCV:成员列表"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "cv::dnn::Net Member List",
    "local": "cv:：dnn:：Net成员列表"
  },
  {
    "origin": "This is the complete list of members for",
    "local": "这是您的完整成员列表"
  },
  {
    "origin": ", including all inherited members.",
    "local": "，包括所有继承的成员。"
  },
  {
    "origin": "(const String &amp;name, const String &amp;type, LayerParams &amp;params)",
    "local": "（常量字符串和；名称、常量字符串和；类型、图层参数和；参数）"
  },
  {
    "origin": "(const String &amp;name, const String &amp;type, LayerParams &amp;params)",
    "local": "（常量字符串和；名称、常量字符串和；类型、图层参数和；参数）"
  },
  {
    "origin": "(String outPin, String inpPin)",
    "local": "（字符串输出pin，字符串输入pin）"
  },
  {
    "origin": "(int outLayerId, int outNum, int inpLayerId, int inpNum)",
    "local": "（int outLayerId，int outNum，int inpLayerId，int inpNum）"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(const String &amp;path)",
    "local": "（常量字符串和；路径）"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(bool fusion)",
    "local": "（布尔融合）"
  },
  {
    "origin": "(const String &amp;outputName=String())",
    "local": "（常量字符串和；outputName=String（））"
  },
  {
    "origin": "(OutputArrayOfArrays outputBlobs, const String &amp;outputName=String())",
    "local": "（OutputArrayOfArrays outputBlobs，const String&amp；输出=字符串（））"
  },
  {
    "origin": "(OutputArrayOfArrays outputBlobs, const std::vector&lt; String &gt; &amp;outBlobNames)",
    "local": "（OutputArrayOfArrays outputBlobs，const std:：vector&lt；字符串&gt；&gt；amp；outBlobNames公司）"
  },
  {
    "origin": "(std::vector&lt; std::vector&lt; Mat &gt; &gt; &amp;outputBlobs, const std::vector&lt; String &gt; &amp;outBlobNames)",
    "local": "（标准：：向量&lt；标准：：向量&lt；使用&gt；&gt；&gt；gt；&amp；outputBlobs，const std:：vector&lt；字符串&gt；&gt；&gt；&amp；outBlobNames公司）"
  },
  {
    "origin": "(const String &amp;outputName=String())",
    "local": "（常量字符串和；outputName=String（））"
  },
  {
    "origin": "(const std::vector&lt; MatShape &gt; &amp;netInputShapes) const",
    "local": "（const std：：向量&lt；MatShape&gt；&gt；&amp；netInputShapes）常量"
  },
  {
    "origin": "(const MatShape &amp;netInputShape) const",
    "local": "Const MatShape公司；netInputShape）常量"
  },
  {
    "origin": "(const int layerId, const std::vector&lt; MatShape &gt; &amp;netInputShapes) const",
    "local": "（const int layerId，const std:：vector&lt；MatShape&gt；&gt；&amp；netInputShapes）常量"
  },
  {
    "origin": "(const int layerId, const MatShape &amp;netInputShape) const",
    "local": "（const int layerId，const MatShape&amp；netInputShape）常量"
  },
  {
    "origin": "(LayerId layerId)",
    "local": "（LayerId LayerId）"
  },
  {
    "origin": "(const String &amp;layer)",
    "local": "（常量字符串和；层）"
  },
  {
    "origin": "(LayerId layerId)",
    "local": "（LayerId LayerId）"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const String &amp;layerType) const",
    "local": "常量字符串；图层类型）常量"
  },
  {
    "origin": "(const MatShape &amp;netInputShape, const int layerId, std::vector&lt; MatShape &gt; &amp;inLayerShapes, std::vector&lt; MatShape &gt; &amp;outLayerShapes) const",
    "local": "Const MatShape公司；netInputShape，const int layerId，std:：vector&lt；MatShape&gt；&gt；&amp；嵌入层形状，std:：vector&lt；MatShape&gt；&gt；&amp；外域形状）常量"
  },
  {
    "origin": "(const std::vector&lt; MatShape &gt; &amp;netInputShapes, const int layerId, std::vector&lt; MatShape &gt; &amp;inLayerShapes, std::vector&lt; MatShape &gt; &amp;outLayerShapes) const",
    "local": "（const std：：向量&lt；MatShape&gt；&gt；&amp；netInputShapes，const int layerId，std:：vector&lt；MatShape&gt；&gt；&amp；嵌入层形状，std:：vector&lt；MatShape&gt；&gt；&amp；外域形状）常量"
  },
  {
    "origin": "(const std::vector&lt; MatShape &gt; &amp;netInputShapes, std::vector&lt; int &gt; &amp;layersIds, std::vector&lt; std::vector&lt; MatShape &gt; &gt; &amp;inLayersShapes, std::vector&lt; std::vector&lt; MatShape &gt; &gt; &amp;outLayersShapes) const",
    "local": "（const std：：向量&lt；MatShape&gt&amp；netInputShapes，标准：：向量&lt；内部&gt&amp；layersIds，std：：向量&lt；标准：：向量&lt；MatShape&gt&燃气轮机&amp；嵌入图形，std:：vector&lt；标准：：向量&lt；MatShape&gt&燃气轮机&amp；外地人形状）const"
  },
  {
    "origin": "(const MatShape &amp;netInputShape, std::vector&lt; int &gt; &amp;layersIds, std::vector&lt; std::vector&lt; MatShape &gt; &gt; &amp;inLayersShapes, std::vector&lt; std::vector&lt; MatShape &gt; &gt; &amp;outLayersShapes) const",
    "local": "Const MatShape公司；netInputShape，std:：vector&lt；内部&gt；&gt&&amp；layersIds，std：：向量&lt；标准：：向量&lt；MatShape&gt；&gt；&gt；gt；&amp；嵌入图形，std:：vector&lt；标准：：向量&lt；MatShape&gt；&gt；&gt；gt；&amp；外地人形状）const"
  },
  {
    "origin": "(std::vector&lt; String &gt; &amp;layersTypes) const",
    "local": "（标准：：向量&lt；字符串&gt&amp；图层类型）常量"
  },
  {
    "origin": "(const std::vector&lt; MatShape &gt; &amp;netInputShapes, size_t &amp;weights, size_t &amp;blobs) const",
    "local": "（const std：：向量&lt；MatShape&gt&amp；网络输入形状、大小；重量、尺寸；水滴）常量"
  },
  {
    "origin": "(const MatShape &amp;netInputShape, size_t &amp;weights, size_t &amp;blobs) const",
    "local": "（const MatShape和；网络输入形状、大小；重量、尺寸；水滴）常量"
  },
  {
    "origin": "(const int layerId, const std::vector&lt; MatShape &gt; &amp;netInputShapes, size_t &amp;weights, size_t &amp;blobs) const",
    "local": "（const int layerId，const std:：vector&lt；MatShape&gt&amp；网络输入形状、大小；重量、尺寸；水滴）常量"
  },
  {
    "origin": "(const int layerId, const MatShape &amp;netInputShape, size_t &amp;weights, size_t &amp;blobs) const",
    "local": "（const int layerId，const MatShape&amp；网络输入形状、大小；重量、尺寸；水滴）常量"
  },
  {
    "origin": "(const std::vector&lt; MatShape &gt; &amp;netInputShapes, std::vector&lt; int &gt; &amp;layerIds, std::vector&lt; size_t &gt; &amp;weights, std::vector&lt; size_t &gt; &amp;blobs) const",
    "local": "（const std：：向量&lt；MatShape&gt&amp；netInputShapes，标准：：向量&lt；内部&gt&amp；层，标准：：向量&lt；大小\\u t&gt&amp；权重，标准：：向量&lt；大小\\u t&gt&amp；水滴）常量"
  },
  {
    "origin": "(const MatShape &amp;netInputShape, std::vector&lt; int &gt; &amp;layerIds, std::vector&lt; size_t &gt; &amp;weights, std::vector&lt; size_t &gt; &amp;blobs) const",
    "local": "（const MatShape和；netInputShape，std:：vector&lt；内部&gt&amp；层，标准：：向量&lt；大小\\u t&gt&amp；权重，标准：：向量&lt；大小\\u t&gt&amp；水滴）常量"
  },
  {
    "origin": "(LayerId layer, int numParam=0)",
    "local": "（层Id层，int numParam=0）"
  },
  {
    "origin": "(std::vector&lt; double &gt; &amp;timings)",
    "local": "（标准：：向量&lt；双倍&gt&amp；（计时）"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "typedef",
    "local": "类型定义"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(const String &amp;xml, const String &amp;bin)",
    "local": "常量字符串；xml、常量字符串和；（二）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const std::vector&lt; uchar &gt; &amp;bufferModelConfig, const std::vector&lt; uchar &gt; &amp;bufferWeights)",
    "local": "（const std：：向量&lt；乌查尔&gt&amp；bufferModelConfig，const std:：vector&lt；乌查尔&gt&amp；缓冲器重量）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const uchar *bufferModelConfigPtr, size_t bufferModelConfigSize, const uchar *bufferWeightsPtr, size_t bufferWeightsSize)",
    "local": "（const uchar*bufferModelConfigPtr，大小\\u t bufferModelConfigSize，const uchar*bufferWeightsPtr，大小\\u t bufferWeightsSize）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const String &amp;scheduler)",
    "local": "（常量字符串和；调度程序）"
  },
  {
    "origin": "(InputArray blob, const String &amp;name=&quot;&quot;, double scalefactor=1.0, const Scalar &amp;mean=Scalar())",
    "local": "（InputArray blob、const String&amp；名称=&quot&引用；，双标量因子=1.0，常量标量；平均值=标量（））"
  },
  {
    "origin": "(const String &amp;inputName, const MatShape &amp;shape)",
    "local": "常量字符串；输入名称，const MatShape&amp；形状）"
  },
  {
    "origin": "(const std::vector&lt; String &gt; &amp;inputBlobNames)",
    "local": "（const std：：向量&lt；字符串&gt；&gt；&gt；&amp；输入BlobNames）"
  },
  {
    "origin": "(LayerId layer, int numParam, const Mat &amp;blob)",
    "local": "（LayerId层、int numParam、const Mat和；水滴）"
  },
  {
    "origin": "(int backendId)",
    "local": "（int后端）"
  },
  {
    "origin": "(int targetId)",
    "local": "（int目标ID）"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:47为OpenCV生成，&#160；"
  }
]