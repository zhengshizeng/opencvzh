[
  {
    "origin": "OpenCV: Graph API",
    "local": "OpenCV:图形API"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Graph API",
    "local": "图形API"
  },
  {
    "origin": "Introduction",
    "local": "介绍"
  },
  {
    "origin": "OpenCV Graph API (or G-API) is a new OpenCV module targeted to make regular image processing fast and portable. These two goals are achieved by introducing a new graph-based model of execution.",
    "local": "opencvgraphapi（或G-API）是一个新的OpenCV模块，旨在使常规图像处理快速、可移植。这两个目标是通过引入一个新的基于图的执行模型来实现的。"
  },
  {
    "origin": "G-API is a special module in OpenCV &ndash; in contrast with the majority of other main modules, this one acts as a framework rather than some specific CV algorithm. G-API provides means to define CV operations, construct graphs (in form of expressions) using it, and finally implement and run the operations for a particular backend.",
    "local": "G-API是OpenCV中的一个特殊模块&ndash；与大多数其他主要模块相比，这个模块作为一个框架，而不是一些特定的CV算法。G-API提供了定义CV操作、使用它构造图（以表达式的形式）以及最终实现和运行特定后端操作的方法。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "G-API is a new module and now is in active development. It's API is volatile at the moment and there may be minor but compatibility-breaking changes in the future.",
    "local": "G-API是一个新的模块，目前正在积极开发中。它的API目前是不稳定的，将来可能会有一些微小但破坏兼容性的变化。"
  },
  {
    "origin": "Contents",
    "local": "目录"
  },
  {
    "origin": "G-API documentation is organized into the following chapters:",
    "local": "G-API文件分为以下章节："
  },
  {
    "origin": "The motivation behind G-API and its goals.",
    "local": "G-API背后的动机及其目标。"
  },
  {
    "origin": "General overview of G-API architecture and its major internal components.",
    "local": "G-API体系结构及其主要内部组件的一般概述。"
  },
  {
    "origin": "Learn how to introduce new operations in G-API and implement it for various backends.",
    "local": "学习如何在G-API中引入新操作，并为各种后端实现它。"
  },
  {
    "origin": "Low-level implementation details of G-API, for those who want to contribute.",
    "local": "G-API的底层实现细节，适合那些想要贡献的人。"
  },
  {
    "origin": "API Reference: functions and classes",
    "local": "API参考：函数和类"
  },
  {
    "origin": "Core G-API operations - arithmetic, boolean, and other matrix operations;",
    "local": "核心G-API操作-算术、布尔和其他矩阵操作；"
  },
  {
    "origin": "Image processing functions: color space conversions, various filters, etc.",
    "local": "图像处理功能：色彩空间转换，各种滤光片等。"
  },
  {
    "origin": "API Example",
    "local": "API示例"
  },
  {
    "origin": "A very basic example of G-API pipeline is shown below:",
    "local": "G-API管道的一个非常基本的示例如下所示："
  },
  {
    "origin": "G-API is a separate OpenCV module so its header files have to be included explicitly. The first four lines of",
    "local": "G-API是一个单独的OpenCV模块，因此必须显式地包含其头文件。前四行"
  },
  {
    "origin": "create and initialize OpenCV's standard video capture object, which fetches video frames from either an attached camera or a specified file.",
    "local": "创建并初始化OpenCV的标准视频捕获对象，该对象从连接的摄像机或指定的文件中获取视频帧。"
  },
  {
    "origin": "G-API pipeline is constructed next. In fact, it is a series of G-API operation calls on",
    "local": "下一步建设G-API管道。实际上，这是一系列的G-API操作调用"
  },
  {
    "origin": "data. The important aspect of G-API is that this code block is just a declaration of actions, but not the actions themselves. No processing happens at this point, G-API only tracks which operations form pipeline and how it is connected. G-API",
    "local": "数据。G-API的一个重要方面是，这个代码块只是动作的声明，而不是动作本身。此时不进行任何处理，G-API只跟踪形成管道的操作以及它是如何连接的。G-API公司"
  },
  {
    "origin": "Data objects",
    "local": "数据对象"
  },
  {
    "origin": "(here it is",
    "local": "（在这里"
  },
  {
    "origin": ") are used to connect operations each other.",
    "local": ")用于连接操作。"
  },
  {
    "origin": "is an",
    "local": "是一个"
  },
  {
    "origin": "empty",
    "local": "空的"
  },
  {
    "origin": "signalling that it is a beginning of computation.",
    "local": "表示这是计算的开始。"
  },
  {
    "origin": "After G-API code is written, it is captured into a call graph with instantiation of",
    "local": "编写G-API代码后，它被捕获到一个调用图中，并实例化"
  },
  {
    "origin": "object. This object takes input/output data references (in this example,",
    "local": "对象。此对象接受输入/输出数据引用（在本例中，"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "objects, respectively) as parameters and reconstructs the call graph based on all the data flow between",
    "local": "对象）作为参数，并基于它们之间的所有数据流重构调用图"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "is a thin object in sense that it just captures which operations form up a computation. However, it can be used to execute computations &ndash; in the following processing loop, every captured frame (a",
    "local": "从某种意义上说，它是一个薄对象，只捕获构成计算的操作。但是，它可以用于执行计算&ndash；在下面的处理循环中，每个捕获的帧"
  },
  {
    "origin": ") is passed to",
    "local": ")传递给"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Example pipeline running on sample video 'vtest.avi'",
    "local": "示例管道在示例视频“vtest.avi”上运行"
  },
  {
    "origin": "is a polimorphic method which accepts a variadic number of arguments. Since this computation is defined on one input, one output, a special overload of",
    "local": "是一种多形方法，它接受可变数量的参数。由于这种计算是在一个输入、一个输出上定义的，因此"
  },
  {
    "origin": "is used to pass input data and get output data.",
    "local": "用于传递输入数据和获取输出数据。"
  },
  {
    "origin": "Internally,",
    "local": "在内部，"
  },
  {
    "origin": "compiles the captured graph for the given input parameters and executes the compiled graph on data immediately.",
    "local": "为给定的输入参数编译捕获的图形，并立即对数据执行编译后的图形。"
  },
  {
    "origin": "There is a number important concepts can be outlines with this example:",
    "local": "有许多重要的概念可以用这个例子来概括："
  },
  {
    "origin": "Graph declaration and graph execution are distinct steps;",
    "local": "图形声明和图形执行是两个不同的步骤；"
  },
  {
    "origin": "Graph is built implicitly from a sequence of G-API expressions;",
    "local": "图是由G-API表达式序列隐式构建的；"
  },
  {
    "origin": "G-API supports function-like calls &ndash; e.g.",
    "local": "G-API支持类似于调用的函数&ndash；例如"
  },
  {
    "origin": ", and operators, e.g",
    "local": "，和运算符，例如"
  },
  {
    "origin": "which is used to compute bitwise OR;",
    "local": "用于计算按位或；"
  },
  {
    "origin": "G-API syntax aims to look pure: every operation call within a graph yields a new result, thus forming a directed acyclic graph (DAG);",
    "local": "G-API语法的目的是看起来纯粹：图中的每个操作调用都产生一个新的结果，从而形成一个有向无环图（DAG）；"
  },
  {
    "origin": "Graph declaration is not bound to any data &ndash; real data objects (",
    "local": "图形声明未绑定到任何数据&ndash；真实数据对象("
  },
  {
    "origin": ") come into picture after the graph is already declared.",
    "local": ")在图形已经声明之后进入图片。"
  },
  {
    "origin": "See",
    "local": "看到了吗"
  },
  {
    "origin": "to learn more on various G-API features and concepts.",
    "local": "了解有关各种G-API特性和概念的更多信息。"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:33 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:33为OpenCV生成，&#160；"
  }
]