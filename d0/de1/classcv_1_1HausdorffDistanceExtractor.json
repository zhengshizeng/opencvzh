[
  {
    "origin": "OpenCV: cv::HausdorffDistanceExtractor Class Reference",
    "local": "OpenCV:cv:：HausdorfDistanceExtractor类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::HausdorffDistanceExtractor Class Reference",
    "local": "cv:：HausdorffDistanceExtractor类引用"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "A simple Hausdorff distance measure between shapes defined by contours.",
    "local": "轮廓定义的形状之间的简单Hausdorff距离度量。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::HausdorffDistanceExtractor:",
    "local": "cv:：HausdorffDistanceExtractor的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "Set the norm used to compute the Hausdorff value between two shapes. It can be",
    "local": "设置用于计算两个形状之间的Hausdorff值的范数。可能是的"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "norm.",
    "local": "正常。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "This method sets the rank proportion (or fractional value) that establish the Kth ranked value of the partial Hausdorff distance. Experimentally had been shown that 0.6 is a good value to compare shapes.",
    "local": "该方法设置了建立部分Hausdorff距离第k个排序值的排序比例（或分数值）。实验表明，0.6是比较形状的一个好值。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "contour1,",
    "local": "轮廓1，"
  },
  {
    "origin": "contour2)=0",
    "local": "（2）=0"
  },
  {
    "origin": "Compute the shape distance between two shapes defined by its contours.",
    "local": "计算由其轮廓定义的两个形状之间的形状距离。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "A simple Hausdorff distance measure between shapes defined by contours.",
    "local": "轮廓定义的形状之间的简单Hausdorff距离度量。"
  },
  {
    "origin": "according to the paper \"Comparing Images using the Hausdorff distance.\" by D.P. Huttenlocher, G.A. Klanderman, and W.J. Rucklidge. (PAMI 1993). :",
    "local": "根据D.P.Huttenlocher，G.A.Klanderman和W.J.Rucklidge的论文“利用Hausdorff距离比较图像”(帕米1993）："
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDistanceFlag()",
    "local": "getDistanceFlag（）"
  },
  {
    "origin": "virtual int cv::HausdorffDistanceExtractor::getDistanceFlag",
    "local": "虚拟int cv:：hausdorffdanceextractor:：getDistanceFlag"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.HausdorffDistanceExtractor.getDistanceFlag(",
    "local": "cv.HausdorfDistanceExtractor.getDistanceFlag("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getRankProportion()",
    "local": "getRankProportion（）"
  },
  {
    "origin": "virtual float cv::HausdorffDistanceExtractor::getRankProportion",
    "local": "虚拟浮点cv:：HausdorffDistanceExtractor:：getRankProportion"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.HausdorffDistanceExtractor.getRankProportion(",
    "local": "cv.HausdorfffDistanceExtractor.getRankProportion公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setDistanceFlag()",
    "local": "setDistanceFlag（）"
  },
  {
    "origin": "virtual void cv::HausdorffDistanceExtractor::setDistanceFlag",
    "local": "虚拟空cv:：HausdorffDistanceExtractor:：setDistanceFlag"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "distanceFlag",
    "local": "距离标志"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.HausdorffDistanceExtractor.setDistanceFlag(",
    "local": "cv.HausdorfDistanceExtractor.setDistanceFlag("
  },
  {
    "origin": "distanceFlag",
    "local": "距离标志"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Set the norm used to compute the Hausdorff value between two shapes. It can be",
    "local": "设置用于计算两个形状之间的Hausdorff值的范数。可能是的"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "norm.",
    "local": "正常。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "distanceFlag",
    "local": "距离标志"
  },
  {
    "origin": "Flag indicating which norm is used to compute the Hausdorff distance (NORM_L1, NORM_L2).",
    "local": "指示用于计算Hausdorff距离的范数的标志（范数L1，范数L2）。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setRankProportion()",
    "local": "setRankProportion（）"
  },
  {
    "origin": "virtual void cv::HausdorffDistanceExtractor::setRankProportion",
    "local": "虚拟void cv:：hausdorffdanceextractor:：setRankProportion"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "rankProportion",
    "local": "朗克比例"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.HausdorffDistanceExtractor.setRankProportion(",
    "local": "cv.HausdorfffDistanceExtractor.setRankProportion公司("
  },
  {
    "origin": "rankProportion",
    "local": "朗克比例"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This method sets the rank proportion (or fractional value) that establish the Kth ranked value of the partial Hausdorff distance. Experimentally had been shown that 0.6 is a good value to compare shapes.",
    "local": "该方法设置了建立部分Hausdorff距离第k个排序值的排序比例（或分数值）。实验表明，0.6是比较形状的一个好值。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "rankProportion",
    "local": "朗克比例"
  },
  {
    "origin": "fractional value (between 0 and 1).",
    "local": "分数值（介于0和1之间）。"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/shape/",
    "local": "opencv2/形状/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:43为OpenCV生成"
  }
]