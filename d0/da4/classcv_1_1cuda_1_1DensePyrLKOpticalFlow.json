[
  {
    "origin": "OpenCV: cv::cuda::DensePyrLKOpticalFlow Class Reference",
    "local": "OpenCV:cv:：cuda:：DensePyrLKOpticalFlow类引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::cuda::DensePyrLKOpticalFlow Class Reference",
    "local": "cv:：cuda:：DensePyrLKOpticalFlow类参考"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "&raquo;",
    "local": "&引用；"
  },
  {
    "origin": "Class used for calculating a dense optical flow.",
    "local": "用于计算密集光流的类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::cuda::DensePyrLKOpticalFlow:",
    "local": "cv:：cuda:：DensePyrLKOpticalFlow的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "I0,",
    "local": "十年前，"
  },
  {
    "origin": "I1,",
    "local": "I1号，"
  },
  {
    "origin": "flow,",
    "local": "流量，"
  },
  {
    "origin": "&amp;stream=",
    "local": "&amp；溪流="
  },
  {
    "origin": "Calculates a dense optical flow.",
    "local": "计算密集光流。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "winSize=",
    "local": "winSize公司="
  },
  {
    "origin": "(13, 13), int maxLevel=3, int iters=30, bool useInitialFlow=false)",
    "local": "（13，13），int maxLevel=3，int iters=30，bool useInitialFlow=false）"
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": "&#160;继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "&#160;Protected Member Functions inherited from",
    "local": "&#160;继承自的受保护成员函数"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Class used for calculating a dense optical flow.",
    "local": "用于计算密集光流的类。"
  },
  {
    "origin": "The class can calculate an optical flow for a dense optical flow using the iterative Lucas-Kanade method with pyramids.",
    "local": "该类可以使用带金字塔的迭代卢卡斯-卡纳德方法计算密集光流的光流。"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::cuda::DensePyrLKOpticalFlow::create",
    "local": "&燃气轮机；cv:：cuda:：DensePyrLKOpticalFlow:：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "winSize",
    "local": "窗口大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "maxLevel",
    "local": "最大电平"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "iters",
    "local": "iters公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "useInitialFlow",
    "local": "使用初始流"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getMaxLevel()",
    "local": "getMaxLevel（）"
  },
  {
    "origin": "virtual int cv::cuda::DensePyrLKOpticalFlow::getMaxLevel",
    "local": "虚拟int cv:：奇迹：：DensePyrLKOpticalFlow:：getMaxLevel"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getNumIters()",
    "local": "getNumIters（）"
  },
  {
    "origin": "virtual int cv::cuda::DensePyrLKOpticalFlow::getNumIters",
    "local": "虚拟int cv:：cuda:：DensePyrLKOpticalFlow:：getNumIters"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getUseInitialFlow()",
    "local": "getUseInitialFlow（）"
  },
  {
    "origin": "virtual bool cv::cuda::DensePyrLKOpticalFlow::getUseInitialFlow",
    "local": "虚拟布尔cv:：cuda:：DensePyrLKOpticalFlow:：getUseInitialFlow"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getWinSize()",
    "local": "getWinSize（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::cuda::DensePyrLKOpticalFlow::getWinSize",
    "local": "cv:：cuda:：DensePyrLKOpticalFlow:：getWinSize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setMaxLevel()",
    "local": "setMaxLevel（）"
  },
  {
    "origin": "virtual void cv::cuda::DensePyrLKOpticalFlow::setMaxLevel",
    "local": "虚空cv:：cuda:：DensePyrLKOpticalFlow:：setMaxLevel"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "maxLevel",
    "local": "最大电平"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setNumIters()",
    "local": "setNumIters（）"
  },
  {
    "origin": "virtual void cv::cuda::DensePyrLKOpticalFlow::setNumIters",
    "local": "虚拟void cv:：cuda:：DensePyrLKOpticalFlow:：setNumIters"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "iters",
    "local": "iters公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setUseInitialFlow()",
    "local": "setUseInitialFlow（）"
  },
  {
    "origin": "virtual void cv::cuda::DensePyrLKOpticalFlow::setUseInitialFlow",
    "local": "虚空cv:：cuda:：DensePyrLKOpticalFlow:：setUseInitialFlow"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "useInitialFlow",
    "local": "使用初始流"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setWinSize()",
    "local": "setWinSize（）"
  },
  {
    "origin": "virtual void cv::cuda::DensePyrLKOpticalFlow::setWinSize",
    "local": "虚空cv:：cuda:：DensePyrLKOpticalFlow:：setWinSize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "winSize",
    "local": "窗口大小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:44 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:44为OpenCV生成，&#160；"
  }
]