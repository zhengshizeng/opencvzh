[
  {
    "origin": "OpenCV: cv::mcc::DetectorParameters Struct Reference",
    "local": "OpenCV:cv:：mcc:：DetectorParameters结构引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "Public Attributes",
    "local": "公共属性"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::mcc::DetectorParameters Struct Reference",
    "local": "cv:：mcc:：DetectorParameters结构参考"
  },
  {
    "origin": "Parameters for the detectMarker process:",
    "local": "detectMarker进程的参数："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Public Attributes",
    "local": "公共属性"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Parameters for the detectMarker process:",
    "local": "detectMarker进程的参数："
  },
  {
    "origin": "int adaptiveThreshWinSizeMin : minimum window size for adaptive thresholding before finding contours (default 23).",
    "local": "int adaptiveThreshWinSizeMin：在找到轮廓之前自适应阈值的最小窗口大小（默认值23）。"
  },
  {
    "origin": "int adaptiveThreshWinSizeMax : maximum window size for adaptive thresholding before finding contours (default 153).",
    "local": "int adaptiveThreshWinSizeMax：查找轮廓之前自适应阈值的最大窗口大小（默认值）。"
  },
  {
    "origin": "int adaptiveThreshWinSizeStep : increments from adaptiveThreshWinSizeMin to adaptiveThreshWinSizeMax during the thresholding (default 16).",
    "local": "int adaptiveThreshWinSizeStep：在阈值期间从adaptiveThreshWinSizeMin到adaptiveThreshWinSizeMax的增量（默认值16）。"
  },
  {
    "origin": "double adaptiveThreshConstant : constant for adaptive thresholding before finding contours (default 7)",
    "local": "double adaptiveThreshConstant：查找轮廓前自适应阈值的常量（默认值7）"
  },
  {
    "origin": "double minContoursAreaRate : determine minimum area for marker contour to be detected. This is defined as a rate respect to the area of the input image. Used only if neural network is used (default 0.003).",
    "local": "双最小轮廓线：确定要检测的标记轮廓的最小区域。这被定义为相对于输入图像区域的速率。仅在使用神经网络时使用（默认值为0.003）。"
  },
  {
    "origin": "double minContoursArea : determine minimum area for marker contour to be detected. This is defined as the actual area. Used only if neural network is not used (default 100).",
    "local": "双等高线区域：确定要检测的标记等高线的最小区域。这被定义为实际面积。仅在未使用神经网络时使用（默认值100）。"
  },
  {
    "origin": "double confidenceThreshold : minimum confidence for a bounding box detected by neural network to classify as detection.(default 0.5) (0&lt;=confidenceThreshold&lt;=1)",
    "local": "双置信度阈值：神经网络检测到的边界框分类为检测的最小置信度（默认值0.5）（0&lt=信心阈值&lt=1)"
  },
  {
    "origin": "double minContourSolidity : minimum solidity of a contour for it be detected as a square in the chart. (default 0.9).",
    "local": "双倍最小等高线坚固度：在图表中被检测为正方形的等高线的最小坚固度(默认值为0.9）。"
  },
  {
    "origin": "double findCandidatesApproxPolyDPEpsMultiplier : multipler to be used in cv::ApproxPolyDP function (default 0.05)",
    "local": "double findCandidatesApproxPolyDPEpsMultiplier:在cv:：ApproxPolyDP函数中使用的乘法器（默认值为0.05）"
  },
  {
    "origin": "int borderWidth : width of the padding used to pass the inital neural network detection in the succeeding system.(default 0)",
    "local": "int borderWidth：用于在后续系统中通过初始神经网络检测的填充宽度。（默认值0）"
  },
  {
    "origin": "float B0factor : distance between two neighbours squares of the same chart. Defined as the ratio between distance and large dimension of square (default 1.25)",
    "local": "浮点数：同一图表中两个相邻方格之间的距离。定义为距离和正方形大尺寸之间的比率（默认值为1.25）"
  },
  {
    "origin": "float maxError : maximum allowed error in the detection of a chart. default(0.1)",
    "local": "float maxError：检测图表时允许的最大错误。默认值（0.1）"
  },
  {
    "origin": "int minContourPointsAllowed : minium points in a detected contour. default(4)",
    "local": "int minContourPointsAllowed：检测到的轮廓中的最小点。默认（4）"
  },
  {
    "origin": "int minContourLengthAllowed : minimum length of a countour. default(100)",
    "local": "int mincontourlengthlowed：一个countour的最小长度。默认值（100）"
  },
  {
    "origin": "int minInterContourDistance : minimum distance between two contours. default(100)",
    "local": "int minInterContourDistance：两个等高线之间的最小距离。默认值（100）"
  },
  {
    "origin": "int minInterCheckerDistance : minimum distance between two checkers. default(10000)",
    "local": "int minInterCheckerDistance：两个棋盘格之间的最小距离。默认值（10000）"
  },
  {
    "origin": "int minImageSize : minimum size of the smaller dimension of the image. default(1000)",
    "local": "int minImageSize：图像较小维度的最小大小。默认值（1000）"
  },
  {
    "origin": "unsigned minGroupSize : minimum number of a squared of a chart that must be detected. default(4)",
    "local": "unsigned minGroupSize：必须检测的图表的最小平方数。默认（4）"
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "DetectorParameters()",
    "local": "检测器参数（）"
  },
  {
    "origin": "cv::mcc::DetectorParameters::DetectorParameters",
    "local": "cv:：mcc:：Detector参数：：Detector参数"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::mcc::DetectorParameters::create",
    "local": "&燃气轮机；cv:：mcc:：DetectorParameters:：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Member Data Documentation",
    "local": "成员数据文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "adaptiveThreshConstant",
    "local": "适应的"
  },
  {
    "origin": "double cv::mcc::DetectorParameters::adaptiveThreshConstant",
    "local": "双cv:：mcc:：DetectorParameters:：adaptiveThreshConstant"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "adaptiveThreshWinSizeMax",
    "local": "阈值WinSizeMax自适应"
  },
  {
    "origin": "int cv::mcc::DetectorParameters::adaptiveThreshWinSizeMax",
    "local": "int cv：：mcc：：参数检测器：adaptiveThreshWinSizeMax"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "adaptiveThreshWinSizeMin",
    "local": "自适应threshwinsizemin"
  },
  {
    "origin": "int cv::mcc::DetectorParameters::adaptiveThreshWinSizeMin",
    "local": "int cv：：mcc：：DetectorParameters：：adaptiveThreshWinSizeMin"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "adaptiveThreshWinSizeStep",
    "local": "阈值WinSizeStep自适应"
  },
  {
    "origin": "int cv::mcc::DetectorParameters::adaptiveThreshWinSizeStep",
    "local": "int cv：：mcc：：参数检测器：adaptiveThreshWinSizeStep"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "B0factor",
    "local": "b0系数"
  },
  {
    "origin": "float cv::mcc::DetectorParameters::B0factor",
    "local": "浮点cv:：mcc:：DetectorParameters:：B0factor"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "borderWidth",
    "local": "边框宽度"
  },
  {
    "origin": "int cv::mcc::DetectorParameters::borderWidth",
    "local": "int cv：：mcc：：参数检测器：：borderWidth"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "confidenceThreshold",
    "local": "信心阈值"
  },
  {
    "origin": "double cv::mcc::DetectorParameters::confidenceThreshold",
    "local": "双cv:：mcc:：DetectorParameters:：confidenceThreshold"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "findCandidatesApproxPolyDPEpsMultiplier",
    "local": "查找候选人ApproxPolyDPEpsMultiplier"
  },
  {
    "origin": "double cv::mcc::DetectorParameters::findCandidatesApproxPolyDPEpsMultiplier",
    "local": "双cv:：mcc:：DetectorParameters:：findCandidatesApproxPolyDPEpsMultiplier"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "maxError",
    "local": "最大误差"
  },
  {
    "origin": "float cv::mcc::DetectorParameters::maxError",
    "local": "浮点cv:：mcc:：DetectorParameters:：maxError"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "minContourLengthAllowed",
    "local": "米恩特洛维德"
  },
  {
    "origin": "int cv::mcc::DetectorParameters::minContourLengthAllowed",
    "local": "int cv：：mcc：：参数检测器：：minContourLengthLowed"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "minContourPointsAllowed",
    "local": "糜烂的"
  },
  {
    "origin": "int cv::mcc::DetectorParameters::minContourPointsAllowed",
    "local": "int cv：：mcc：：参数检测器：：minContourPointsAllowed"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "minContoursArea",
    "local": "小沙雷"
  },
  {
    "origin": "double cv::mcc::DetectorParameters::minContoursArea",
    "local": "双CV：：MCC：：检测器参数：：MinContoursArea"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "minContoursAreaRate",
    "local": "硬脂酸盐"
  },
  {
    "origin": "double cv::mcc::DetectorParameters::minContoursAreaRate",
    "local": "双CV：：MCC：：检测器参数：：MinContoursAreate"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "minContourSolidity",
    "local": "最小硬度"
  },
  {
    "origin": "double cv::mcc::DetectorParameters::minContourSolidity",
    "local": "双cv:：mcc:：DetectorParameters:：minContourSolidity"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "minGroupSize",
    "local": "最小组大小"
  },
  {
    "origin": "unsigned cv::mcc::DetectorParameters::minGroupSize",
    "local": "无符号cv:：mcc:：DetectorParameters:：minGroupSize"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "minImageSize",
    "local": "最小尺寸"
  },
  {
    "origin": "int cv::mcc::DetectorParameters::minImageSize",
    "local": "int cv：：mcc：：DetectorParameters：：minImageSize"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "minInterCheckerDistance",
    "local": "最小交互距离"
  },
  {
    "origin": "int cv::mcc::DetectorParameters::minInterCheckerDistance",
    "local": "int cv:：mcc:：DetectorParameters:：minInterCheckerDistance"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "minInterContourDistance",
    "local": "最小间隔"
  },
  {
    "origin": "int cv::mcc::DetectorParameters::minInterContourDistance",
    "local": "int cv：：mcc：：DetectorParameters：：最小间隔距离"
  },
  {
    "origin": "The documentation for this struct was generated from the following file:",
    "local": "此结构的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/mcc/",
    "local": "OpenCV2/MCC/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:48为OpenCV生成，&#160；"
  }
]