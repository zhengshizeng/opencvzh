[
  {
    "origin": "OpenCV: cv::cuda::CannyEdgeDetector Class Reference",
    "local": "OpenCV:cv:：cuda:：CannyEdgeDetector类引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::cuda::CannyEdgeDetector Class Reference",
    "local": "cv:：cuda:：CannyEdgeDetector类参考"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "&raquo;",
    "local": "&引用；"
  },
  {
    "origin": "Base class for Canny Edge Detector. :",
    "local": "Canny边缘检测器的基类："
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::cuda::CannyEdgeDetector:",
    "local": "cv:：cuda:：CannyEdgeDetector的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image,",
    "local": "图像，"
  },
  {
    "origin": "edges,",
    "local": "边缘，"
  },
  {
    "origin": "&amp;stream=",
    "local": "&amp；溪流="
  },
  {
    "origin": "Finds edges in an image using the",
    "local": "使用"
  },
  {
    "origin": "algorithm.",
    "local": "算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "dx,",
    "local": "dx公司，"
  },
  {
    "origin": "dy,",
    "local": "迪伊，"
  },
  {
    "origin": "edges,",
    "local": "边缘，"
  },
  {
    "origin": "&amp;stream=",
    "local": "&amp；溪流="
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": "&#160;继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Protected Member Functions inherited from",
    "local": "&#160;继承自的受保护成员函数"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Base class for Canny Edge Detector. :",
    "local": "Canny边缘检测器的基类："
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "detect()",
    "local": "检测（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "virtual void cv::cuda::CannyEdgeDetector::detect",
    "local": "虚空cv:：cuda:：CannyEdgeDetector:：detect"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "edges",
    "local": "边缘"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Finds edges in an image using the",
    "local": "使用"
  },
  {
    "origin": "algorithm.",
    "local": "算法。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": "Single-channel 8-bit input image.",
    "local": "单通道8位输入图像。"
  },
  {
    "origin": "edges",
    "local": "边缘"
  },
  {
    "origin": "Output edge map. It has the same size and type as image.",
    "local": "输出边映射。它的大小和类型与图像相同。"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "for the asynchronous version.",
    "local": "对于异步版本。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "detect()",
    "local": "检测（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "virtual void cv::cuda::CannyEdgeDetector::detect",
    "local": "虚空cv:：cuda:：CannyEdgeDetector:：detect"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "dx",
    "local": "dx公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dy",
    "local": "戴"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "edges",
    "local": "边缘"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "dx",
    "local": "dx公司"
  },
  {
    "origin": "First derivative of image in the vertical direction. Support only CV_32S type.",
    "local": "图像在垂直方向上的一阶导数。仅支持CVň32S类型。"
  },
  {
    "origin": "dy",
    "local": "戴"
  },
  {
    "origin": "First derivative of image in the horizontal direction. Support only CV_32S type.",
    "local": "图像在水平方向上的一阶导数。仅支持CVň32S类型。"
  },
  {
    "origin": "edges",
    "local": "边缘"
  },
  {
    "origin": "Output edge map. It has the same size and type as image.",
    "local": "输出边映射。它的大小和类型与图像相同。"
  },
  {
    "origin": "stream",
    "local": "流动"
  },
  {
    "origin": "for the asynchronous version.",
    "local": "对于异步版本。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getAppertureSize()",
    "local": "getAppertureSize（）"
  },
  {
    "origin": "virtual int cv::cuda::CannyEdgeDetector::getAppertureSize",
    "local": "虚拟int cv:：cuda:：CannyEdgeDetector:：getAppertureSize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getHighThreshold()",
    "local": "getHighThreshold（）"
  },
  {
    "origin": "virtual double cv::cuda::CannyEdgeDetector::getHighThreshold",
    "local": "虚拟双cv:：cuda:：CannyEdgeDetector:：getHighThreshold"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getL2Gradient()",
    "local": "getL2Gradient（）"
  },
  {
    "origin": "virtual bool cv::cuda::CannyEdgeDetector::getL2Gradient",
    "local": "虚拟bool cv:：cuda:：CannyEdgeDetector:：getL2Gradient"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getLowThreshold()",
    "local": "getLowThreshold（）"
  },
  {
    "origin": "virtual double cv::cuda::CannyEdgeDetector::getLowThreshold",
    "local": "虚拟双cv:：cuda:：CannyEdgeDetector:：getLowThreshold"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setAppertureSize()",
    "local": "setAppertureSize（）"
  },
  {
    "origin": "virtual void cv::cuda::CannyEdgeDetector::setAppertureSize",
    "local": "虚拟空cv:：cuda:：CannyEdgeDetector:：setAppertureSize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "apperture_size",
    "local": "应用程序大小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setHighThreshold()",
    "local": "设置高阈值（）"
  },
  {
    "origin": "virtual void cv::cuda::CannyEdgeDetector::setHighThreshold",
    "local": "虚空cv:：cuda:：CannyEdgeDetector:：setHighThreshold"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "high_thresh",
    "local": "高阈值"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setL2Gradient()",
    "local": "设置梯度（）"
  },
  {
    "origin": "virtual void cv::cuda::CannyEdgeDetector::setL2Gradient",
    "local": "虚空cv:：cuda:：CannyEdgeDetector:：setL2Gradient"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "L2gradient",
    "local": "L2梯度"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "setLowThreshold()",
    "local": "设置低阈值（）"
  },
  {
    "origin": "virtual void cv::cuda::CannyEdgeDetector::setLowThreshold",
    "local": "虚空cv:：cuda:：CannyEdgeDetector:：setLowThreshold"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "low_thresh",
    "local": "低谷"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:44 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:44为OpenCV生成，&#160；"
  }
]