[
  {
    "origin": "OpenCV: cv::gapi::detail Namespace Reference",
    "local": "OpenCV:cv:：gapi:：detail命名空间引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "cv::gapi::detail Namespace Reference",
    "local": "cv:：gapi:：detail命名空间引用"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "try_deserialize_comparg&lt; std::tuple&lt; T, Types... &gt; &gt;",
    "local": "尝试反序列化比较（&L）标准：：元组（&L）T、类型（&T）&gt；燃气轮机；"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;in, const size_t n)",
    "local": "&amp；英寸，常量大小\\n）"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;in)",
    "local": "&amp；英寸）"
  },
  {
    "origin": "template&lt;typename... Types&gt;",
    "local": "模板&lt；类型名。。。类型&gt；"
  },
  {
    "origin": "(const std::vector&lt; char &gt; &amp;p)",
    "local": "（const std：：向量&lt；字符&gt&amp；（p）"
  },
  {
    "origin": "(const std::vector&lt; char &gt; &amp;p)",
    "local": "（const std：：向量&lt；字符&gt&amp；（p）"
  },
  {
    "origin": "(const std::vector&lt; char &gt; &amp;p)",
    "local": "（const std：：向量&lt；字符&gt&amp；（p）"
  },
  {
    "origin": "(const std::vector&lt; char &gt; &amp;p)",
    "local": "（const std：：向量&lt；字符&gt&amp；（p）"
  },
  {
    "origin": "template&lt;typename RMatAdapterType &gt;",
    "local": "模板&lt；类型格式适配器类型&gt；"
  },
  {
    "origin": "(const std::vector&lt; char &gt; &amp;p)",
    "local": "（const std：：向量&lt；字符&gt&amp；（p）"
  },
  {
    "origin": "(const std::vector&lt; char &gt; &amp;p)",
    "local": "（const std：：向量&lt；字符&gt&amp；（p）"
  },
  {
    "origin": "template&lt;typename... Types&gt;",
    "local": "模板&lt；类型名。。。类型&gt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "(const std::string &amp;tag, const std::vector&lt; char &gt; &amp;sArg)",
    "local": "（const std：：字符串&amp；标记，const std:：vector&lt；字符&gt&amp；（新加坡特区政府）"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "checkVector()",
    "local": "checkVector（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "int cv::gapi::detail::checkVector",
    "local": "int cv:：gapi:：detail:：checkVector"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "in",
    "local": "在里面"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "n",
    "local": "n"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Checks",
    "local": "检查"
  },
  {
    "origin": "fields if the passed matrix is a set of n-dimentional points.",
    "local": "字段，如果传递的矩阵是一组n维点。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "in",
    "local": "在里面"
  },
  {
    "origin": "to check.",
    "local": "检查。"
  },
  {
    "origin": "n",
    "local": "n"
  },
  {
    "origin": "expected dimensionality.",
    "local": "预期维度。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "checkVector()",
    "local": "checkVector（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "std::vector&lt;int&gt; cv::gapi::detail::checkVector",
    "local": "标准：：向量&lt；内部&gt；cv：：gapi：：细节：：checkVector"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "in",
    "local": "在里面"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Checks",
    "local": "检查"
  },
  {
    "origin": "fields if the passed matrix can be described as a set of points of any dimensionality.",
    "local": "如果传递的矩阵可以描述为一组任意维数的点，则字段。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "array of two elements in form of std::vector&lt;int&gt;: the amount of points and their calculated dimensionality. In case input matrix can't be described as vector of points, returns {-1, -1}.",
    "local": "std：：vector形式的两个元素的数组&lt；内部（&gt）：点的数量及其计算的维数。如果输入矩阵不能描述为点的向量，则返回{-1，-1}。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getCompileArgs()",
    "local": "getCompileArgs（）"
  },
  {
    "origin": "template&lt;typename... Types&gt;",
    "local": "模板&lt；类型名。。。类型&gt；"
  },
  {
    "origin": "cv::gapi::detail::getCompileArgs",
    "local": "cv:：gapi:：detail:：getCompileArgs"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "p",
    "local": "p"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getGraph()",
    "local": "GetGraph（）"
  },
  {
    "origin": "cv::gapi::detail::getGraph",
    "local": "cv:：gapi:：细节：：getGraph"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "p",
    "local": "p"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getMetaArgs()",
    "local": "getMetaArgs（）"
  },
  {
    "origin": "cv::gapi::detail::getMetaArgs",
    "local": "cv:：gapi:：细节：：getMetaArgs"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "p",
    "local": "p"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getRunArgs()",
    "local": "getRunArgs（）"
  },
  {
    "origin": "cv::gapi::detail::getRunArgs",
    "local": "cv:：gapi:：细节：：getRunArgs"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "p",
    "local": "p"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getRunArgsWithRMats()",
    "local": "GetRunArgSwithFormats（）"
  },
  {
    "origin": "template&lt;typename RMatAdapterType &gt;",
    "local": "模板&lt；类型格式适配器类型&gt；"
  },
  {
    "origin": "cv::gapi::detail::getRunArgsWithRMats",
    "local": "cv:：gapi:：详细信息：：getRunArgsWithRMats"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "p",
    "local": "p"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "getVectorOfStrings()",
    "local": "getVectorOfStrings（）"
  },
  {
    "origin": "std::vector&lt;std::string&gt; cv::gapi::detail::getVectorOfStrings",
    "local": "标准：：向量&lt；标准：：字符串&gt；cv:：gapi:：detail:：getvectorOfstring"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "p",
    "local": "p"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "tryDeserializeCompArg()",
    "local": "trydeg（）"
  },
  {
    "origin": "template&lt;typename... Types&gt;",
    "local": "模板&lt；类型名。。。类型&gt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::detail::tryDeserializeCompArg",
    "local": "&燃气轮机；cv：：gapi：：详细信息：：TRYDEG"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "tag",
    "local": "标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "sArg",
    "local": "sArg公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:47为OpenCV生成，&#160；"
  }
]