[
  {
    "origin": "OpenCV: cv::ml::ANN_MLP Class Reference",
    "local": "OpenCV:cv:：ml:：ANN\\u MLP类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::ml::ANN_MLP Class Reference",
    "local": "cv:：ml:：ANN\\u MLP类参考"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "Artificial Neural Networks - Multi-Layer Perceptrons.",
    "local": "人工神经网络-多层感知器。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::ml::ANN_MLP:",
    "local": "cv:：ml:：ANN\\u MLP的继承关系图："
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Public Types inherited from",
    "local": "继承自的公共类型"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual double",
    "local": "虚拟双人床"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "Set/initialize anneal",
    "local": "设置/初始化退火"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;data, bool test,",
    "local": "&gt；gt；amp；数据，布尔测试，"
  },
  {
    "origin": "resp) const",
    "local": "（负责）施工"
  },
  {
    "origin": "Computes error on the training or test dataset.",
    "local": "计算训练或测试数据集上的错误。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "Returns the number of variables in training samples.",
    "local": "返回训练样本中的变量数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "Returns true if the model is classifier.",
    "local": "如果模型是分类器，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "Returns true if the model is trained.",
    "local": "如果模型经过训练，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual float",
    "local": "虚拟浮动"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples,",
    "local": "样品，"
  },
  {
    "origin": "results=",
    "local": "结果="
  },
  {
    "origin": "(), int flags=0) const =0",
    "local": "（），int flags=0）const=0"
  },
  {
    "origin": "Predicts response(s) for the provided sample(s)",
    "local": "预测所提供样本的响应"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;trainData, int flags=0)",
    "local": "&gt；gt；amp；列车数据，int标志=0）"
  },
  {
    "origin": "Trains the statistical model.",
    "local": "训练统计模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "samples, int layout,",
    "local": "样本，int布局，"
  },
  {
    "origin": "responses)",
    "local": "答复）"
  },
  {
    "origin": "Trains the statistical model.",
    "local": "训练统计模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Creates empty model.",
    "local": "创建空模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filepath)",
    "local": "&amp；文件路径）"
  },
  {
    "origin": "Loads and creates a serialized ANN from a file.",
    "local": "从文件加载并创建序列化的ANN。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;data, int flags=0)",
    "local": "&燃气轮机&amp；数据，int标志=0）"
  },
  {
    "origin": "Create and train model with default parameters.",
    "local": "使用默认参数创建和训练模型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Artificial Neural Networks - Multi-Layer Perceptrons.",
    "local": "人工神经网络-多层感知器。"
  },
  {
    "origin": "Unlike many other models in ML that are constructed and trained at once, in the MLP model these steps are separated. First, a network with the specified topology is created using the non-default constructor or the method",
    "local": "与ML中许多其他模型同时构造和训练不同，在MLP模型中，这些步骤是分开的。首先，使用非默认构造函数或方法创建具有指定拓扑的网络"
  },
  {
    "origin": ". All the weights are set to zeros. Then, the network is trained using a set of input and output vectors. The training procedure can be repeated more than once, that is, the weights can be adjusted based on the new training data.",
    "local": ". 所有权重都设置为零。然后，使用一组输入和输出向量对网络进行训练。训练过程可以重复多次，即可以根据新的训练数据调整权重。"
  },
  {
    "origin": "Additional flags for",
    "local": "的附加标志"
  },
  {
    "origin": "are available:",
    "local": "可提供："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": "成员枚举文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "ActivationFunctions",
    "local": "激活功能"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "possible activation functions",
    "local": "可能的激活功能"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "IDENTITY",
    "local": "身份"
  },
  {
    "origin": "Identity function: \\(f(x)=x\\)",
    "local": "恒等函数：\\（f（x）=x\\）"
  },
  {
    "origin": "SIGMOID_SYM",
    "local": "乙状结肠"
  },
  {
    "origin": "Symmetrical sigmoid: \\(f(x)=\\beta*(1-e^{-\\alpha x})/(1+e^{-\\alpha x})\\)",
    "local": "对称乙状结肠：\\（f（x）=\\beta*（1-e^{-\\alpha x}）/（1+e^{-\\alpha x}）\\）"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "If you are using the default sigmoid activation function with the default parameter values fparam1=0 and fparam2=0 then the function used is y = 1.7159*tanh(2/3 * x), so the output will range from [-1.7159, 1.7159], instead of [0,1].",
    "local": "如果使用默认参数值fparam1=0和fparam2=0的默认sigmoid激活函数，则使用的函数为y=1.7159*tanh（2/3*x），因此输出范围为[-1.7159，1.7159]，而不是[0,1]。"
  },
  {
    "origin": "GAUSSIAN",
    "local": "高斯分布"
  },
  {
    "origin": "Gaussian function: \\(f(x)=\\beta e^{-\\alpha x*x}\\)",
    "local": "高斯函数：\\（f（x）=\\beta e^{-\\alpha x*x}\\）"
  },
  {
    "origin": "RELU",
    "local": "雷卢"
  },
  {
    "origin": "ReLU function: \\(f(x)=max(0,x)\\)",
    "local": "ReLU函数：\\（f（x）=max（0，x）\\）"
  },
  {
    "origin": "LEAKYRELU",
    "local": "显示器"
  },
  {
    "origin": "Leaky ReLU function: for x&gt;0 \\(f(x)=x \\) and x&lt;=0 \\(f(x)=\\alpha x \\)",
    "local": "泄漏ReLU函数：对于x&gt；0\\（f（x）=x\\）和x&lt=0\\（f（x）=\\alpha x\\）"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "TrainFlags",
    "local": "列车旗"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "Train options",
    "local": "列车选项"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "UPDATE_WEIGHTS",
    "local": "更新\\u权重"
  },
  {
    "origin": "Update the network weights, rather than compute them from scratch. In the latter case the weights are initialized using the Nguyen-Widrow algorithm.",
    "local": "更新网络权重，而不是从头开始计算。在后一种情况下，使用Nguyen-Widrow算法初始化权重。"
  },
  {
    "origin": "NO_INPUT_SCALE",
    "local": "无输入刻度"
  },
  {
    "origin": "Do not normalize the input vectors. If this flag is not set, the training algorithm normalizes each input feature independently, shifting its mean value to 0 and making the standard deviation equal to 1. If the network is assumed to be updated frequently, the new training data could be much different from original one. In this case, you should take care of proper normalization.",
    "local": "不要规范化输入向量。如果不设置此标志，则训练算法独立地对每个输入特征进行归一化，将其平均值移到0，并使标准差等于1。如果假设网络频繁更新，则新的训练数据可能与原始数据有很大不同。在这种情况下，您应该注意适当的规范化。"
  },
  {
    "origin": "NO_OUTPUT_SCALE",
    "local": "无输出刻度"
  },
  {
    "origin": "Do not normalize the output vectors. If the flag is not set, the training algorithm normalizes each output feature independently, by transforming it to the certain range depending on the used activation function.",
    "local": "不要规范化输出向量。如果没有设置标志，则训练算法通过根据所使用的激活函数将每个输出特征变换到特定范围，从而独立地对每个输出特征进行规格化。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "TrainingMethods",
    "local": "培训方法"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "Available training methods",
    "local": "可用的培训方法"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "BACKPROP",
    "local": "后支柱"
  },
  {
    "origin": "The back-propagation algorithm.",
    "local": "反向传播算法。"
  },
  {
    "origin": "RPROP",
    "local": "RPROP公司"
  },
  {
    "origin": "The RPROP algorithm. See",
    "local": "RPROP算法。看到了吗"
  },
  {
    "origin": "for details.",
    "local": "详情。"
  },
  {
    "origin": "ANNEAL",
    "local": "退火"
  },
  {
    "origin": "The simulated annealing algorithm. See",
    "local": "模拟退火算法。看到了吗"
  },
  {
    "origin": "for details.",
    "local": "详情。"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::ml::ANN_MLP::create",
    "local": "&燃气轮机；cv:：ml:：ANN\\ MLP:：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml.ANN_MLP_create(",
    "local": "简历ml.ANN\\u MLP\\u create("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Creates empty model.",
    "local": "创建空模型。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "to train the model,",
    "local": "为了训练模特，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;(filename) to load the pre-trained model. Note that the train method has optional flags:",
    "local": "&燃气轮机(文件名）加载预先训练的模型。注意，train方法有可选标志："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getAnnealCoolingRatio()",
    "local": "GetAnnealCoolingRatio（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getAnnealCoolingRatio",
    "local": "虚拟双cv：：ml：：ANN\\U MLP：：GetAnnealColingratio"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getAnnealCoolingRatio(",
    "local": "cv.ml ANN-u MLP.GETANNEALCOLINGRATIO公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "ANNEAL: Update cooling ratio. It must be &gt;0 and less than 1. Default value is 0.95.",
    "local": "退火：更新冷却比。必须是&gt；0且小于1。默认值为0.95。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getAnnealFinalT()",
    "local": "getannealfinalt（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getAnnealFinalT",
    "local": "虚拟双cv：：ml：：ANN\\u MLP：：getannelfinat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getAnnealFinalT(",
    "local": "cv.ml ANN-u MLP.GETANNALFINALT公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "ANNEAL: Update final temperature. It must be &gt;=0 and less than initialT. Default value is 0.1.",
    "local": "退火：更新最终温度。必须是&gt=0且小于初始值。默认值为0.1。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getAnnealInitialT()",
    "local": "getAnneAliInitialt（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getAnnealInitialT",
    "local": "虚拟双cv:：ml:：ANN\\u MLP:：GetAnneAliInitialt"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getAnnealInitialT(",
    "local": "cv.ml ANN-u MLP.GETANNALINITIALT公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "ANNEAL: Update initial temperature. It must be &gt;=0. Default value is 10.",
    "local": "退火：更新初始温度。必须是&gt=0。默认值为10。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getAnnealItePerStep()",
    "local": "getannaliteperstep（）"
  },
  {
    "origin": "virtual int cv::ml::ANN_MLP::getAnnealItePerStep",
    "local": "虚拟int cv:：ml:：ANN\\u MLP:：getannaliteperstep"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getAnnealItePerStep(",
    "local": "cv.ml ANN-u MLP.getAnnealIteStep公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "ANNEAL: Update iteration per step. It must be &gt;0 . Default value is 10.",
    "local": "退火：每一步更新迭代。必须是&gt；0 . 默认值为10。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getBackpropMomentumScale()",
    "local": "getBackpropMomentumScale（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getBackpropMomentumScale",
    "local": "虚拟双cv:：ml:：ANN\\ MLP:：getBackpropMomentumScale"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getBackpropMomentumScale(",
    "local": "cv.ml\\u ANN\\u MLP.GetBackPropmentumScale公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "BPROP: Strength of the momentum term (the difference between weights on the 2 previous iterations). This parameter provides some inertia to smooth the random fluctuations of the weights. It can vary from 0 (the feature is disabled) to 1 and beyond. The value 0.1 or so is good enough. Default value is 0.1.",
    "local": "BPROP：动量项的强度（前两次迭代的权重之差）。这个参数提供了一些惯性来平滑权重的随机波动。它可以从0（功能已禁用）到1或更高。值0.1左右就足够了。默认值为0.1。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getBackpropWeightScale()",
    "local": "getBackpropWeightScale（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getBackpropWeightScale",
    "local": "虚拟双cv:：ml:：ANN\\MLP:：getBackpropWeightScale"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getBackpropWeightScale(",
    "local": "cv.ml\\u ANN\\u MLP.getBackpropWeightScale公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "BPROP: Strength of the weight gradient term. The recommended value is about 0.1. Default value is 0.1.",
    "local": "BPROP：权重梯度项的强度。建议值约为0.1。默认值为0.1。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getLayerSizes()",
    "local": "getLayerSizes（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::ANN_MLP::getLayerSizes",
    "local": "cv:：ml:：ANN-u MLP:：getLayerSizes"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getLayerSizes(",
    "local": "cv.ml ANN-u MLP.getLayerSizes公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Integer vector specifying the number of neurons in each layer including the input and output layers. The very first element specifies the number of elements in the input layer. The last element - number of elements in the output layer.",
    "local": "整数向量，指定每个层（包括输入层和输出层）中的神经元数量。第一个元素指定输入层中元素的数量。最后一个元素—输出层中的元素数。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getRpropDW0()",
    "local": "getRpropDW0（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getRpropDW0",
    "local": "虚拟双cv:：ml:：ANN\\ MLP:：getRpropDW0"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getRpropDW0(",
    "local": "cv.ml ANN-u MLP.getRpropDW0型("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getRpropDWMax()",
    "local": "getRpropDWMax（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getRpropDWMax",
    "local": "虚拟双cv:：ml:：ANN\\MLP:：getRpropDWMax"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getRpropDWMax(",
    "local": "CV.ml ANN MLP.getRpropDWMax（最大值）("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "RPROP: Update-values upper limit \\(\\Delta_{max}\\). It must be &gt;1. Default value is 50.",
    "local": "RPROP:更新值上限\\（\\Delta{max}\\）。必须是&gt；1.默认值为50。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getRpropDWMin()",
    "local": "getRpropDWMin（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getRpropDWMin",
    "local": "虚拟双cv:：ml:：ANN\\MLP:：getRpropDWMin"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getRpropDWMin(",
    "local": "简历("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "RPROP: Update-values lower limit \\(\\Delta_{min}\\). It must be positive. Default value is FLT_EPSILON.",
    "local": "RPROP:更新值下限\\（\\Delta{min}\\）。一定是积极的。默认值为FLT\\u EPSILON。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getRpropDWMinus()",
    "local": "getRpropDWMinus（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getRpropDWMinus",
    "local": "虚拟双cv:：ml:：ANN\\MLP:：getRpropDWMinus"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getRpropDWMinus(",
    "local": "简历("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "RPROP: Decrease factor \\(\\eta^-\\). It must be &lt;1. Default value is 0.5.",
    "local": "RPROP：减少因子\\（\\eta^-\\）。必须是&lt；1.默认值为0.5。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getRpropDWPlus()",
    "local": "getRpropDWPlus（）"
  },
  {
    "origin": "virtual double cv::ml::ANN_MLP::getRpropDWPlus",
    "local": "虚拟双cv:：ml:：ANN\\ MLP:：getRpropDWPlus"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getRpropDWPlus(",
    "local": "简历：ml\\u ANN\\u MLP.getRpropDWPlus("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "RPROP: Increase factor \\(\\eta^+\\). It must be &gt;1. Default value is 1.2.",
    "local": "RPROP：增加因子\\（\\eta^+\\）。必须是&gt；1.默认值为1.2。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getTermCriteria()",
    "local": "getTermCriteria（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::ANN_MLP::getTermCriteria",
    "local": "cv:：ml:：ANN-u MLP:：getTermCriteria条件"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getTermCriteria(",
    "local": "cv.ml ANN-u MLP.getterm标准"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Termination criteria of the training algorithm. You can specify the maximum number of iterations (maxCount) and/or how much the error could change between the iterations to make the algorithm continue (epsilon). Default value is",
    "local": "训练算法的终止准则。您可以指定最大迭代次数（maxCount）和/或迭代之间的误差变化量，以使算法继续（epsilon）。默认值为"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "+",
    "local": "+"
  },
  {
    "origin": ", 1000, 0.01).",
    "local": ", 1000, 0.01)."
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getTrainMethod()",
    "local": "getTrainMethod（）"
  },
  {
    "origin": "virtual int cv::ml::ANN_MLP::getTrainMethod",
    "local": "虚int cv:：ml:：ANN\\MLP:：getTrainMethod"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getTrainMethod(",
    "local": "cv.ml\\u ANN\\u MLP.gettrain方法("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns current training method",
    "local": "返回当前训练方法"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getWeights()",
    "local": "获取权重（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::ml::ANN_MLP::getWeights",
    "local": "cv:：ml:：ANN\\ MLP:：获取权重"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "layerIdx",
    "local": "layerIdx公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.getWeights(",
    "local": "cv.ml\\u ANN\\u MLP.getWeights公司("
  },
  {
    "origin": "layerIdx",
    "local": "layerIdx公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "load()",
    "local": "加载（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::ml::ANN_MLP::load",
    "local": "&燃气轮机；cv:：ml:：ANN\\ MLP:：加载"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filepath",
    "local": "文件路径"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml.ANN_MLP_load(",
    "local": "cv.ml.ANN\\U MLP\\U负荷("
  },
  {
    "origin": "filepath",
    "local": "文件路径"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Loads and creates a serialized ANN from a file.",
    "local": "从文件加载并创建序列化的ANN。"
  },
  {
    "origin": "Use ANN::save to serialize and store an ANN to disk. Load the ANN from this file again, by calling this function with the path to the file.",
    "local": "使用ANN：：save将ANN序列化并存储到磁盘。通过使用文件路径调用此函数，再次从此文件加载ANN。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filepath",
    "local": "文件路径"
  },
  {
    "origin": "path to serialized ANN",
    "local": "序列化ANN的路径"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setActivationFunction()",
    "local": "setActivationFunction（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setActivationFunction",
    "local": "虚空cv:：ml:：ANN\\MLP:：setActivationFunction"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "param1",
    "local": "参数1"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "param2",
    "local": "参数2"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setActivationFunction(",
    "local": "cv.ml\\u ANN\\u MLP.setActivation函数("
  },
  {
    "origin": "type[, param1[, param2]]",
    "local": "类型[，param1[，param2]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Initialize the activation function for each neuron. Currently the default and the only fully supported activation function is",
    "local": "初始化每个神经元的激活功能。目前，默认和唯一完全支持的激活功能是"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": "The type of activation function. See",
    "local": "激活函数的类型。看到了吗"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "param1",
    "local": "参数1"
  },
  {
    "origin": "param2",
    "local": "参数2"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setAnnealCoolingRatio()",
    "local": "setannealcolinglatio（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setAnnealCoolingRatio",
    "local": "虚拟空cv：：ml：：ANN\\u MLP：：SetAnnealColingratio"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setAnnealCoolingRatio(",
    "local": "cv.ml ANN-u MLP.SETANNEALCOLINGRATIO公司"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setAnnealEnergyRNG()",
    "local": "setAnnealEnergyRNG（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setAnnealEnergyRNG",
    "local": "虚空cv:：ml:：ANN\\MLP:：setAnnealEnergyRNG"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "rng",
    "local": "rng公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Set/initialize anneal",
    "local": "设置/初始化退火"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setAnnealFinalT()",
    "local": "setAnnealFinalT（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setAnnealFinalT",
    "local": "虚空cv:：ml:：ANN-u MLP:：setannelfinat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setAnnealFinalT(",
    "local": "cv.ml ANN-u MLP.SETANNALFINALT公司("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setAnnealInitialT()",
    "local": "setannalinitialt（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setAnnealInitialT",
    "local": "虚空cv:：ml:：ANN\\MLP:：setannAlinitialt"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setAnnealInitialT(",
    "local": "cv.ml.ANN-u MLP.SETANNALInitialt公司("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setAnnealItePerStep()",
    "local": "setannaliteperstep（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setAnnealItePerStep",
    "local": "虚空cv:：ml:：ANN\\MLP:：setannaliteperstep"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setAnnealItePerStep(",
    "local": "cv.ml ANN-u MLP.SETANNALITESTEP公司("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setBackpropMomentumScale()",
    "local": "倒退动量标度（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setBackpropMomentumScale",
    "local": "虚空cv:：ml:：ANN\\ MLP:：setBackpropMomentumScale"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setBackpropMomentumScale(",
    "local": "cv.ml\\u ANN\\u MLP.setbackPropmentumScale公司("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setBackpropWeightScale()",
    "local": "setBackpropWeightScale（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setBackpropWeightScale",
    "local": "虚空cv:：ml:：ANN\\MLP:：setBackpropWeightScale"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setBackpropWeightScale(",
    "local": "cv.ml\\u ANN\\u MLP.setBackpropWeightScale公司("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setLayerSizes()",
    "local": "setLayerSizes（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setLayerSizes",
    "local": "虚拟void cv:：ml:：ANN\\MLP:：setLayerSizes"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "_layer_sizes",
    "local": "_图层大小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setLayerSizes(",
    "local": "cv.ml ANN-u MLP.setLayerSizes公司"
  },
  {
    "origin": "_layer_sizes",
    "local": "_图层大小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Integer vector specifying the number of neurons in each layer including the input and output layers. The very first element specifies the number of elements in the input layer. The last element - number of elements in the output layer. Default value is empty",
    "local": "整数向量，指定每个层（包括输入层和输出层）中的神经元数量。第一个元素指定输入层中元素的数量。最后一个元素—输出层中的元素数。默认值为空"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setRpropDW0()",
    "local": "setRpropDW0（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setRpropDW0",
    "local": "虚空cv:：ml:：ANN\\MLP:：setRpropDW0"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setRpropDW0(",
    "local": "cv.ml\\U ANN\\U MLP.setRpropDW0设置("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setRpropDWMax()",
    "local": "setRpropDWMax（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setRpropDWMax",
    "local": "虚空cv:：ml:：ANN\\MLP:：setRpropDWMax"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setRpropDWMax(",
    "local": "cv.ml\\U ANN\\U MLP.setRpropDWMax设定值("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setRpropDWMin()",
    "local": "setRpropDWMin（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setRpropDWMin",
    "local": "虚空cv:：ml:：ANN\\MLP:：setRpropDWMin"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setRpropDWMin(",
    "local": "cv.ml\\U ANN\\U MLP.setRpropDWMin公司("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setRpropDWMinus()",
    "local": "setRpropDWMinus（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setRpropDWMinus",
    "local": "虚空cv:：ml:：ANN\\MLP:：setRpropDWMinus"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setRpropDWMinus(",
    "local": "简历("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setRpropDWPlus()",
    "local": "setRpropDWPlus（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setRpropDWPlus",
    "local": "虚空cv:：ml:：ANN\\MLP:：setRpropDWPlus"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setRpropDWPlus(",
    "local": "cv.ml\\U ANN\\U MLP.setRpropDWPlus公司("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setTermCriteria()",
    "local": "setTermCriteria（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setTermCriteria",
    "local": "虚空cv:：ml:：ANN\\MLP:：setTermCriteria"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setTermCriteria(",
    "local": "cv.ml\\u ANN\\u MLP.setterm标准("
  },
  {
    "origin": "val",
    "local": "瓦尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setTrainMethod()",
    "local": "setTrainMethod（）"
  },
  {
    "origin": "virtual void cv::ml::ANN_MLP::setTrainMethod",
    "local": "虚空cv:：ml:：ANN\\MLP:：setTrainMethod"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "method",
    "local": "方法"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "param1",
    "local": "参数1"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "param2",
    "local": "参数2"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.ml_ANN_MLP.setTrainMethod(",
    "local": "cv.ml\\u ANN\\u MLP.settrain方法("
  },
  {
    "origin": "method[, param1[, param2]]",
    "local": "方法[，param1[，param2]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Sets training method and common parameters.",
    "local": "设置训练方法和常用参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "method",
    "local": "方法"
  },
  {
    "origin": "Default value is",
    "local": "默认值为"
  },
  {
    "origin": ". See",
    "local": ". 看到了吗"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "param1",
    "local": "参数1"
  },
  {
    "origin": "passed to setRpropDW0 for",
    "local": "传递给setRpropDW0"
  },
  {
    "origin": "and to setBackpropWeightScale for",
    "local": "以及为了"
  },
  {
    "origin": "and to initialT for",
    "local": "以及缩写"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "param2",
    "local": "参数2"
  },
  {
    "origin": "passed to setRpropDWMin for",
    "local": "传递给setRpropDWMin"
  },
  {
    "origin": "and to setBackpropMomentumScale for",
    "local": "以及倒退的速度"
  },
  {
    "origin": "and to finalT for",
    "local": "还有两个决赛"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:48为OpenCV生成"
  }
]