[
  {
    "origin": "OpenCV: cv::ConjGradSolver Class Reference",
    "local": "OpenCV:cv:：congGradSolver类引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::ConjGradSolver Class Reference",
    "local": "cv:：CongGradSolver类参考"
  },
  {
    "origin": "&raquo;",
    "local": "&引用；"
  },
  {
    "origin": "This class is used to perform the non-linear non-constrained minimization of a function with known gradient,.",
    "local": "此类用于对具有已知梯度的函数执行非线性无约束极小化，。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::ConjGradSolver:",
    "local": "cv:：CongGradSolver的继承关系图："
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;f=",
    "local": "&燃气轮机&amp；f级="
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;(),",
    "local": "&gt；（），"
  },
  {
    "origin": "termcrit=",
    "local": "特姆克里特="
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "+",
    "local": "+"
  },
  {
    "origin": ", 5000, 0.000001))",
    "local": ", 5000, 0.000001))"
  },
  {
    "origin": "This function returns the reference to the ready-to-use",
    "local": "此函数返回对准备使用的"
  },
  {
    "origin": "object.",
    "local": "对象。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": "&#160;继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "Getter for the optimized function.",
    "local": "优化函数的Getter。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Getter for the previously set terminal criteria for this algorithm.",
    "local": "用于此算法的先前设置的终端条件的Getter。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "actually runs the algorithm and performs the minimization.",
    "local": "实际运行算法并执行最小化。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "Setter for the optimized function.",
    "local": "优化函数的Setter。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "Set terminal criteria for solver.",
    "local": "为解算器设置端子条件。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": "&#160;公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&#160;Protected Member Functions inherited from",
    "local": "&#160;继承自的受保护成员函数"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "This class is used to perform the non-linear non-constrained minimization of a function with known gradient,.",
    "local": "此类用于对具有已知梯度的函数执行非线性无约束极小化，。"
  },
  {
    "origin": "defined on an",
    "local": "定义在"
  },
  {
    "origin": "n",
    "local": "n"
  },
  {
    "origin": "-dimensional Euclidean space, using the",
    "local": "-多维欧氏空间，使用"
  },
  {
    "origin": "Nonlinear Conjugate Gradient method",
    "local": "非线性共轭梯度法"
  },
  {
    "origin": ". The implementation was done based on the beautifully clear explanatory article [An Introduction to the Conjugate Gradient Method Without the Agonizing Pain](",
    "local": ". 实现是基于一篇非常清晰的解释性文章[没有痛苦的共轭梯度法简介]("
  },
  {
    "origin": "http://www.cs.cmu.edu/~quake-papers/painless-conjugate-gradient.pdf",
    "local": "http://www.cs.cmu.edu/~quake-papers/painless-conjugate-gradient.pdf"
  },
  {
    "origin": ") by Jonathan Richard Shewchuk. The method can be seen as an adaptation of a standard Conjugate Gradient method (see, for example",
    "local": ")作者：乔纳森·理查德·谢丘克。这种方法可以看作是标准共轭梯度法的一种改进（例如，参见"
  },
  {
    "origin": "http://en.wikipedia.org/wiki/Conjugate_gradient_method",
    "local": "http://en.wikipedia.org/wiki/Conjugate_gradient_method"
  },
  {
    "origin": ") for numerically solving the systems of linear equations.",
    "local": ")用于数值求解线性方程组。"
  },
  {
    "origin": "It should be noted, that this method, although deterministic, is rather a heuristic method and therefore may converge to a local minima, not necessary a global one. What is even more disastrous, most of its behaviour is ruled by gradient, therefore it essentially cannot distinguish between local minima and maxima. Therefore, if it starts sufficiently near to the local maximum, it may converge to it. Another obvious restriction is that it should be possible to compute the gradient of a function at any point, thus it is preferable to have analytic expression for gradient and computational burden should be born by the user.",
    "local": "应该注意的是，这种方法虽然是确定性的，但它是一种启发式方法，因此可以收敛到局部极小值，而不是全局极小值。更糟糕的是，它的大部分行为是由梯度决定的，因此它基本上不能区分局部极小值和极大值。因此，如果它开始足够接近于局部极大值，它可能会收敛到它。另一个明显的限制是，应该可以在任何点计算函数的梯度，因此最好有梯度的解析表达式，计算负担应由用户承担。"
  },
  {
    "origin": "The latter responsibility is accomplished via the getGradient method of a",
    "local": "后者的职责是通过"
  },
  {
    "origin": "interface (which represents function being optimized). This method takes point a point in",
    "local": "接口（表示正在优化的函数）。这个方法取一个点"
  },
  {
    "origin": "n",
    "local": "n"
  },
  {
    "origin": "-dimensional space (first argument represents the array of coordinates of that point) and compute its gradient (it should be stored in the second argument as an array).",
    "local": "-维度空间（第一个参数表示该点的坐标数组）并计算其梯度（它应作为数组存储在第二个参数中）。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "thus does not add any new methods to the basic",
    "local": "因此不会向基本方法添加任何新方法"
  },
  {
    "origin": "interface.",
    "local": "接口。"
  },
  {
    "origin": "term criteria should meet following condition:",
    "local": "期限标准应满足以下条件："
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::ConjGradSolver::create",
    "local": "&燃气轮机；cv:：CongGradSolver:：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "f",
    "local": "f"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "termcrit",
    "local": "特姆克里特"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "This function returns the reference to the ready-to-use",
    "local": "此函数返回对准备使用的"
  },
  {
    "origin": "object.",
    "local": "对象。"
  },
  {
    "origin": "All the parameters are optional, so this procedure can be called even without parameters at all. In this case, the default values will be used. As default value for terminal criteria are the only sensible ones,",
    "local": "所有参数都是可选的，因此即使没有参数也可以调用此过程。在这种情况下，将使用默认值。因为终端标准的默认值是唯一合理的，"
  },
  {
    "origin": "should be called upon the obtained object, if the function was not given to",
    "local": "如果函数没有被赋予"
  },
  {
    "origin": ". Otherwise, the two ways (submit it to",
    "local": ". 否则，两种方式（提交给"
  },
  {
    "origin": "or miss it out and call the",
    "local": "或者错过机会打电话给"
  },
  {
    "origin": ") are absolutely equivalent (and will drop the same errors in the same way, should invalid input be detected).",
    "local": ")是绝对等价的（如果检测到无效输入，将以相同的方式删除相同的错误）。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "f",
    "local": "f"
  },
  {
    "origin": "Pointer to the function that will be minimized, similarly to the one you submit via",
    "local": "指向将最小化的函数的指针，类似于通过"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "termcrit",
    "local": "特姆克里特"
  },
  {
    "origin": "Terminal criteria to the algorithm, similarly to the one you submit via",
    "local": "算法的终端条件，类似于您通过"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/core/",
    "local": "opencv2/核心/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:42 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:42为OpenCV生成，&#160；"
  }
]