[
  {
    "origin": "OpenCV: Graph API: Operations on matrices",
    "local": "OpenCV:Graph-API:矩阵运算"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "Graph API: Operations on matrices",
    "local": "图形API:矩阵运算"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src1, const",
    "local": "&amp；src1，const"
  },
  {
    "origin": "&amp;src2)",
    "local": "&amp；（src2）"
  },
  {
    "origin": "Calculates the per-element absolute difference between two matrices.",
    "local": "计算两个矩阵之间的每元素绝对差。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；src，const"
  },
  {
    "origin": "&amp;c)",
    "local": "&amp；（三）"
  },
  {
    "origin": "Calculates absolute value of matrix elements.",
    "local": "计算矩阵元素的绝对值。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src1, double alpha, const",
    "local": "&amp；src1，双α，常数"
  },
  {
    "origin": "&amp;src2, double beta, double gamma, int ddepth=-1)",
    "local": "&amp；src2，双β，双γ，int ddepth=-1）"
  },
  {
    "origin": "Calculates the weighted sum of two matrices.",
    "local": "计算两个矩阵的加权和。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt; int &gt;",
    "local": "&lt；内部&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src)",
    "local": "&amp；（src）"
  },
  {
    "origin": "Counts non-zero array elements.",
    "local": "计数非零数组元素。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；src，const"
  },
  {
    "origin": "&amp;threshLow, const",
    "local": "&amp；阈值，常数"
  },
  {
    "origin": "&amp;threshUp)",
    "local": "&amp；脱粒）"
  },
  {
    "origin": "Applies a range-level threshold to each matrix element.",
    "local": "对每个矩阵元素应用范围级别阈值。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, int sdepth=-1, int sqdepth=-1)",
    "local": "&amp；src，int sdepth=-1，int sqdepth=-1）"
  },
  {
    "origin": "Calculates the integral of an image.",
    "local": "计算图像的积分。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src1, const",
    "local": "&amp；src1，const"
  },
  {
    "origin": "&amp;src2)",
    "local": "&amp；（src2）"
  },
  {
    "origin": "Calculates per-element maximum of two matrices.",
    "local": "计算每个元素最多两个矩阵。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src1, const",
    "local": "&amp；src1，const"
  },
  {
    "origin": "&amp;src2)",
    "local": "&amp；（src2）"
  },
  {
    "origin": "Calculates per-element minimum of two matrices.",
    "local": "计算每个元素两个矩阵的最小值。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src)",
    "local": "&amp；（src）"
  },
  {
    "origin": "Calculates the absolute infinite norm of a matrix.",
    "local": "计算矩阵的绝对无穷范数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src)",
    "local": "&amp；（src）"
  },
  {
    "origin": "Calculates the absolute",
    "local": "计算绝对值"
  },
  {
    "origin": "norm of a matrix.",
    "local": "矩阵的范数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src)",
    "local": "&amp；（src）"
  },
  {
    "origin": "Calculates the absolute",
    "local": "计算绝对值"
  },
  {
    "origin": "norm of a matrix.",
    "local": "矩阵的范数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src)",
    "local": "&amp；（src）"
  },
  {
    "origin": "Calculates sum of all matrix elements.",
    "local": "计算所有矩阵元素的和。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；src，const"
  },
  {
    "origin": "&amp;thresh, const",
    "local": "&amp；脱粒，常数"
  },
  {
    "origin": "&amp;maxval, int type)",
    "local": "&amp；最大值，int类型）"
  },
  {
    "origin": "Applies a fixed-level threshold to each matrix element.",
    "local": "对每个矩阵元素应用固定级别的阈值。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；src，const"
  },
  {
    "origin": "&amp;maxval, int type)",
    "local": "&amp；最大值，int类型）"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "absDiff()",
    "local": "absDiff（）"
  },
  {
    "origin": "cv::gapi::absDiff",
    "local": "cv：：gapi：：absDiff"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src1",
    "local": "src1型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src2",
    "local": "src2型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates the per-element absolute difference between two matrices.",
    "local": "计算两个矩阵之间的每元素绝对差。"
  },
  {
    "origin": "The function absDiff calculates absolute difference between two matrices of the same size and depth:",
    "local": "函数absDiff计算大小和深度相同的两个矩阵之间的绝对差："
  },
  {
    "origin": "\\[\\texttt{dst}(I) = \\texttt{saturate} (| \\texttt{src1}(I) - \\texttt{src2}(I)|)\\]",
    "local": "\\\\texttt{dst}（I）=\\texttt{saturate}（'124；\\texttt{src1}（I）-\\texttt{src2}（I）}124；]"
  },
  {
    "origin": "where I is a multi-dimensional index of matrix elements. In case of multi-channel matrices, each channel is processed independently. Output matrix must have the same size and depth as input matrices.",
    "local": "其中I是矩阵元素的多维索引。在多信道矩阵的情况下，每个信道被独立地处理。输出矩阵的大小和深度必须与输入矩阵相同。"
  },
  {
    "origin": "Supported matrix data types are",
    "local": "支持的矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.absdiff\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.absdiff”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src1",
    "local": "src1型"
  },
  {
    "origin": "first input matrix.",
    "local": "第一个输入矩阵。"
  },
  {
    "origin": "src2",
    "local": "src2型"
  },
  {
    "origin": "second input matrix.",
    "local": "第二个输入矩阵。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "absDiffC()",
    "local": "absDiffC（）"
  },
  {
    "origin": "cv::gapi::absDiffC",
    "local": "cv：：gapi：：absDiffC"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "c",
    "local": "c"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates absolute value of matrix elements.",
    "local": "计算矩阵元素的绝对值。"
  },
  {
    "origin": "The function abs calculates absolute difference between matrix elements and given scalar value:",
    "local": "函数abs计算矩阵元素和给定标量值之间的绝对差："
  },
  {
    "origin": "\\[\\texttt{dst}(I) = \\texttt{saturate} (| \\texttt{src1}(I) - \\texttt{matC}(I)|)\\]",
    "local": "\\[\\texttt{dst}（I）=\\texttt{saturate}（|\\texttt{src1}（I）-\\texttt{matC}（I）|）\\]"
  },
  {
    "origin": "where matC is constructed from given scalar c and has the same sizes and depth as input matrix src.",
    "local": "其中，matC是由给定的标量c构造的，其大小和深度与输入矩阵src相同。"
  },
  {
    "origin": "Output matrix must be of the same size and depth as src.",
    "local": "输出矩阵的大小和深度必须与src相同。"
  },
  {
    "origin": "Supported matrix data types are",
    "local": "支持的矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.absdiffC\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.absdiffC”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input matrix.",
    "local": "输入矩阵。"
  },
  {
    "origin": "c",
    "local": "c"
  },
  {
    "origin": "scalar to be subtracted.",
    "local": "要减去的标量。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "addWeighted()",
    "local": "添加权重（）"
  },
  {
    "origin": "cv::gapi::addWeighted",
    "local": "cv:：gapi:：添加权重"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src1",
    "local": "src1型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "alpha",
    "local": "阿尔法"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src2",
    "local": "src2型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "beta",
    "local": "贝塔"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "gamma",
    "local": "伽马"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "ddepth",
    "local": "深度"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates the weighted sum of two matrices.",
    "local": "计算两个矩阵的加权和。"
  },
  {
    "origin": "The function addWeighted calculates the weighted sum of two matrices as follows:",
    "local": "函数addWeighted计算两个矩阵的加权和，如下所示："
  },
  {
    "origin": "\\[\\texttt{dst} (I)= \\texttt{saturate} ( \\texttt{src1} (I)* \\texttt{alpha} + \\texttt{src2} (I)* \\texttt{beta} + \\texttt{gamma} )\\]",
    "local": "\\\\textt{dst}（I）=\\textt{saturate}（\\textt{src1}（I）*\\textt{alpha}+\\textt{src2}（I）*\\textt{beta}+\\textt{gamma}\\"
  },
  {
    "origin": "where I is a multi-dimensional index of array elements. In case of multi-channel matrices, each channel is processed independently.",
    "local": "其中I是数组元素的多维索引。在多信道矩阵的情况下，每个信道被独立地处理。"
  },
  {
    "origin": "The function can be replaced with a matrix expression:",
    "local": "该函数可替换为矩阵表达式："
  },
  {
    "origin": "\\[\\texttt{dst}(I) = \\texttt{alpha} * \\texttt{src1}(I) - \\texttt{beta} * \\texttt{src2}(I) + \\texttt{gamma} \\]",
    "local": "\\\\texttt{dst}（I）=\\texttt{alpha}\\texttt{src1}（I）-\\texttt{beta}\\texttt{src2}（I）+\\texttt{gamma}\\"
  },
  {
    "origin": "Supported matrix data types are",
    "local": "支持的矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.addweighted\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.addweighted”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src1",
    "local": "src1型"
  },
  {
    "origin": "first input matrix.",
    "local": "第一个输入矩阵。"
  },
  {
    "origin": "alpha",
    "local": "阿尔法"
  },
  {
    "origin": "weight of the first matrix elements.",
    "local": "第一个矩阵元素的权重。"
  },
  {
    "origin": "src2",
    "local": "src2型"
  },
  {
    "origin": "second input matrix of the same size and channel number as src1.",
    "local": "第二个输入矩阵的大小和通道数与src1相同。"
  },
  {
    "origin": "beta",
    "local": "贝塔"
  },
  {
    "origin": "weight of the second matrix elements.",
    "local": "第二个矩阵元素的权重。"
  },
  {
    "origin": "gamma",
    "local": "伽马"
  },
  {
    "origin": "scalar added to each sum.",
    "local": "添加到每个和的标量。"
  },
  {
    "origin": "ddepth",
    "local": "深度"
  },
  {
    "origin": "optional depth of the output matrix.",
    "local": "输出矩阵的可选深度。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "countNonZero()",
    "local": "countNonZero（）"
  },
  {
    "origin": "&lt;int&gt; cv::gapi::countNonZero",
    "local": "&lt；内部&gt；cv：：gapi：：countNonZero"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Counts non-zero array elements.",
    "local": "计数非零数组元素。"
  },
  {
    "origin": "The function returns the number of non-zero elements in src :",
    "local": "函数返回src中非零元素的数目："
  },
  {
    "origin": "\\[\\sum _{I: \\; \\texttt{src} (I) \\ne0 } 1\\]",
    "local": "\\\\[\\sum{I:\\\\texttt{src}（I）\\ne0}1\\]"
  },
  {
    "origin": "Supported matrix data types are",
    "local": "支持的矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.countNonZero\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.countNonZero”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input single-channel matrix.",
    "local": "输入单通道矩阵。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "inRange()",
    "local": "范围（）"
  },
  {
    "origin": "cv::gapi::inRange",
    "local": "cv：：gapi：：范围"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "threshLow",
    "local": "脱粒"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "threshUp",
    "local": "脱粒"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Applies a range-level threshold to each matrix element.",
    "local": "对每个矩阵元素应用范围级别阈值。"
  },
  {
    "origin": "The function applies range-level thresholding to a single- or multiple-channel matrix. It sets output pixel value to OxFF if the corresponding pixel value of input matrix is in specified range,or 0 otherwise.",
    "local": "该函数将范围级阈值应用于单通道或多通道矩阵。如果输入矩阵的对应像素值在指定范围内，则将输出像素值设置为OxFF，否则设置为0。"
  },
  {
    "origin": "Input and output matrices must be CV_8UC1.",
    "local": "输入和输出矩阵必须是cv8uc1。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.inRange\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.inRange”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input matrix (CV_8UC1).",
    "local": "输入矩阵（CV8uc1）。"
  },
  {
    "origin": "threshLow",
    "local": "脱粒"
  },
  {
    "origin": "lower boundary value.",
    "local": "下边界值。"
  },
  {
    "origin": "threshUp",
    "local": "脱粒"
  },
  {
    "origin": "upper boundary value.",
    "local": "上边界值。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "integral()",
    "local": "积分（）"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&gt; cv::gapi::integral",
    "local": "&燃气轮机；cv:：gapi:：积分"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "sdepth",
    "local": "分开"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "sqdepth",
    "local": "sq深度"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates the integral of an image.",
    "local": "计算图像的积分。"
  },
  {
    "origin": "The function calculates one or more integral images for the source image as follows:",
    "local": "该函数为源图像计算一个或多个整数图像，如下所示："
  },
  {
    "origin": "\\[\\texttt{sum} (X,Y) = \\sum _{x&lt;X,y&lt;Y} \\texttt{image} (x,y)\\]",
    "local": "\\[\\ texttt{sum}（x，y）=\\ sum{x&lt；X，Y&lt；\\ texttt{图像}（x，y）\\ n"
  },
  {
    "origin": "\\[\\texttt{sqsum} (X,Y) = \\sum _{x&lt;X,y&lt;Y} \\texttt{image} (x,y)^2\\]",
    "local": "\\[\\ texttt{sqsum}（x，y）=\\ sum{x&lt；X，Y&lt；（x，y）^ 2 \\]"
  },
  {
    "origin": "The function return integral image as \\((W+1)\\times (H+1)\\) , 32-bit integer or floating-point (32f or 64f) and integral image for squared pixel values; it is \\((W+1)\\times (H+)\\), double-precision floating-point (64f) array.",
    "local": "函数返回整数图像为\\（（W+1）\\times（H+1）\\）、32位整数或浮点（32f或64f）和平方像素值的整数图像；它是\\（（W+1）\\（H+）\\），双精度浮点（64f）数组。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.integral\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.integral”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input image.",
    "local": "输入图像。"
  },
  {
    "origin": "sdepth",
    "local": "分开"
  },
  {
    "origin": "desired depth of the integral and the tilted integral images, CV_32S, CV_32F, or CV_64F.",
    "local": "积分和倾斜积分图像的所需深度，CV_32S、CV_32F或CV_64F。"
  },
  {
    "origin": "sqdepth",
    "local": "sq深度"
  },
  {
    "origin": "desired depth of the integral image of squared pixel values, CV_32F or CV_64F.",
    "local": "平方像素值CV_32F或CV_64F的积分图像的期望深度。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "max()",
    "local": "最大值（）"
  },
  {
    "origin": "cv::gapi::max",
    "local": "cv：：gapi：：最大值"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src1",
    "local": "src1型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src2",
    "local": "src2型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates per-element maximum of two matrices.",
    "local": "计算每个元素最多两个矩阵。"
  },
  {
    "origin": "The function max calculates the per-element maximum of two matrices of the same size, number of channels and depth:",
    "local": "函数max计算相同大小、通道数和深度的两个矩阵的每元素最大值："
  },
  {
    "origin": "\\[\\texttt{dst} (I)= \\max ( \\texttt{src1} (I), \\texttt{src2} (I))\\]",
    "local": "\\\\texttt{dst}（I）=\\max（\\texttt{src1}（I），\\texttt{src2}（I）]"
  },
  {
    "origin": "where I is a multi-dimensional index of matrix elements. In case of multi-channel matrices, each channel is processed independently. Output matrix must be of the same size and depth as src1.",
    "local": "其中I是矩阵元素的多维索引。在多信道矩阵的情况下，每个信道被独立地处理。输出矩阵的大小和深度必须与src1相同。"
  },
  {
    "origin": "Supported matrix data types are",
    "local": "支持的矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.max\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.max”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src1",
    "local": "src1型"
  },
  {
    "origin": "first input matrix.",
    "local": "第一个输入矩阵。"
  },
  {
    "origin": "src2",
    "local": "src2型"
  },
  {
    "origin": "second input matrix of the same size and depth as src1.",
    "local": "第二个输入矩阵的大小和深度与src1相同。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "min()",
    "local": "最小（）"
  },
  {
    "origin": "cv::gapi::min",
    "local": "cv：：gapi：：最小值"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src1",
    "local": "src1型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src2",
    "local": "src2型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates per-element minimum of two matrices.",
    "local": "计算每个元素两个矩阵的最小值。"
  },
  {
    "origin": "The function min calculates the per-element minimum of two matrices of the same size, number of channels and depth:",
    "local": "函数min计算具有相同大小、通道数和深度的两个矩阵的每元素最小值："
  },
  {
    "origin": "\\[\\texttt{dst} (I)= \\min ( \\texttt{src1} (I), \\texttt{src2} (I))\\]",
    "local": "\\\\texttt{dst}（I）=\\min（\\texttt{src1}（I），\\texttt{src2}（I）]"
  },
  {
    "origin": "where I is a multi-dimensional index of matrix elements. In case of multi-channel matrices, each channel is processed independently. Output matrix must be of the same size and depth as src1.",
    "local": "其中I是矩阵元素的多维索引。在多信道矩阵的情况下，每个信道被独立地处理。输出矩阵的大小和深度必须与src1相同。"
  },
  {
    "origin": "Supported input matrix data types are",
    "local": "支持的输入矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.min\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.min”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src1",
    "local": "src1型"
  },
  {
    "origin": "first input matrix.",
    "local": "第一个输入矩阵。"
  },
  {
    "origin": "src2",
    "local": "src2型"
  },
  {
    "origin": "second input matrix of the same size and depth as src1.",
    "local": "第二个输入矩阵的大小和深度与src1相同。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "normInf()",
    "local": "标准化"
  },
  {
    "origin": "cv::gapi::normInf",
    "local": "简历：：gapi：：normInfo"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates the absolute infinite norm of a matrix.",
    "local": "计算矩阵的绝对无穷范数。"
  },
  {
    "origin": "This version of normInf calculates the absolute infinite norm of src.",
    "local": "这个版本的normInf计算src的绝对无限范数。"
  },
  {
    "origin": "As example for one array consider the function \\(r(x)= \\begin{pmatrix} x \\\\ 1-x \\end{pmatrix}, x \\in [-1;1]\\). The \\( L_{\\infty} \\) norm for the sample value \\(r(-1) = \\begin{pmatrix} -1 \\\\ 2 \\end{pmatrix}\\) is calculated as follows",
    "local": "作为一个数组的例子，考虑函数\\（r（x）=\\begin{pmatrix}x\\\\1-x\\end{pmatrix}，x\\in[-1；1]\\). 样本值\\（r（-1）=\\begin{pmatrix}-1\\\\2\\end{pmatrix}\\）的\\（L{infty}\\）范数计算如下"
  },
  {
    "origin": "\\begin{align*} \\| r(-1) \\|_{L_\\infty} &amp;= \\max(|-1|,|2|) = 2 \\end{align*}",
    "local": "\\开始{align*}\\| r（-1）\\|{L\\infty}&amp；=\\最大值（|-1 |，| 2 |）=2\\end{align*}"
  },
  {
    "origin": "and for \\(r(0.5) = \\begin{pmatrix} 0.5 \\\\ 0.5 \\end{pmatrix}\\) the calculation is",
    "local": "对于\\（r（0.5）=\\begin{pmatrix}0.5\\\\0.5\\end{pmatrix}\\），计算如下："
  },
  {
    "origin": "\\begin{align*} \\| r(0.5) \\|_{L_\\infty} &amp;= \\max(|0.5|,|0.5|) = 0.5. \\end{align*}",
    "local": "\\开始{align*}\\| r（0.5）\\|{L\\infty}&amp；=\\最大值（| 0.5 |，| 0.5 |）=0.5\\结束{对齐*}"
  },
  {
    "origin": "Supported matrix data types are",
    "local": "支持的矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.norminf\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.norminf”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input matrix.",
    "local": "输入矩阵。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "normL1()",
    "local": "标准1（）"
  },
  {
    "origin": "cv::gapi::normL1",
    "local": "cv：：gapi：：normL1"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates the absolute",
    "local": "计算绝对值"
  },
  {
    "origin": "norm of a matrix.",
    "local": "矩阵的范数。"
  },
  {
    "origin": "This version of normL1 calculates the absolute",
    "local": "这个版本的normL1计算"
  },
  {
    "origin": "norm of src.",
    "local": "src规范。"
  },
  {
    "origin": "As example for one array consider the function \\(r(x)= \\begin{pmatrix} x \\\\ 1-x \\end{pmatrix}, x \\in [-1;1]\\). The \\( L_{1} \\) norm for the sample value \\(r(-1) = \\begin{pmatrix} -1 \\\\ 2 \\end{pmatrix}\\) is calculated as follows",
    "local": "作为一个数组的例子，考虑函数\\（r（x）=\\begin{pmatrix}x\\\\1-x\\end{pmatrix}，x\\in[-1；1]\\). 样本值\\（r（-1）=\\begin{pmatrix}-1\\\\2\\end{pmatrix}\\）的\\（L{1}\\）范数计算如下"
  },
  {
    "origin": "\\begin{align*} \\| r(-1) \\|_{L_1} &amp;= |-1| + |2| = 3 \\\\ \\end{align*}",
    "local": "\\开始{align*}\\| r（-1）\\|{L|u 1}&amp；=|-1 |+| 2 |=3\\\\\\结束{对齐*}"
  },
  {
    "origin": "and for \\(r(0.5) = \\begin{pmatrix} 0.5 \\\\ 0.5 \\end{pmatrix}\\) the calculation is",
    "local": "对于\\（r（0.5）=\\begin{pmatrix}0.5\\\\0.5\\end{pmatrix}\\），计算如下："
  },
  {
    "origin": "\\begin{align*} \\| r(0.5) \\|_{L_1} &amp;= |0.5| + |0.5| = 1 \\\\ \\end{align*}",
    "local": "\\开始{align*}\\| r（0.5）\\|{L|u 1}&amp；=|0.5 |+| 0.5 |=1\\\\\\结束{对齐*}"
  },
  {
    "origin": "Supported matrix data types are",
    "local": "支持的矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.norml1\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.norml1”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input matrix.",
    "local": "输入矩阵。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "normL2()",
    "local": "标准2（）"
  },
  {
    "origin": "cv::gapi::normL2",
    "local": "cv：：gapi：：normL2"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates the absolute",
    "local": "计算绝对值"
  },
  {
    "origin": "norm of a matrix.",
    "local": "矩阵的范数。"
  },
  {
    "origin": "This version of normL2 calculates the absolute",
    "local": "这个版本的normL2计算"
  },
  {
    "origin": "norm of src.",
    "local": "src规范。"
  },
  {
    "origin": "As example for one array consider the function \\(r(x)= \\begin{pmatrix} x \\\\ 1-x \\end{pmatrix}, x \\in [-1;1]\\). The \\( L_{2} \\) norm for the sample value \\(r(-1) = \\begin{pmatrix} -1 \\\\ 2 \\end{pmatrix}\\) is calculated as follows",
    "local": "作为一个数组的例子，考虑函数\\（r（x）=\\begin{pmatrix}x\\\\1-x\\end{pmatrix}，x\\in[-1；1]\\). 样本值\\（r（-1）=\\begin{pmatrix}-1\\\\2\\end{pmatrix}\\）的\\（L{2}\\）范数计算如下"
  },
  {
    "origin": "\\begin{align*} \\| r(-1) \\|_{L_2} &amp;= \\sqrt{(-1)^{2} + (2)^{2}} = \\sqrt{5} \\\\ \\end{align*}",
    "local": "\\\\开始{align*}\\r（-1）\\\\{L\\u 2}&amp；=\\sqrt{（-1）^{2}+（2）^{2}}=\\sqrt{5}\\\\end{align*}"
  },
  {
    "origin": "and for \\(r(0.5) = \\begin{pmatrix} 0.5 \\\\ 0.5 \\end{pmatrix}\\) the calculation is",
    "local": "对于\\（r（0.5）=\\begin{pmatrix}0.5\\\\0.5\\end{pmatrix}\\），计算如下："
  },
  {
    "origin": "\\begin{align*} \\| r(0.5) \\|_{L_2} &amp;= \\sqrt{(0.5)^{2} + (0.5)^{2}} = \\sqrt{0.5} \\\\ \\end{align*}",
    "local": "\\\\开始{align*}\\r（0.5）\\\\{L\\u 2}&amp；=\\sqrt{（0.5）^{2}+（0.5）^{2}}=\\sqrt{0.5}\\\\end{align*}"
  },
  {
    "origin": "Supported matrix data types are",
    "local": "支持的矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.norml2\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.norml2”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input matrix.",
    "local": "输入矩阵。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "sum()",
    "local": "总和（）"
  },
  {
    "origin": "cv::gapi::sum",
    "local": "cv：：gapi：：总和"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates sum of all matrix elements.",
    "local": "计算所有矩阵元素的和。"
  },
  {
    "origin": "The function sum calculates sum of all matrix elements, independently for each channel.",
    "local": "函数sum为每个通道独立计算所有矩阵元素的和。"
  },
  {
    "origin": "Supported matrix data types are",
    "local": "支持的矩阵数据类型包括"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.sum\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.sum”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input matrix.",
    "local": "输入矩阵。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "threshold()",
    "local": "阈值（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "cv::gapi::threshold",
    "local": "cv:：gapi:：阈值"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "thresh",
    "local": "脱粒"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "maxval",
    "local": "最大值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.gapi.threshold(",
    "local": "cv.gapi.阈值("
  },
  {
    "origin": "src, maxval, type",
    "local": "心脏，maxwave，类型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Applies a fixed-level threshold to each matrix element.",
    "local": "对每个矩阵元素应用固定级别的阈值。"
  },
  {
    "origin": "The function applies fixed-level thresholding to a single- or multiple-channel matrix. The function is typically used to get a bi-level (binary) image out of a grayscale image ( cmp functions could be also used for this purpose) or for removing a noise, that is, filtering out pixels with too small or too large values. There are several types of thresholding supported by the function. They are determined by type parameter.",
    "local": "该函数对单通道或多通道矩阵应用固定水平阈值。该函数通常用于从灰度图像中获得二级（二进制）图像（cmp函数也可用于此目的）或用于去除噪声，即，滤除具有太小或太大值的像素。函数支持几种类型的阈值。它们由类型参数决定。"
  },
  {
    "origin": "Also, the special values",
    "local": "另外，特殊值"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "may be combined with one of the above values. In these cases, the function determines the optimal threshold value using the Otsu's or Triangle algorithm and uses it instead of the specified thresh . The function returns the computed threshold value in addititon to thresholded matrix. The Otsu's and Triangle methods are implemented only for 8-bit matrices.",
    "local": "可与上述值之一组合。在这些情况下，函数使用大津算法或三角形算法确定最佳阈值，并使用它代替指定的阈值。该函数将计算出的阈值与阈值矩阵相加。大津法和三角法仅适用于8位矩阵。"
  },
  {
    "origin": "Input image should be single channel only in case of",
    "local": "输入图像应为单通道，仅在"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "flags. Output matrix must be of the same size and depth as src.",
    "local": "旗帜。输出矩阵的大小和深度必须与src相同。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.threshold\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.threshold”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "input matrix (",
    "local": "输入矩阵("
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", or",
    "local": "，或"
  },
  {
    "origin": ").",
    "local": ")."
  },
  {
    "origin": "thresh",
    "local": "脱粒"
  },
  {
    "origin": "threshold value.",
    "local": "阈值。"
  },
  {
    "origin": "maxval",
    "local": "最大值"
  },
  {
    "origin": "maximum value to use with the",
    "local": "用于的最大值"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "thresholding types.",
    "local": "阈值类型。"
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": "thresholding type (see the",
    "local": "阈值类型（请参见"
  },
  {
    "origin": ").",
    "local": ")."
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "threshold()",
    "local": "阈值（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&gt; cv::gapi::threshold",
    "local": "&燃气轮机；cv:：gapi:：阈值"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "maxval",
    "local": "最大值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.gapi.threshold(",
    "local": "cv.gapi.阈值("
  },
  {
    "origin": "src, maxval, type",
    "local": "心脏，maxwave，类型"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. This function applicable for all threshold types except CV_THRESH_OTSU and CV_THRESH_TRIANGLE",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。此函数适用于除CV\\u THRESH\\u OTSU和CV\\u THRESH\\u TRIANGLE以外的所有阈值类型"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.core.matrixop.thresholdOT\"",
    "local": "函数文本ID为“org.opencv.core.matrixop.thresholdOT”"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:41为OpenCV生成"
  }
]