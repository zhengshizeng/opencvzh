[
  {
    "origin": "OpenCV: How to run deep networks in browser",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "How to run deep networks in browser",
    "local": ""
  },
  {
    "origin": "Prev Tutorial:",
    "local": ""
  },
  {
    "origin": "Next Tutorial:",
    "local": ""
  },
  {
    "origin": "Original author",
    "local": ""
  },
  {
    "origin": "Dmitry Kurtaev",
    "local": ""
  },
  {
    "origin": "Compatibility",
    "local": ""
  },
  {
    "origin": "Introduction",
    "local": ""
  },
  {
    "origin": "This tutorial will show us how to run deep learning models using OpenCV.js right in a browser. Tutorial refers a sample of face detection and face recognition models pipeline.",
    "local": ""
  },
  {
    "origin": "Face detection",
    "local": ""
  },
  {
    "origin": "Face detection network gets BGR image as input and produces set of bounding boxes that might contain faces. All that we need is just select the boxes with a strong confidence.",
    "local": ""
  },
  {
    "origin": "Face recognition",
    "local": ""
  },
  {
    "origin": "Network is called OpenFace (project",
    "local": ""
  },
  {
    "origin": "https://github.com/cmusatyalab/openface",
    "local": ""
  },
  {
    "origin": "). Face recognition model receives RGB face image of size",
    "local": ""
  },
  {
    "origin": ". Then it returns",
    "local": ""
  },
  {
    "origin": "-dimensional unit vector that represents input face as a point on the unit multidimensional sphere. So difference between two faces is an angle between two output vectors.",
    "local": ""
  },
  {
    "origin": "Sample",
    "local": ""
  },
  {
    "origin": "All the sample is an HTML page that has JavaScript code to use OpenCV.js functionality. You may see an insertion of this page below. Press",
    "local": ""
  },
  {
    "origin": "button to begin a demo. Press",
    "local": ""
  },
  {
    "origin": "to name a person that is recognized as an unknown one. Next we'll discuss main parts of the code.",
    "local": ""
  },
  {
    "origin": "Start",
    "local": ""
  },
  {
    "origin": "Add a person",
    "local": ""
  },
  {
    "origin": "Run face detection network to detect faces on input image.",
    "local": ""
  },
  {
    "origin": "You may play with input blob sizes to balance detection quality and efficiency. The bigger input blob the smaller faces may be detected.",
    "local": ""
  },
  {
    "origin": "Run face recognition network to receive",
    "local": ""
  },
  {
    "origin": "-dimensional unit feature vector by input face image.",
    "local": ""
  },
  {
    "origin": "Perform a recognition.",
    "local": ""
  },
  {
    "origin": "Match a new feature vector with registered ones. Return a name of the best matched person.",
    "local": ""
  },
  {
    "origin": "The main loop.",
    "local": ""
  },
  {
    "origin": "A main loop of our application receives a frames from a camera and makes a recognition of an every detected face on the frame. We start this function ones when OpenCV.js was initialized and deep learning models were downloaded.",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:34 for OpenCV by &#160;",
    "local": ""
  }
]