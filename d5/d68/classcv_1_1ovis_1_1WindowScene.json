[
  {
    "origin": "OpenCV: cv::ovis::WindowScene Class Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::ovis::WindowScene Class Reference",
    "local": ""
  },
  {
    "origin": "abstract",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name,",
    "local": ""
  },
  {
    "origin": "K, const",
    "local": ""
  },
  {
    "origin": "&amp;imsize, float zFar,",
    "local": ""
  },
  {
    "origin": "tvec=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "rot=",
    "local": ""
  },
  {
    "origin": "(), const",
    "local": ""
  },
  {
    "origin": "&amp;color=",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "&amp;meshname,",
    "local": ""
  },
  {
    "origin": "tvec=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "rot=",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name,",
    "local": ""
  },
  {
    "origin": "tvec=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "rot=",
    "local": ""
  },
  {
    "origin": "(), const",
    "local": ""
  },
  {
    "origin": "&amp;diffuseColor=",
    "local": ""
  },
  {
    "origin": "(1), const",
    "local": ""
  },
  {
    "origin": "&amp;specularColor=",
    "local": ""
  },
  {
    "origin": "(bool useFixed,",
    "local": ""
  },
  {
    "origin": "up=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "R=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "tvec=",
    "local": ""
  },
  {
    "origin": "(), bool",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;compname, const",
    "local": ""
  },
  {
    "origin": "&amp;texname,",
    "local": ""
  },
  {
    "origin": "out, int mrtIndex=0)=0",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name,",
    "local": ""
  },
  {
    "origin": "R=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "tvec=",
    "local": ""
  },
  {
    "origin": "(), bool",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, int prop,",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "K, const",
    "local": ""
  },
  {
    "origin": "&amp;imsize, float zNear=-1, float zFar=-1)=0",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;target,",
    "local": ""
  },
  {
    "origin": "offset=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "tvec=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "rot=",
    "local": ""
  },
  {
    "origin": "(), bool",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;origin, const",
    "local": ""
  },
  {
    "origin": "&amp;target,",
    "local": ""
  },
  {
    "origin": "offset=",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name,",
    "local": ""
  },
  {
    "origin": "tvec=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "rot=",
    "local": ""
  },
  {
    "origin": "(), bool",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, int prop, const",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, int prop, const",
    "local": ""
  },
  {
    "origin": "&amp;value, int subEntityIdx=-1)=0",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name, const",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;name,",
    "local": ""
  },
  {
    "origin": "tvec=",
    "local": ""
  },
  {
    "origin": "(),",
    "local": ""
  },
  {
    "origin": "rot=",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "A 3D viewport and the associated scene",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "~WindowScene()",
    "local": ""
  },
  {
    "origin": "virtual cv::ovis::WindowScene::~WindowScene",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createCameraEntity()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "cv::ovis::WindowScene::createCameraEntity",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "K",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "imsize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "zFar",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "color",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "convenience method to visualize a camera position",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "K",
    "local": ""
  },
  {
    "origin": "intrinsic matrix",
    "local": ""
  },
  {
    "origin": "imsize",
    "local": ""
  },
  {
    "origin": "image size",
    "local": ""
  },
  {
    "origin": "zFar",
    "local": ""
  },
  {
    "origin": "far plane in camera coordinates",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "vector or 3x3 rotation matrix",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation",
    "local": ""
  },
  {
    "origin": "color",
    "local": ""
  },
  {
    "origin": "line color",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "the extents of the Frustum at far plane, where the top left corner denotes the principal point offset",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createEntity()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::createEntity",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "meshname",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "place an entity of a mesh in the scene",
    "local": ""
  },
  {
    "origin": "the mesh needs to be created beforehand. Either programmatically by e.g.",
    "local": ""
  },
  {
    "origin": "or by placing an Ogre .mesh file in a resource location.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "meshname",
    "local": ""
  },
  {
    "origin": "mesh name",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "vector or 3x3 rotation matrix",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "createLightEntity()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::createLightEntity",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "diffuseColor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "specularColor",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "creates a point light in the scene",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "vector or 3x3 rotation matrix",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation",
    "local": ""
  },
  {
    "origin": "diffuseColor",
    "local": ""
  },
  {
    "origin": "specularColor",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "fixCameraYawAxis()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::fixCameraYawAxis",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "useFixed",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "up",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "convenience method to force the \"up\" axis to stay fixed",
    "local": ""
  },
  {
    "origin": "works with both programmatic changes and SCENE_INTERACTIVE",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "useFixed",
    "local": ""
  },
  {
    "origin": "whether to enforce the fixed yaw axis",
    "local": ""
  },
  {
    "origin": "up",
    "local": ""
  },
  {
    "origin": "the axis to be fixed",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "getCameraPose()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::getCameraPose",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "R",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "invert",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Retrieves the current camera pose",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "R",
    "local": ""
  },
  {
    "origin": "3x3 rotation matrix",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation vector",
    "local": ""
  },
  {
    "origin": "invert",
    "local": ""
  },
  {
    "origin": "return the inverted pose",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "getCompositorTexture()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::getCompositorTexture",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "compname",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "texname",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "out",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "mrtIndex",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "read back the texture of an active compositor",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "compname",
    "local": ""
  },
  {
    "origin": "name of the compositor",
    "local": ""
  },
  {
    "origin": "texname",
    "local": ""
  },
  {
    "origin": "name of the texture inside the compositor",
    "local": ""
  },
  {
    "origin": "mrtIndex",
    "local": ""
  },
  {
    "origin": "if texture is a MRT, specifies the attachment",
    "local": ""
  },
  {
    "origin": "out",
    "local": ""
  },
  {
    "origin": "the texture contents",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "getDepth()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::getDepth",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "depth",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "get the depth for the current frame.",
    "local": ""
  },
  {
    "origin": "return the per pixel distance to the camera in world units",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "getEntityAnimations()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::getEntityAnimations",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "out",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "get a list of available entity animations",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "out",
    "local": ""
  },
  {
    "origin": "the animation names",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "getEntityPose()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::getEntityPose",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "R",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "invert",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Retrieves the current pose of an entity",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "R",
    "local": ""
  },
  {
    "origin": "3x3 rotation matrix",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation vector",
    "local": ""
  },
  {
    "origin": "invert",
    "local": ""
  },
  {
    "origin": "return the inverted pose",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "getEntityProperty()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::getEntityProperty",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "prop",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "get the property of an entity",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "prop",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": "the value",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "getScreenshot()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::getScreenshot",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "frame",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "read back the image generated by the last call to",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "playEntityAnimation()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::playEntityAnimation",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "animname",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "loop",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "play entity animation",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "animname",
    "local": ""
  },
  {
    "origin": "animation name",
    "local": ""
  },
  {
    "origin": "loop",
    "local": ""
  },
  {
    "origin": "enable or disable animation loop",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "removeEntity()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::removeEntity",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "remove an entity from the scene",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setBackground()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setBackground",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "set window background to custom image",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setBackground()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setBackground",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "color",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setCameraIntrinsics()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setCameraIntrinsics",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "K",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "imsize",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "zNear",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "zFar",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "set intrinsics of the camera",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "K",
    "local": ""
  },
  {
    "origin": "intrinsic matrix or",
    "local": ""
  },
  {
    "origin": ". If",
    "local": ""
  },
  {
    "origin": "is specified, imsize is ignored and zNear/ zFar can be set separately.",
    "local": ""
  },
  {
    "origin": "imsize",
    "local": ""
  },
  {
    "origin": "image size",
    "local": ""
  },
  {
    "origin": "zNear",
    "local": ""
  },
  {
    "origin": "near clip distance or -1 to keep the current",
    "local": ""
  },
  {
    "origin": "zFar",
    "local": ""
  },
  {
    "origin": "far clip distance or -1 to keep the current",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setCameraLookAt()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setCameraLookAt",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "target",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "offset",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "convenience method to orient the camera to a specific entity",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "target",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "offset",
    "local": ""
  },
  {
    "origin": "offset from entity centre",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setCameraPose()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setCameraPose",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "invert",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Sets the current camera pose",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "vector or 3x3 rotation matrix",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation",
    "local": ""
  },
  {
    "origin": "invert",
    "local": ""
  },
  {
    "origin": "use the inverse of the given pose",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setCompositors()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setCompositors",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "names",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "enable an ordered chain of full-screen post processing effects",
    "local": ""
  },
  {
    "origin": "this way you can add distortion or SSAO effects. The effects themselves must be defined inside Ogre .compositor scripts.",
    "local": ""
  },
  {
    "origin": "See also",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "names",
    "local": ""
  },
  {
    "origin": "compositor names that will be applied in order of appearance",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setEntityLookAt()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setEntityLookAt",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "origin",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "target",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "offset",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "convenience method to orient an entity to a specific entity. If target is an empty string the entity looks at the given offset point",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "origin",
    "local": ""
  },
  {
    "origin": "entity to make look at",
    "local": ""
  },
  {
    "origin": "target",
    "local": ""
  },
  {
    "origin": "name of target entity",
    "local": ""
  },
  {
    "origin": "offset",
    "local": ""
  },
  {
    "origin": "offset from entity centre",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setEntityPose()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setEntityPose",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "invert",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "set entity pose in the world coordinate space.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "enitity name",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "vector or 3x3 rotation matrix",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation",
    "local": ""
  },
  {
    "origin": "invert",
    "local": ""
  },
  {
    "origin": "use the inverse of the given pose",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setEntityProperty()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setEntityProperty",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "prop",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "set the property of an entity to the given value",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "prop",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": "the value",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "setEntityProperty()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::setEntityProperty",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "prop",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "subEntityIdx",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "stopEntityAnimation()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::stopEntityAnimation",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "animname",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "stop entity animation",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "enitity name",
    "local": ""
  },
  {
    "origin": "animname",
    "local": ""
  },
  {
    "origin": "animation name",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "update()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::update",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "render this window, but do not swap buffers. Automatically called by",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "updateEntityPose()",
    "local": ""
  },
  {
    "origin": "virtual void cv::ovis::WindowScene::updateEntityPose",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "update entity pose by transformation in the parent coordinate space. (pre-rotation)",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "name",
    "local": ""
  },
  {
    "origin": "entity name",
    "local": ""
  },
  {
    "origin": "rot",
    "local": ""
  },
  {
    "origin": "vector or 3x3 rotation matrix",
    "local": ""
  },
  {
    "origin": "tvec",
    "local": ""
  },
  {
    "origin": "translation",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by &#160;",
    "local": ""
  }
]