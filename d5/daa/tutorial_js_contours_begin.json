[
  {
    "origin": "OpenCV: Contours : Getting Started",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Contours : Getting Started",
    "local": ""
  },
  {
    "origin": "Goal",
    "local": ""
  },
  {
    "origin": "Understand what contours are.",
    "local": ""
  },
  {
    "origin": "Learn to find contours, draw contours etc",
    "local": ""
  },
  {
    "origin": "You will learn these functions :",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "What are contours?",
    "local": ""
  },
  {
    "origin": "Contours can be explained simply as a curve joining all the continuous points (along the boundary), having same color or intensity. The contours are a useful tool for shape analysis and object detection and recognition.",
    "local": ""
  },
  {
    "origin": "For better accuracy, use binary images. So before finding contours, apply threshold or canny edge detection.",
    "local": ""
  },
  {
    "origin": "Since opencv 3.2 source image is not modified by this function.",
    "local": ""
  },
  {
    "origin": "In OpenCV, finding contours is like finding white object from black background. So remember, object to be found should be white and background should be black.",
    "local": ""
  },
  {
    "origin": "How to draw the contours?",
    "local": ""
  },
  {
    "origin": "To draw the contours,",
    "local": ""
  },
  {
    "origin": "function is used. It can also be used to draw any shape provided you have its boundary points.",
    "local": ""
  },
  {
    "origin": "We use the functions:",
    "local": ""
  },
  {
    "origin": "(image, contours, hierarchy, mode, method, offset = new cv.Point(0, 0))",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "source, an 8-bit single-channel image. Non-zero pixels are treated as 1's. Zero pixels remain 0's, so the image is treated as binary.",
    "local": ""
  },
  {
    "origin": "contours",
    "local": ""
  },
  {
    "origin": "detected contours.",
    "local": ""
  },
  {
    "origin": "hierarchy",
    "local": ""
  },
  {
    "origin": "containing information about the image topology. It has as many elements as the number of contours.",
    "local": ""
  },
  {
    "origin": "mode",
    "local": ""
  },
  {
    "origin": "contour retrieval mode(see",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "method",
    "local": ""
  },
  {
    "origin": "contour approximation method(see",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "offset",
    "local": ""
  },
  {
    "origin": "optional offset by which every contour point is shifted. This is useful if the contours are extracted from the image ROI and then they should be analyzed in the whole image context.",
    "local": ""
  },
  {
    "origin": "(image, contours, contourIdx, color, thickness = 1, lineType =",
    "local": ""
  },
  {
    "origin": ", hierarchy = new",
    "local": ""
  },
  {
    "origin": ", maxLevel = INT_MAX, offset = new cv.Point(0, 0))",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "destination image.",
    "local": ""
  },
  {
    "origin": "contours",
    "local": ""
  },
  {
    "origin": "all the input contours.",
    "local": ""
  },
  {
    "origin": "contourIdx",
    "local": ""
  },
  {
    "origin": "parameter indicating a contour to draw. If it is negative, all the contours are drawn.",
    "local": ""
  },
  {
    "origin": "color",
    "local": ""
  },
  {
    "origin": "color of the contours.",
    "local": ""
  },
  {
    "origin": "thickness",
    "local": ""
  },
  {
    "origin": "thickness of lines the contours are drawn with. If it is negative, the contour interiors are drawn.",
    "local": ""
  },
  {
    "origin": "lineType",
    "local": ""
  },
  {
    "origin": "line connectivity(see",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "hierarchy",
    "local": ""
  },
  {
    "origin": "optional information about hierarchy. It is only needed if you want to draw only some of the contours(see maxLevel).",
    "local": ""
  },
  {
    "origin": "maxLevel",
    "local": ""
  },
  {
    "origin": "maximal level for drawn contours. If it is 0, only the specified contour is drawn. If it is 1, the function draws the contour(s) and all the nested contours. If it is 2, the function draws the contours, all the nested contours, all the nested-to-nested contours, and so on. This parameter is only taken into account when there is hierarchy available.",
    "local": ""
  },
  {
    "origin": "offset",
    "local": ""
  },
  {
    "origin": "optional contour shift parameter.",
    "local": ""
  },
  {
    "origin": "Try it",
    "local": ""
  },
  {
    "origin": "Contour Approximation Method",
    "local": ""
  },
  {
    "origin": "This is the fifth argument in",
    "local": ""
  },
  {
    "origin": "function. What does it denote actually?",
    "local": ""
  },
  {
    "origin": "Above, we told that contours are the boundaries of a shape with same intensity. It stores the (x,y) coordinates of the boundary of a shape. But does it store all the coordinates ? That is specified by this contour approximation method.",
    "local": ""
  },
  {
    "origin": "If you pass cv.ContourApproximationModes.CHAIN_APPROX_NONE.value, all the boundary points are stored. But actually do we need all the points? For eg, you found the contour of a straight line. Do you need all the points on the line to represent that line? No, we need just two end points of that line. This is what",
    "local": ""
  },
  {
    "origin": "does. It removes all redundant points and compresses the contour, thereby saving memory.",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:37 for OpenCV by &#160;",
    "local": ""
  }
]