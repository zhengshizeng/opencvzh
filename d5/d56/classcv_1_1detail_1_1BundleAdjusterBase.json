[
  {
    "origin": "OpenCV: cv::detail::BundleAdjusterBase Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "Protected Member Functions",
    "local": ""
  },
  {
    "origin": "Protected Attributes",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::detail::BundleAdjusterBase Class Reference",
    "local": ""
  },
  {
    "origin": "abstract",
    "local": ""
  },
  {
    "origin": "»",
    "local": ""
  },
  {
    "origin": "Base class for all camera parameters refinement methods.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Inheritance diagram for cv::detail::BundleAdjusterBase:",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(double conf_thresh)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;mask)",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;term_criteria)",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;features, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;pairwise_matches, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;cameras)",
    "local": ""
  },
  {
    "origin": "Estimates camera parameters.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Protected Member Functions",
    "local": ""
  },
  {
    "origin": "(int num_params_per_cam, int num_errs_per_measurement)",
    "local": ""
  },
  {
    "origin": "Construct a bundle adjuster base instance.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "Calculates error vector.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "Calculates the cost function jacobian.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual bool",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;features, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;pairwise_matches, std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;cameras)",
    "local": ""
  },
  {
    "origin": "This method must implement camera parameters estimation logic in order to make the wrapper detail::Estimator::operator()_ work.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(std::vector&lt;",
    "local": ""
  },
  {
    "origin": "Gets the refined camera parameters.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "Sets initial camera parameter to refine.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Protected Attributes",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "std::vector&lt; std::pair&lt; int, int &gt; &gt;",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "*",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "*",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Base class for all camera parameters refinement methods.",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "BundleAdjusterBase()",
    "local": ""
  },
  {
    "origin": "cv::detail::BundleAdjusterBase::BundleAdjusterBase",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "num_params_per_cam",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "num_errs_per_measurement",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "Construct a bundle adjuster base instance.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "num_params_per_cam",
    "local": ""
  },
  {
    "origin": "Number of parameters per camera",
    "local": ""
  },
  {
    "origin": "num_errs_per_measurement",
    "local": ""
  },
  {
    "origin": "Number of error terms (components) per match",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "calcError()",
    "local": ""
  },
  {
    "origin": "virtual void cv::detail::BundleAdjusterBase::calcError",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "err",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Calculates error vector.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "err",
    "local": ""
  },
  {
    "origin": "column-vector of length total_num_matches * num_errs_per_measurement",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "calcJacobian()",
    "local": ""
  },
  {
    "origin": "virtual void cv::detail::BundleAdjusterBase::calcJacobian",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "jac",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Calculates the cost function jacobian.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "jac",
    "local": ""
  },
  {
    "origin": "Jacobian matrix of dimensions (total_num_matches * num_errs_per_measurement) x (num_images * num_params_per_cam)",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "confThresh()",
    "local": ""
  },
  {
    "origin": "double cv::detail::BundleAdjusterBase::confThresh",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.detail_BundleAdjusterBase.confThresh(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "estimate()",
    "local": ""
  },
  {
    "origin": "virtual bool cv::detail::BundleAdjusterBase::estimate",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "features",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "pairwise_matches",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "cameras",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "This method must implement camera parameters estimation logic in order to make the wrapper detail::Estimator::operator()_ work.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "features",
    "local": ""
  },
  {
    "origin": "Features of images",
    "local": ""
  },
  {
    "origin": "pairwise_matches",
    "local": ""
  },
  {
    "origin": "Pairwise matches of images",
    "local": ""
  },
  {
    "origin": "cameras",
    "local": ""
  },
  {
    "origin": "Estimated camera parameters",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "True in case of success, false otherwise",
    "local": ""
  },
  {
    "origin": "Implements",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "obtainRefinedCameraParams()",
    "local": ""
  },
  {
    "origin": "virtual void cv::detail::BundleAdjusterBase::obtainRefinedCameraParams",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "cameras",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Gets the refined camera parameters.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "cameras",
    "local": ""
  },
  {
    "origin": "Refined camera parameters",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "refinementMask()",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "cv::detail::BundleAdjusterBase::refinementMask",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.detail_BundleAdjusterBase.refinementMask(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setConfThresh()",
    "local": ""
  },
  {
    "origin": "void cv::detail::BundleAdjusterBase::setConfThresh",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "conf_thresh",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.detail_BundleAdjusterBase.setConfThresh(",
    "local": ""
  },
  {
    "origin": "conf_thresh",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setRefinementMask()",
    "local": ""
  },
  {
    "origin": "void cv::detail::BundleAdjusterBase::setRefinementMask",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "mask",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.detail_BundleAdjusterBase.setRefinementMask(",
    "local": ""
  },
  {
    "origin": "mask",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setTermCriteria()",
    "local": ""
  },
  {
    "origin": "void cv::detail::BundleAdjusterBase::setTermCriteria",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "term_criteria",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.detail_BundleAdjusterBase.setTermCriteria(",
    "local": ""
  },
  {
    "origin": "term_criteria",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "setUpInitialCameraParams()",
    "local": ""
  },
  {
    "origin": "virtual void cv::detail::BundleAdjusterBase::setUpInitialCameraParams",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "cameras",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Sets initial camera parameter to refine.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "cameras",
    "local": ""
  },
  {
    "origin": "Camera parameters",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "termCriteria()",
    "local": ""
  },
  {
    "origin": "cv::detail::BundleAdjusterBase::termCriteria",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.detail_BundleAdjusterBase.termCriteria(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Member Data Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "cam_params_",
    "local": ""
  },
  {
    "origin": "cv::detail::BundleAdjusterBase::cam_params_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "conf_thresh_",
    "local": ""
  },
  {
    "origin": "double cv::detail::BundleAdjusterBase::conf_thresh_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "edges_",
    "local": ""
  },
  {
    "origin": "std::vector&lt;std::pair&lt;int,int&gt; &gt; cv::detail::BundleAdjusterBase::edges_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "features_",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "* cv::detail::BundleAdjusterBase::features_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "num_errs_per_measurement_",
    "local": ""
  },
  {
    "origin": "int cv::detail::BundleAdjusterBase::num_errs_per_measurement_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "num_images_",
    "local": ""
  },
  {
    "origin": "int cv::detail::BundleAdjusterBase::num_images_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "num_params_per_cam_",
    "local": ""
  },
  {
    "origin": "int cv::detail::BundleAdjusterBase::num_params_per_cam_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "pairwise_matches_",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "* cv::detail::BundleAdjusterBase::pairwise_matches_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "refinement_mask_",
    "local": ""
  },
  {
    "origin": "cv::detail::BundleAdjusterBase::refinement_mask_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "term_criteria_",
    "local": ""
  },
  {
    "origin": "cv::detail::BundleAdjusterBase::term_criteria_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "total_num_matches_",
    "local": ""
  },
  {
    "origin": "int cv::detail::BundleAdjusterBase::total_num_matches_",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/stitching/detail/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:46 for OpenCV by",
    "local": ""
  }
]