[
  {
    "origin": "OpenCV: cv::Matx&lt; _Tp, m, n &gt; Class Template Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Types",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions",
    "local": ""
  },
  {
    "origin": "Public Attributes",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::Matx&lt; _Tp, m, n &gt; Class Template Reference",
    "local": ""
  },
  {
    "origin": "&raquo;",
    "local": ""
  },
  {
    "origin": "Template class for small matrices whose type and size are known at compilation time.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Types",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= m,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= n,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= rows*cols,",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "= (m &lt; n ? m : n)",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "&lt; _Tp,",
    "local": ""
  },
  {
    "origin": ", 1 &gt;&#160;",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "default constructor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0)",
    "local": ""
  },
  {
    "origin": "1x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1)",
    "local": ""
  },
  {
    "origin": "1x2 or 2x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2)",
    "local": ""
  },
  {
    "origin": "1x3 or 3x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3)",
    "local": ""
  },
  {
    "origin": "1x4, 2x2 or 4x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4)",
    "local": ""
  },
  {
    "origin": "1x5 or 5x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5)",
    "local": ""
  },
  {
    "origin": "1x6, 2x3, 3x2 or 6x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6)",
    "local": ""
  },
  {
    "origin": "1x7 or 7x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7)",
    "local": ""
  },
  {
    "origin": "1x8, 2x4, 4x2 or 8x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8)",
    "local": ""
  },
  {
    "origin": "1x9, 3x3 or 9x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9)",
    "local": ""
  },
  {
    "origin": "1x10, 2x5 or 5x2 or 10x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11)",
    "local": ""
  },
  {
    "origin": "1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13)",
    "local": ""
  },
  {
    "origin": "1x14, 2x7, 7x2 or 14x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13, _Tp v14, _Tp v15)",
    "local": ""
  },
  {
    "origin": "1x16, 4x4 or 16x1 matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const _Tp *vals)",
    "local": ""
  },
  {
    "origin": "initialize from a plain array",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(std::initializer_list&lt; _Tp &gt;)",
    "local": ""
  },
  {
    "origin": "initialize from an initializer list",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;b, Matx_AddOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;b, Matx_SubOp)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _T2 &gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, _T2 alpha, Matx_ScaleOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;b, Matx_MulOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;b, Matx_DivOp)",
    "local": ""
  },
  {
    "origin": "template&lt;int l&gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, l &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, l, n &gt; &amp;b, Matx_MatMulOp)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, n, m &gt; &amp;a, Matx_TOp)",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, 1 &gt;&#160;",
    "local": ""
  },
  {
    "origin": "(int i) const",
    "local": ""
  },
  {
    "origin": "extract the matrix column",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;v) const",
    "local": ""
  },
  {
    "origin": "dot product computed in double-precision arithmetics",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "extract the matrix diagonal",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a) const",
    "local": ""
  },
  {
    "origin": "divide two matrices element-wise",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;v) const",
    "local": ""
  },
  {
    "origin": "dot product computed with the default precision",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;int m1, int n1&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m1, n1 &gt;&#160;",
    "local": ""
  },
  {
    "origin": "(int base_row, int base_col) const",
    "local": ""
  },
  {
    "origin": "extract part of the matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int method=",
    "local": ""
  },
  {
    "origin": ", bool *p_is_ok=NULL) const",
    "local": ""
  },
  {
    "origin": "invert the matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a) const",
    "local": ""
  },
  {
    "origin": "multiply two matrices element-wise",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;typename T2 &gt;",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "conversion to another data type",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int",
    "local": ""
  },
  {
    "origin": ", int",
    "local": ""
  },
  {
    "origin": ") const",
    "local": ""
  },
  {
    "origin": "element access",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int",
    "local": ""
  },
  {
    "origin": ", int",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "(int i) const",
    "local": ""
  },
  {
    "origin": "1D element access",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int i)",
    "local": ""
  },
  {
    "origin": "template&lt;int m1, int n1&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m1, n1 &gt;&#160;",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "change the matrix shape",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, 1, n &gt;&#160;",
    "local": ""
  },
  {
    "origin": "(int i) const",
    "local": ""
  },
  {
    "origin": "extract the matrix row",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;int l&gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, l &gt; &amp;rhs, int flags=",
    "local": ""
  },
  {
    "origin": ") const",
    "local": ""
  },
  {
    "origin": "solve linear system",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m &gt; &amp;rhs, int method) const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "transpose the matrix",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(_Tp alpha)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;d)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(_Tp a, _Tp b)",
    "local": ""
  },
  {
    "origin": "Generates normally distributed random numbers.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(_Tp a, _Tp b)",
    "local": ""
  },
  {
    "origin": "Generates uniformly distributed random numbers.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Public Attributes",
    "local": ""
  },
  {
    "origin": "[m *n]",
    "local": ""
  },
  {
    "origin": "Related Functions",
    "local": ""
  },
  {
    "origin": "(Note that these are not member functions.)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp1 , typename _Tp2 , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp2, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp1 , typename _Tp2 , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp2, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, int alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, int alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int alpha, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(float alpha, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(double alpha, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, float alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, double alpha)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n, int l&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, l &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, l, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;a, const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp;b)",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "class cv::Matx&lt; _Tp, m, n &gt;",
    "local": ""
  },
  {
    "origin": "Template class for small matrices whose type and size are known at compilation time.",
    "local": ""
  },
  {
    "origin": "If you need a more flexible type, use",
    "local": ""
  },
  {
    "origin": ". The elements of the matrix M are accessible using the M(i,j) notation. Most of the common matrix operations (see also",
    "local": ""
  },
  {
    "origin": ") are available. To do an operation on",
    "local": ""
  },
  {
    "origin": "that is not implemented, you can easily convert the matrix to",
    "local": ""
  },
  {
    "origin": "and backwards:",
    "local": ""
  },
  {
    "origin": "Except of the plain constructor which takes a list of elements,",
    "local": ""
  },
  {
    "origin": "can be initialized from a C-array:",
    "local": ""
  },
  {
    "origin": "In case if C++11 features are available, std::initializer_list can be also used to initialize",
    "local": ""
  },
  {
    "origin": ":",
    "local": ""
  },
  {
    "origin": "Member Typedef Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "diag_type",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "&lt;_Tp,",
    "local": ""
  },
  {
    "origin": ", 1&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "mat_type",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, m, n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "value_type",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "typedef _Tp",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[1/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "default constructor",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[2/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "1x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[3/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x2 or 2x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[4/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x3 or 3x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[5/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x4, 2x2 or 4x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[6/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v4",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x5 or 5x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[7/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v4",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v5",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x6, 2x3, 3x2 or 6x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[8/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v4",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v5",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v6",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x7 or 7x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[9/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v4",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v5",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v6",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v7",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x8, 2x4, 4x2 or 8x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[10/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v4",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v5",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v6",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v7",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v8",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x9, 3x3 or 9x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[11/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v4",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v5",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v6",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v7",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v8",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v9",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x10, 2x5 or 5x2 or 10x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[12/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v4",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v5",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v6",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v7",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v8",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v9",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v10",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v11",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x12, 2x6, 3x4, 4x3, 6x2 or 12x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[13/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v4",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v5",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v6",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v7",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v8",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v9",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v10",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v11",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v12",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v13",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x14, 2x7, 7x2 or 14x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[14/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "v0",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v1",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v2",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v3",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v4",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v5",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v6",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v7",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v8",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v9",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v10",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v11",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v12",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v13",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v14",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "v15",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "1x16, 4x4 or 16x1 matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[15/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "vals",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "initialize from a plain array",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[16/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "initialize from an initializer list",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[17/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[18/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[19/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "template&lt;typename _T2 &gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "_T2&#160;",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[20/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[21/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[22/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "template&lt;int l&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "Matx()",
    "local": ""
  },
  {
    "origin": "[23/23]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "all()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::all",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "col()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, m, 1&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::col",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "i",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "extract the matrix column",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "ddot()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::ddot",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "v",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "dot product computed in double-precision arithmetics",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "diag()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::diag",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "d",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "diag()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::diag",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "extract the matrix diagonal",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "div()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, m, n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::div",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "divide two matrices element-wise",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "dot()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "_Tp",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::dot",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "v",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "dot product computed with the default precision",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "eye()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::eye",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "get_minor()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "template&lt;int m1, int n1&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, m1, n1&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::get_minor",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "base_row",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "base_col",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "extract part of the matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "inv()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, n, m&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::inv",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "method",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "p_is_ok",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "invert the matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "mul()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, m, n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::mul",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "multiply two matrices element-wise",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "ones()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::ones",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator Matx",
    "local": ""
  },
  {
    "origin": "< T2, m, n >()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "template&lt;typename T2 &gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::operator",
    "local": ""
  },
  {
    "origin": "&lt; T2, m, n &gt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "conversion to another data type",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator()()",
    "local": ""
  },
  {
    "origin": "[1/4]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "const _Tp&amp;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::operator()",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "row",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "col",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "element access",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator()()",
    "local": ""
  },
  {
    "origin": "[2/4]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "_Tp&amp;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::operator()",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "row",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "col",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator()()",
    "local": ""
  },
  {
    "origin": "[3/4]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "const _Tp&amp;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::operator()",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "i",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "1D element access",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator()()",
    "local": ""
  },
  {
    "origin": "[4/4]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "_Tp&amp;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::operator()",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "i",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "randn()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::randn",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Generates normally distributed random numbers.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": "Mean value.",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": "Standard deviation.",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "randu()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::randu",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Generates uniformly distributed random numbers.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": "boundary.",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": "The other range boundary (boundaries don't have to be ordered, the lower boundary is inclusive, the upper one is exclusive).",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "reshape()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "template&lt;int m1, int n1&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, m1, n1&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::reshape",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "change the matrix shape",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "row()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, 1, n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::row",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "i",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "extract the matrix row",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "solve()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "template&lt;int l&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, n, l&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::solve",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "rhs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "flags",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "solve linear system",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "solve()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, n&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::solve",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "rhs",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "method",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "t()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "&lt;_Tp, n, m&gt;",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::t",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "transpose the matrix",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "zeros()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::zeros",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "Friends And Related Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator!=()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static bool operator!=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*()",
    "local": ""
  },
  {
    "origin": "[1/8]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator*",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*()",
    "local": ""
  },
  {
    "origin": "[2/8]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator*",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*()",
    "local": ""
  },
  {
    "origin": "[3/8]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator*",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*()",
    "local": ""
  },
  {
    "origin": "[4/8]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator*",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*()",
    "local": ""
  },
  {
    "origin": "[5/8]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator*",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*()",
    "local": ""
  },
  {
    "origin": "[6/8]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator*",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*()",
    "local": ""
  },
  {
    "origin": "[7/8]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n, int l&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator*",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*()",
    "local": ""
  },
  {
    "origin": "[8/8]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m &gt; operator*",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*=()",
    "local": ""
  },
  {
    "origin": "[1/3]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp; operator*=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*=()",
    "local": ""
  },
  {
    "origin": "[2/3]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp; operator*=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator*=()",
    "local": ""
  },
  {
    "origin": "[3/3]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp; operator*=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator+()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator+",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator+=()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp1 , typename _Tp2 , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp; operator+=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp2, m, n &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator-()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator-",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator-()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator-",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator-=()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp1 , typename _Tp2 , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp; operator-=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; _Tp1, m, n &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&lt; _Tp2, m, n &gt; &amp;&#160;",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator/()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator/",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator/()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; operator/",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator/=()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp; operator/=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator/=()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt; &amp; operator/=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator==()",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp , int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "static bool operator==",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "a",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "b",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "related",
    "local": ""
  },
  {
    "origin": "Member Data Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "val",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp, int m, int n&gt;",
    "local": ""
  },
  {
    "origin": "_Tp",
    "local": ""
  },
  {
    "origin": "&lt; _Tp, m, n &gt;::val[m *n]",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/core/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by &#160;",
    "local": ""
  }
]