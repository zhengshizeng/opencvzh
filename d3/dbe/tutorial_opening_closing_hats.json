[
  {
    "origin": "OpenCV: More Morphology Transformations",
    "local": "OpenCV：更多形态学变换"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "More Morphology Transformations",
    "local": "更多形态变换"
  },
  {
    "origin": "Prev Tutorial:",
    "local": "上一教程："
  },
  {
    "origin": "Next Tutorial:",
    "local": "下一个教程："
  },
  {
    "origin": "Original author",
    "local": "原作者"
  },
  {
    "origin": "Ana Huamán",
    "local": "安娜·华曼"
  },
  {
    "origin": "Compatibility",
    "local": "兼容性"
  },
  {
    "origin": "OpenCV &gt;= 3.0",
    "local": "打开CV&gt=3"
  },
  {
    "origin": "Goal",
    "local": "目标"
  },
  {
    "origin": "In this tutorial you will learn how to:",
    "local": "在本教程中，您将学习如何："
  },
  {
    "origin": "Use the OpenCV function",
    "local": "使用OpenCV函数"
  },
  {
    "origin": "to apply Morphological Transformation such as:",
    "local": "应用形态变换，例如："
  },
  {
    "origin": "Opening",
    "local": "打开"
  },
  {
    "origin": "Closing",
    "local": "结束"
  },
  {
    "origin": "Morphological Gradient",
    "local": "形态梯度"
  },
  {
    "origin": "Top Hat",
    "local": "礼帽"
  },
  {
    "origin": "Black Hat",
    "local": "黑帽子"
  },
  {
    "origin": "Theory",
    "local": "理论"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "The explanation below belongs to the book",
    "local": "下面的解释属于这本书"
  },
  {
    "origin": "Learning OpenCV",
    "local": "学习OpenCV"
  },
  {
    "origin": "by Bradski and Kaehler.",
    "local": "布拉德斯基和凯勒。"
  },
  {
    "origin": "In the previous tutorial we covered two basic Morphology operations:",
    "local": "在上一个教程中，我们介绍了两种基本的形态学操作："
  },
  {
    "origin": "Erosion",
    "local": "腐蚀"
  },
  {
    "origin": "Dilation.",
    "local": "扩张。"
  },
  {
    "origin": "Based on these two we can effectuate more sophisticated transformations to our images. Here we discuss briefly 5 operations offered by OpenCV:",
    "local": "基于这两个，我们可以对图像进行更复杂的变换。这里我们简要讨论OpenCV提供的5种操作："
  },
  {
    "origin": "Opening",
    "local": "打开"
  },
  {
    "origin": "It is obtained by the erosion of an image followed by a dilation.",
    "local": "它是通过图像的腐蚀和膨胀来获得的。"
  },
  {
    "origin": "\\[dst = open( src, element) = dilate( erode( src, element ) )\\]",
    "local": "\\[dst=open（src，element）=扩张（侵蚀（src，element））\\]"
  },
  {
    "origin": "Useful for removing small objects (it is assumed that the objects are bright on a dark foreground)",
    "local": "用于移除小对象（假定对象在黑暗前景中是明亮的）"
  },
  {
    "origin": "For instance, check out the example below. The image at the left is the original and the image at the right is the result after applying the opening transformation. We can observe that the small dots have disappeared.",
    "local": "例如，查看下面的示例。左边的图像是原始图像，右边的图像是应用开放变换后的结果。我们可以观察到这些小点已经消失了。"
  },
  {
    "origin": "Closing",
    "local": "结束"
  },
  {
    "origin": "It is obtained by the dilation of an image followed by an erosion.",
    "local": "它是由图像膨胀后的腐蚀得到的。"
  },
  {
    "origin": "\\[dst = close( src, element ) = erode( dilate( src, element ) )\\]",
    "local": "\\[dst=close（src，element）=侵蚀（扩张（src，element））\\]"
  },
  {
    "origin": "Useful to remove small holes (dark regions).",
    "local": "有助于消除小孔（暗区）。"
  },
  {
    "origin": "Morphological Gradient",
    "local": "形态梯度"
  },
  {
    "origin": "It is the difference between the dilation and the erosion of an image.",
    "local": "它是图像膨胀和腐蚀的区别。"
  },
  {
    "origin": "\\[dst = morph_{grad}( src, element ) = dilate( src, element ) - erode( src, element )\\]",
    "local": "\\[dst=morph{grad}（src，element）=扩张（src，element）-侵蚀（src，element）\\]"
  },
  {
    "origin": "It is useful for finding the outline of an object as can be seen below:",
    "local": "它有助于找到对象的轮廓，如下所示："
  },
  {
    "origin": "Top Hat",
    "local": "礼帽"
  },
  {
    "origin": "It is the difference between an input image and its opening.",
    "local": "它是输入图像和打开图像之间的区别。"
  },
  {
    "origin": "\\[dst = tophat( src, element ) = src - open( src, element )\\]",
    "local": "\\[dst=tophat（src，element）=src open（src，element）\\]"
  },
  {
    "origin": "Black Hat",
    "local": "黑帽子"
  },
  {
    "origin": "It is the difference between the closing and its input image",
    "local": "它是关闭和它的输入图像之间的区别"
  },
  {
    "origin": "\\[dst = blackhat( src, element ) = close( src, element ) - src\\]",
    "local": "\\[dst=blackhat（src，element）=关闭（src，element）-src]"
  },
  {
    "origin": "Code",
    "local": "代码"
  },
  {
    "origin": "C++",
    "local": "C++"
  },
  {
    "origin": "This tutorial's code is shown below. You can also download it",
    "local": "本教程的代码如下所示。你也可以下载"
  },
  {
    "origin": "here",
    "local": "在这里"
  },
  {
    "origin": "Java",
    "local": "Java"
  },
  {
    "origin": "This tutorial's code is shown below. You can also download it",
    "local": "本教程的代码如下所示。你也可以下载"
  },
  {
    "origin": "here",
    "local": "在这里"
  },
  {
    "origin": "Python",
    "local": "蟒蛇"
  },
  {
    "origin": "This tutorial's code is shown below. You can also download it",
    "local": "本教程的代码如下所示。你也可以下载"
  },
  {
    "origin": "here",
    "local": "在这里"
  },
  {
    "origin": "Explanation",
    "local": "解释"
  },
  {
    "origin": "Let's check the general structure of the C++ program:",
    "local": "让我们来检查C++程序的一般结构："
  },
  {
    "origin": "Load an image",
    "local": "加载图像"
  },
  {
    "origin": "Create a window to display results of the Morphological operations",
    "local": "创建一个窗口来显示形态学操作的结果"
  },
  {
    "origin": "Create three Trackbars for the user to enter parameters:",
    "local": "创建三个轨迹栏供用户输入参数："
  },
  {
    "origin": "The first trackbar",
    "local": "第一个轨迹栏"
  },
  {
    "origin": "Operator",
    "local": "操作员"
  },
  {
    "origin": "returns the kind of morphology operation to use (",
    "local": "返回要使用的形态学操作的种类("
  },
  {
    "origin": "morph_operator",
    "local": "变形算子"
  },
  {
    "origin": ").",
    "local": ")."
  },
  {
    "origin": "The second trackbar",
    "local": "第二个轨迹栏"
  },
  {
    "origin": "Element",
    "local": "元素"
  },
  {
    "origin": "returns",
    "local": "退货"
  },
  {
    "origin": "morph_elem",
    "local": "变形u元素"
  },
  {
    "origin": ", which indicates what kind of structure our kernel is:",
    "local": "，表示内核的结构类型："
  },
  {
    "origin": "The final trackbar",
    "local": "最后的轨迹栏"
  },
  {
    "origin": "Kernel Size",
    "local": "内核大小"
  },
  {
    "origin": "returns the size of the kernel to be used (",
    "local": "返回要使用的内核的大小("
  },
  {
    "origin": "morph_size",
    "local": "变形大小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Every time we move any slider, the user's function",
    "local": "每次移动滑块时，用户的函数"
  },
  {
    "origin": "Morphology_Operations",
    "local": "形态与操作"
  },
  {
    "origin": "will be called to effectuate a new morphology operation and it will update the output image based on the current trackbar values.",
    "local": "将被调用以实现新的形态学操作，它将根据当前轨迹栏值更新输出图像。"
  },
  {
    "origin": "We can observe that the key function to perform the morphology transformations is",
    "local": "我们可以观察到，执行形态变换的关键功能是"
  },
  {
    "origin": ". In this example we use four arguments (leaving the rest as defaults):",
    "local": ". 在本例中，我们使用了四个参数（其余参数为默认值）："
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ": Source (input) image",
    "local": "：源（输入）图像"
  },
  {
    "origin": "dst",
    "local": "夏令时"
  },
  {
    "origin": ": Output image",
    "local": "：输出图像"
  },
  {
    "origin": "operation",
    "local": "操作"
  },
  {
    "origin": ": The kind of morphology transformation to be performed. Note that we have 5 alternatives:",
    "local": "：要执行的形态变换的类型。请注意，我们有5个备选方案："
  },
  {
    "origin": "Opening",
    "local": "打开"
  },
  {
    "origin": "Closing",
    "local": "结束"
  },
  {
    "origin": "Gradient",
    "local": "梯度"
  },
  {
    "origin": "Top Hat",
    "local": "礼帽"
  },
  {
    "origin": "Black Hat",
    "local": "黑帽子"
  },
  {
    "origin": "As you can see the values range from &lt;2-6&gt;, that is why we add (+2) to the values entered by the Trackbar:",
    "local": "如您所见，值的范围为&lt；2-6&gt；，这就是为什么我们将（+2）添加到Trackbar输入的值中："
  },
  {
    "origin": "element",
    "local": "要素"
  },
  {
    "origin": ": The kernel to be used. We use the function",
    "local": "：要使用的内核。我们使用函数"
  },
  {
    "origin": "to define our own structure.",
    "local": "定义我们自己的结构。"
  },
  {
    "origin": "Results",
    "local": "结果"
  },
  {
    "origin": "After compiling the code above we can execute it giving an image path as an argument. Results using the image:",
    "local": "编译完上面的代码后，我们可以执行它，给出一个图像路径作为参数。使用图像的结果："
  },
  {
    "origin": "baboon.png",
    "local": "狒狒.png"
  },
  {
    "origin": ":",
    "local": ":"
  },
  {
    "origin": "And here are two snapshots of the display window. The first picture shows the output after using the operator",
    "local": "下面是显示窗口的两个快照。第一张图片显示了使用运算符后的输出"
  },
  {
    "origin": "Opening",
    "local": "打开"
  },
  {
    "origin": "with a cross kernel. The second picture (right side, shows the result of using a",
    "local": "用交叉核。第二张图片（右侧）显示了使用"
  },
  {
    "origin": "Blackhat",
    "local": "骇客交锋"
  },
  {
    "origin": "operator with an ellipse kernel.",
    "local": "具有椭圆核的运算符。"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:36 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:36为OpenCV生成，&#160；"
  }
]