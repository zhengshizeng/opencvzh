[
  {
    "origin": "OpenCV: cv::detail::AffineBestOf2NearestMatcher Class Reference",
    "local": "OpenCV:cv:：detail:：AffineBestOf2NearestMatcher类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Protected Member Functions",
    "local": "受保护的成员函数"
  },
  {
    "origin": "Protected Attributes",
    "local": "受保护的属性"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::detail::AffineBestOf2NearestMatcher Class Reference",
    "local": "cv:：detail:：AffineBestOf2NearestMatcher类引用"
  },
  {
    "origin": "»",
    "local": "»"
  },
  {
    "origin": "Features matcher similar to",
    "local": "特征匹配器类似于"
  },
  {
    "origin": "which finds two best matches for each feature and leaves the best one only if the ratio between descriptor distances is greater than the threshold match_conf.",
    "local": "它为每个特征找到两个最佳匹配，并且仅当描述符距离之间的比率大于阈值匹配时才保留最佳匹配。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::detail::AffineBestOf2NearestMatcher:",
    "local": "cv:：detail:：AffineBestOf2NearestMatcher的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "(bool full_affine=false, bool try_use_gpu=false, float match_conf=0.3f, int num_matches_thresh1=6)",
    "local": "（bool full\\u affine=false，bool try\\u use\\u gpu=false，float match\\u conf=0.3f，int num\\u matches\\u thresh1=6）"
  },
  {
    "origin": "Constructs a \"best of 2 nearest\" matcher that expects affine transformation between images.",
    "local": "构造一个“2个最接近的最佳”匹配器，期望图像之间进行仿射变换。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "(bool try_use_gpu=false, float match_conf=0.3f, int num_matches_thresh1=6, int num_matches_thresh2=6)",
    "local": "（bool try \\u use \\u gpu=false，float match \\u conf=0.3f，int num \\u matches \\u thresh1=6，int num \\u matches \\u thresh2=6）"
  },
  {
    "origin": "Constructs a \"best of 2 nearest\" matcher.",
    "local": "构造一个“2个最接近的最佳”匹配器。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Frees unused memory allocated before if there is any.",
    "local": "释放之前分配的未使用内存（如果有）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;features1, const",
    "local": "&amp；特性1，常数"
  },
  {
    "origin": "&amp;features2,",
    "local": "&amp；功能2，"
  },
  {
    "origin": "&amp;matches_info)",
    "local": "&amp；匹配（U信息）"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;features, std::vector&lt;",
    "local": "&燃气轮机&amp；特征，std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;pairwise_matches, const",
    "local": "&燃气轮机&amp；成对匹配，常量"
  },
  {
    "origin": "&amp;mask=",
    "local": "&amp；遮罩="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Performs images matching.",
    "local": "执行图像匹配。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions",
    "local": "受保护的成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;features1, const",
    "local": "&amp；特性1，常数"
  },
  {
    "origin": "&amp;features2,",
    "local": "&amp；功能2，"
  },
  {
    "origin": "&amp;matches_info)",
    "local": "&amp；匹配（U信息）"
  },
  {
    "origin": "This method must implement matching logic in order to make the wrappers detail::FeaturesMatcher::operator()_ work.",
    "local": "此方法必须实现匹配逻辑才能使wrappers detail:：FeaturesMatcher:：operator（）工作。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "(bool is_thread_safe=false)",
    "local": "（bool is \\u thread \\u safe=false）"
  },
  {
    "origin": "Protected Attributes",
    "local": "受保护的属性"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "Protected Attributes inherited from",
    "local": "继承自的受保护属性"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "Protected Attributes inherited from",
    "local": "继承自的受保护属性"
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(bool try_use_gpu=false, float match_conf=0.3f, int num_matches_thresh1=6, int num_matches_thresh2=6)",
    "local": "（bool try \\u use \\u gpu=false，float match \\u conf=0.3f，int num \\u matches \\u thresh1=6，int num \\u matches \\u thresh2=6）"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Features matcher similar to",
    "local": "特征匹配器类似于"
  },
  {
    "origin": "which finds two best matches for each feature and leaves the best one only if the ratio between descriptor distances is greater than the threshold match_conf.",
    "local": "它为每个特征找到两个最佳匹配，并且仅当描述符距离之间的比率大于阈值匹配时才保留最佳匹配。"
  },
  {
    "origin": "Unlike",
    "local": "不像"
  },
  {
    "origin": "this matcher uses affine transformation (affine transformation estimate will be placed in matches_info).",
    "local": "此匹配器使用仿射变换（仿射变换估计将放在matches\\u info中）。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "AffineBestOf2NearestMatcher()",
    "local": "AffineBestOf2NearestMatcher（）"
  },
  {
    "origin": "cv::detail::AffineBestOf2NearestMatcher::AffineBestOf2NearestMatcher",
    "local": "cv:：detail:：AffineBestOf2NearestMatcher:：AffineBestOf2NearestMatcher"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "full_affine",
    "local": "全仿射"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "try_use_gpu",
    "local": "尝试使用gpu"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "float",
    "local": "浮动"
  },
  {
    "origin": "match_conf",
    "local": "Match Conf"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "num_matches_thresh1",
    "local": "num\\u匹配\\u thresh1"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "&lt;detail_AffineBestOf2NearestMatcher object&gt;",
    "local": "&lt；详图u AffineBetoF2nearestMatcher对象&gt；"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.detail_AffineBestOf2NearestMatcher(",
    "local": "cv.detail/Affinebestof2最接近匹配器("
  },
  {
    "origin": "[, full_affine[, try_use_gpu[, match_conf[, num_matches_thresh1]]]]",
    "local": "[，full\\u affine[，try\\u use\\u gpu[，match\\u conf[，num\\u matches\\u thresh1]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Constructs a \"best of 2 nearest\" matcher that expects affine transformation between images.",
    "local": "构造一个“2个最接近的最佳”匹配器，期望图像之间进行仿射变换。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "full_affine",
    "local": "全仿射"
  },
  {
    "origin": "whether to use full affine transformation with 6 degress of freedom or reduced transformation with 4 degrees of freedom using only rotation, translation and uniform scaling",
    "local": "是使用6自由度全仿射变换还是仅使用旋转、平移和均匀缩放的4自由度约化变换"
  },
  {
    "origin": "try_use_gpu",
    "local": "尝试使用gpu"
  },
  {
    "origin": "Should try to use GPU or not",
    "local": "是否应该尝试使用GPU"
  },
  {
    "origin": "match_conf",
    "local": "Match Conf"
  },
  {
    "origin": "Match distances ration threshold",
    "local": "匹配距离比率阈值"
  },
  {
    "origin": "num_matches_thresh1",
    "local": "num\\u匹配\\u thresh1"
  },
  {
    "origin": "Minimum number of matches required for the 2D affine transform estimation used in the inliers classification step",
    "local": "内联分类步骤中使用的二维仿射变换估计所需的最小匹配数"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "match()",
    "local": "匹配（）"
  },
  {
    "origin": "void cv::detail::AffineBestOf2NearestMatcher::match",
    "local": "void cv:：detail:：AffineBestOf2NearestMatcher:：match无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "features1",
    "local": "功能1"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "features2",
    "local": "功能2"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "matches_info",
    "local": "匹配\\u信息"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "This method must implement matching logic in order to make the wrappers detail::FeaturesMatcher::operator()_ work.",
    "local": "此方法必须实现匹配逻辑才能使wrappers detail:：FeaturesMatcher:：operator（）工作。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "features1",
    "local": "功能1"
  },
  {
    "origin": "first image features",
    "local": "第一图像特征"
  },
  {
    "origin": "features2",
    "local": "功能2"
  },
  {
    "origin": "second image features",
    "local": "第二图像特征"
  },
  {
    "origin": "matches_info",
    "local": "匹配\\u信息"
  },
  {
    "origin": "found matches",
    "local": "找到匹配项"
  },
  {
    "origin": "Reimplemented from",
    "local": "从重新实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Member Data Documentation",
    "local": "成员数据文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "full_affine_",
    "local": "全仿射_"
  },
  {
    "origin": "bool cv::detail::AffineBestOf2NearestMatcher::full_affine_",
    "local": "bool cv:：detail:：AffineBestOf2NearestMatcher:：full\\仿射_"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/stitching/detail/",
    "local": "opencv2/缝合/细节/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:46 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:46为OpenCV生成"
  }
]