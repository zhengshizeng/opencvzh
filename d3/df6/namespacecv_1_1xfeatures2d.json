[
  {
    "origin": "OpenCV: cv::xfeatures2d Namespace Reference",
    "local": "OpenCV:cv:：xfeature2d命名空间引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Typedefs",
    "local": "类型定义"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "cv::xfeatures2d Namespace Reference",
    "local": "cv:：xFeature2D命名空间引用"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Class implementing affine adaptation for key points.",
    "local": "类实现关键点的仿射自适应。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing",
    "local": "类实现"
  },
  {
    "origin": "(Boosted Efficient Binary Local Image Descriptor), described in",
    "local": "（有效的二进制局部图像描述符），如中所述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing",
    "local": "类实现"
  },
  {
    "origin": "(Learning Image Descriptors with Boosting), described in",
    "local": "（使用Boosting学习图像描述符），如中所述"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class for computing BRIEF descriptors described in",
    "local": "用于计算中描述的简短描述符的类"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing",
    "local": "类实现"
  },
  {
    "origin": "descriptor, described in",
    "local": "描述符，如中所述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Elliptic region around an interest point.",
    "local": "兴趣点周围的椭圆区域。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing the",
    "local": "类实现"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Fast Retina Keypoint",
    "local": "快速视网膜关键点"
  },
  {
    "origin": ") keypoint descriptor, described in",
    "local": ")关键点描述符，如中所述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing the Harris-Laplace feature detector as described in",
    "local": "类实现Harris-Laplace特征检测器，如中所述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing the locally uniform comparison image descriptor, described in",
    "local": "类实现本地统一比较图像描述符，如中所述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing the MSD (",
    "local": "实现MSD的类("
  },
  {
    "origin": "Maximal Self-Dissimilarity",
    "local": "最大自相异性"
  },
  {
    "origin": ") keypoint detector, described in",
    "local": ")关键点探测器，如中所述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing PCT (position-color-texture) signature extraction as described in",
    "local": "类实现PCT（位置颜色纹理）签名提取，如中所述"
  },
  {
    "origin": ". The algorithm is divided to a feature sampler and a clusterizer. Feature sampler produces samples at given set of coordinates. Clusterizer then produces clusters of these samples using k-means algorithm. Resulting set of clusters is the signature of the input image.",
    "local": ". 该算法分为特征采样器和聚类器。特征采样器在给定的坐标集上生成样本。聚类器然后使用k-均值算法生成这些样本的聚类。得到的聚类集就是输入图像的特征码。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing Signature Quadratic Form Distance (SQFD).",
    "local": "实现签名二次型距离（SQFD）的类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "The class implements the keypoint detector introduced by",
    "local": "类实现了"
  },
  {
    "origin": ", synonym of",
    "local": "，同义词"
  },
  {
    "origin": ". :",
    "local": ". :"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class for extracting Speeded Up Robust Features from an image",
    "local": "用于从图像中提取快速鲁棒特征的类"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing the Tree Based Morse Regions (",
    "local": "类实现基于树的Morse区域("
  },
  {
    "origin": ") as described in",
    "local": ")如中所述"
  },
  {
    "origin": "extended with scaled extraction ability.",
    "local": "扩展了按比例提取能力。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Class implementing",
    "local": "类实现"
  },
  {
    "origin": "(Oxford Visual Geometry Group) descriptor trained end to end using \"Descriptor Learning Using Convex Optimisation\" (DLCO) aparatus described in",
    "local": "（牛津视觉几何组）描述符训练端到端使用“描述符学习使用凸优化”（DLCO）aparatus描述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Typedefs",
    "local": "类型定义"
  },
  {
    "origin": "typedef",
    "local": "类型定义"
  },
  {
    "origin": "typedef",
    "local": "类型定义"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, std::vector&lt;",
    "local": "图像，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints, int",
    "local": "&燃气轮机&amp；关键点，int"
  },
  {
    "origin": ", bool nonmaxSuppression=true,",
    "local": "，bool nonmaxdelete=真，"
  },
  {
    "origin": "type=",
    "local": "类型="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Estimates cornerness for prespecified KeyPoints using the FAST algorithm.",
    "local": "使用快速算法估计预先指定的关键点的角度。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;size1, const",
    "local": "&amp；尺寸1，常数"
  },
  {
    "origin": "&amp;size2, const std::vector&lt;",
    "local": "&amp；size2，const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints1, const std::vector&lt;",
    "local": "&燃气轮机&amp；keypoints1，const std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints2, const std::vector&lt;",
    "local": "&燃气轮机&amp；keypoints2，const std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;matches1to2, std::vector&lt;",
    "local": "&燃气轮机&amp；匹配1to2，std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;matchesGMS, const bool withRotation=false, const bool withScale=false, const double thresholdFactor=6.0)",
    "local": "&燃气轮机&amp；匹配gms，const bool with rotation=false，const bool with scale=false，const double thresholdFactor=6.0）"
  },
  {
    "origin": "GMS (Grid-based Motion Statistics) feature matching strategy described in",
    "local": "GMS（Grid-based Motion Statistics）特征匹配策略如中所述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints1, const std::vector&lt;",
    "local": "&燃气轮机&amp；keypoints1，const std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints2, const std::vector&lt; int &gt; &amp;nn1, const std::vector&lt; int &gt; &amp;nn2, std::vector&lt;",
    "local": "&燃气轮机&amp；keypoints2，const std:：vector&lt；内部&gt&amp；nn1，const std：：向量&lt；内部&gt&amp；nn2，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;matches1to2)",
    "local": "&燃气轮机&amp；匹配1（2）"
  },
  {
    "origin": "LOGOS (Local geometric support for high-outlier spatial verification) feature matching strategy described in",
    "local": "LOGOS（高离群值空间验证的局部几何支持）特征匹配策略如中所述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Typedef Documentation",
    "local": "Typedef文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "SurfDescriptorExtractor",
    "local": "表面描述符"
  },
  {
    "origin": "typedef",
    "local": "类型定义"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "SurfFeatureDetector",
    "local": "表面特征检测器"
  },
  {
    "origin": "typedef",
    "local": "类型定义"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:49 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:49为OpenCV生成，&#160；"
  }
]