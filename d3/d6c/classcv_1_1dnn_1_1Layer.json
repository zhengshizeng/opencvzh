[
  {
    "origin": "OpenCV: cv::dnn::Layer Class Reference",
    "local": "OpenCV:cv:：dnn:：Layer类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Public Attributes",
    "local": "公共属性"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::dnn::Layer Class Reference",
    "local": "cv:：dnn:：图层类引用"
  },
  {
    "origin": "This interface class allows to build new Layers - are building blocks of networks.",
    "local": "这个接口类允许构建新的层，这些层是网络的构建块。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::dnn::Layer:",
    "local": "cv:：dnn:：Layer的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;params)",
    "local": "&amp；参数）"
  },
  {
    "origin": "Initializes only",
    "local": "仅初始化"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "fields.",
    "local": "领域。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;node, const std::vector&lt;",
    "local": "&燃气轮机&amp；节点，const std:：vector&lt；"
  },
  {
    "origin": "*&gt; &amp;inputs, const std::vector&lt;",
    "local": "*&燃气轮机&amp；输入，const std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;outputs, int targetId) const",
    "local": "&gt；gt；amp；输出，int targetId）常量"
  },
  {
    "origin": "Automatic Halide scheduling based on layer hyper-parameters.",
    "local": "基于层超参数的卤化物自动调度。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "*&gt; &amp;input, std::vector&lt;",
    "local": "*&燃气轮机&amp；输入，std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;output)",
    "local": "&燃气轮机&amp；输出）"
  },
  {
    "origin": "Computes and sets internal parameters according to inputs, outputs and blobs.",
    "local": "根据输入、输出和blob计算和设置内部参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "inputs,",
    "local": "输入，"
  },
  {
    "origin": "outputs)",
    "local": "输出）"
  },
  {
    "origin": "Computes and sets internal parameters according to inputs, outputs and blobs.",
    "local": "根据输入、输出和blob计算和设置内部参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;inputs, std::vector&lt;",
    "local": "&燃气轮机&amp；输入，std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;outputs)",
    "local": "&燃气轮机&amp；输出）"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;inputs)",
    "local": "&燃气轮机&amp；输入）"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(std::vector&lt;",
    "local": "（标准：：向量&lt；"
  },
  {
    "origin": "*&gt; &amp;input, std::vector&lt;",
    "local": "*&燃气轮机&amp；输入，std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;output, std::vector&lt;",
    "local": "&燃气轮机&amp；输出，std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;internals)",
    "local": "&燃气轮机&amp；内部构件）"
  },
  {
    "origin": "Given the",
    "local": "鉴于"
  },
  {
    "origin": "blobs, computes the output",
    "local": "水滴，计算输出"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "inputs,",
    "local": "输入，"
  },
  {
    "origin": "outputs,",
    "local": "输出，"
  },
  {
    "origin": "internals)",
    "local": "内部构件）"
  },
  {
    "origin": "Given the",
    "local": "鉴于"
  },
  {
    "origin": "blobs, computes the output",
    "local": "水滴，计算输出"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "inputs,",
    "local": "输入，"
  },
  {
    "origin": "outputs,",
    "local": "输出，"
  },
  {
    "origin": "internals)",
    "local": "内部构件）"
  },
  {
    "origin": "Given the",
    "local": "鉴于"
  },
  {
    "origin": "blobs, computes the output",
    "local": "水滴，计算输出"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;inputs, const std::vector&lt;",
    "local": "&燃气轮机&amp；输入，const std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;outputs) const",
    "local": "&燃气轮机&amp；输出）常数"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;inputs, const int requiredOutputs, std::vector&lt;",
    "local": "&燃气轮机&amp；输入，const int requiredOutputs，std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;outputs, std::vector&lt;",
    "local": "&燃气轮机&amp；输出，std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;internals) const",
    "local": "&燃气轮机&amp；（内部）施工"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;scale,",
    "local": "&amp；比例尺，"
  },
  {
    "origin": "&amp;shift) const",
    "local": "&amp；班次）常数"
  },
  {
    "origin": "Returns parameters of layers with channel-wise multiplication and addition.",
    "local": "返回具有按通道乘法和加法的层的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(void *context, const std::vector&lt;",
    "local": "（void*上下文，const std:：vector&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;&gt; &amp;inputs, const std::vector&lt;",
    "local": "&gt；gt；&gt；gt；amp；输入，const std:：vector&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;&gt; &amp;outputs)",
    "local": "&燃气轮机&燃气轮机&amp；输出）"
  },
  {
    "origin": "Returns a CUDA backend node.",
    "local": "返回CUDA后端节点。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;inputs)",
    "local": "&燃气轮机&燃气轮机&amp；输入）"
  },
  {
    "origin": "Returns Halide backend node.",
    "local": "返回卤化物后端节点。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;inputs)",
    "local": "&燃气轮机&燃气轮机&amp；输入）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;inputs, const std::vector&lt;",
    "local": "&gt；gt；&gt；gt；amp；输入，const std:：vector&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;nodes)",
    "local": "&燃气轮机&燃气轮机&amp；节点）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;inputs)",
    "local": "&燃气轮机&燃气轮机&amp；输入）"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "inputName)",
    "local": "输入"
  },
  {
    "origin": "Returns index of input blob into the input array.",
    "local": "将输入blob的索引返回到输入数组中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;outputName)",
    "local": "&amp；输出名称"
  },
  {
    "origin": "Returns index of output blob in output array.",
    "local": "返回输出数组中输出blob的索引。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;inputs, std::vector&lt;",
    "local": "&燃气轮机&amp；输入，std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;outputs, std::vector&lt;",
    "local": "&燃气轮机&amp；输出，std:：vector&lt；"
  },
  {
    "origin": "&gt; &amp;internals)",
    "local": "&燃气轮机&amp；内部构件）"
  },
  {
    "origin": "Allocates layer and computes output.",
    "local": "分配层并计算输出。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;layer)",
    "local": "&燃气轮机&amp；层）"
  },
  {
    "origin": "Tries to attach to the layer the subsequent activation layer, i.e. do the layer fusion in a partial case.",
    "local": "尝试将随后的激活层连接到该层，即在部分情况下进行层融合。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;params)",
    "local": "&amp；参数）"
  },
  {
    "origin": "Initializes only",
    "local": "仅初始化"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "fields.",
    "local": "领域。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(int backendId)",
    "local": "（int后端）"
  },
  {
    "origin": "Ask layer if it support specific backend for doing computations.",
    "local": "询问层是否支持特定的后端进行计算。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;node)",
    "local": "&燃气轮机&amp；节点）"
  },
  {
    "origin": "Implement layers fusing.",
    "local": "实现层融合。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;top)",
    "local": "&燃气轮机&amp；顶部）"
  },
  {
    "origin": "Try to fuse current layer with a next one.",
    "local": "试着把当前层和下一层融合。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "\"Deattaches\" all the layers, attached to particular layer.",
    "local": "“去附加”所有层，附加到特定层。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "(const std::vector&lt;",
    "local": "（const std：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;inputs)",
    "local": "&燃气轮机&amp；输入）"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Attributes",
    "local": "公共属性"
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "List of learned parameters must be stored here to allow read them by using",
    "local": "必须在此处存储已学习参数的列表，以便使用"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Name of the layer instance, can be used for logging or other internal purposes.",
    "local": "层实例的名称，可用于日志记录或其他内部用途。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "prefer target for layer forwarding",
    "local": "层转发首选目标"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Type name which was used for creating layer by layer factory.",
    "local": "用于逐层创建工厂的类型名称。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "This interface class allows to build new Layers - are building blocks of networks.",
    "local": "这个接口类允许构建新的层，这些层是网络的构建块。"
  },
  {
    "origin": "Each class, derived from",
    "local": "每个类，派生自"
  },
  {
    "origin": ", must implement allocate() methods to declare own outputs and",
    "local": "，必须实现allocate（）方法来声明自己的输出和"
  },
  {
    "origin": "to compute outputs. Also before using the new layer into networks you must register your layer by using one of",
    "local": "计算输出。另外，在将新层用于网络之前，必须使用以下方法之一注册层："
  },
  {
    "origin": "macros.",
    "local": "宏。"
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "Layer()",
    "local": "层（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "cv::dnn::Layer::Layer",
    "local": "cv:：dnn:：图层：：图层"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "Layer()",
    "local": "层（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "cv::dnn::Layer::Layer",
    "local": "cv:：dnn:：图层：：图层"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "params",
    "local": "参数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "explicit",
    "local": "明确的"
  },
  {
    "origin": "Initializes only",
    "local": "仅初始化"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "fields.",
    "local": "领域。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "~Layer()",
    "local": "~Layer（）"
  },
  {
    "origin": "virtual cv::dnn::Layer::~Layer",
    "local": "虚拟cv：：dnn：：图层：：~图层"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "applyHalideScheduler()",
    "local": "应用程序时间表（）"
  },
  {
    "origin": "virtual void cv::dnn::Layer::applyHalideScheduler",
    "local": "虚拟void cv:：dnn:：Layer:：applyHalideScheduler"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "node",
    "local": "节点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "*&gt; &amp;",
    "local": "*&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "targetId",
    "local": "目标"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Automatic Halide scheduling based on layer hyper-parameters.",
    "local": "基于层超参数的卤化物自动调度。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "node",
    "local": "节点"
  },
  {
    "origin": "Backend node with Halide functions.",
    "local": "具有卤化物功能的后端节点。"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": "Blobs that will be used in forward invocations.",
    "local": "将在正向调用中使用的blob。"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": "Blobs that will be used in forward invocations.",
    "local": "将在正向调用中使用的blob。"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "targetId",
    "local": "目标"
  },
  {
    "origin": "Target identifier",
    "local": "目标标识符"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "don't use own Halide::Func members because we can have applied layers fusing. In this way the fused function should be scheduled.",
    "local": "不要使用自己的Halide：：Func成员，因为我们可以应用层融合。这样就可以安排融合功能。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "finalize()",
    "local": "完成（）"
  },
  {
    "origin": "[1/4]",
    "local": "[1/4]"
  },
  {
    "origin": "virtual void cv::dnn::Layer::finalize",
    "local": "虚拟void cv:：dnn:：Layer:：finalize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "*&gt; &amp;",
    "local": "*&燃气轮机&amp；"
  },
  {
    "origin": "input",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "output",
    "local": "输出"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dnn_Layer.finalize(",
    "local": "cv.dnn\\U图层确定("
  },
  {
    "origin": "inputs[, outputs]",
    "local": "输入[，输出]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Computes and sets internal parameters according to inputs, outputs and blobs.",
    "local": "根据输入、输出和blob计算和设置内部参数。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "instead",
    "local": "相反"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "input",
    "local": "输入"
  },
  {
    "origin": "vector of already allocated input blobs",
    "local": "已分配输入blob的向量"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "output",
    "local": "输出"
  },
  {
    "origin": "vector of already allocated output blobs",
    "local": "已分配输出blob的向量"
  },
  {
    "origin": "If this method is called after network has allocated all memory for input and output blobs and before inferencing.",
    "local": "如果在网络为输入和输出blob分配了所有内存之后和推断之前调用此方法。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "finalize()",
    "local": "完成（）"
  },
  {
    "origin": "[2/4]",
    "local": "[2/4]"
  },
  {
    "origin": "virtual void cv::dnn::Layer::finalize",
    "local": "虚拟void cv:：dnn:：Layer:：finalize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dnn_Layer.finalize(",
    "local": "cv.dnn\\U图层确定("
  },
  {
    "origin": "inputs[, outputs]",
    "local": "输入[，输出]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Computes and sets internal parameters according to inputs, outputs and blobs.",
    "local": "根据输入、输出和blob计算和设置内部参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": "vector of already allocated input blobs",
    "local": "已分配输入blob的向量"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": "vector of already allocated output blobs",
    "local": "已分配输出blob的向量"
  },
  {
    "origin": "If this method is called after network has allocated all memory for input and output blobs and before inferencing.",
    "local": "如果在网络为输入和输出blob分配了所有内存之后和推断之前调用此方法。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "finalize()",
    "local": "完成（）"
  },
  {
    "origin": "[3/4]",
    "local": "[3/4]"
  },
  {
    "origin": "void cv::dnn::Layer::finalize",
    "local": "void cv:：dnn:：Layer:：finalize无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dnn_Layer.finalize(",
    "local": "cv.dnn\\U图层确定("
  },
  {
    "origin": "inputs[, outputs]",
    "local": "输入[，输出]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "instead",
    "local": "相反"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "finalize()",
    "local": "完成（）"
  },
  {
    "origin": "[4/4]",
    "local": "[4/4]"
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; cv::dnn::Layer::finalize",
    "local": "&燃气轮机；cv:：dnn:：图层：：完成"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dnn_Layer.finalize(",
    "local": "cv.dnn\\U图层确定("
  },
  {
    "origin": "inputs[, outputs]",
    "local": "输入[，输出]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "instead",
    "local": "相反"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "forward()",
    "local": "转发（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "virtual void cv::dnn::Layer::forward",
    "local": "虚拟void cv:：dnn:：Layer:：forward"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "*&gt; &amp;",
    "local": "*&燃气轮机&amp；"
  },
  {
    "origin": "input",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "output",
    "local": "输出"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "internals",
    "local": "内部构件"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Given the",
    "local": "鉴于"
  },
  {
    "origin": "blobs, computes the output",
    "local": "水滴，计算输出"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Use",
    "local": "使用"
  },
  {
    "origin": "instead",
    "local": "相反"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "input",
    "local": "输入"
  },
  {
    "origin": "the input blobs.",
    "local": "输入斑点。"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "output",
    "local": "输出"
  },
  {
    "origin": "allocated output blobs, which will store results of the computation.",
    "local": "分配的输出blob，它将存储计算结果。"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "internals",
    "local": "内部构件"
  },
  {
    "origin": "allocated internal blobs",
    "local": "分配的内部blob"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "forward()",
    "local": "转发（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "virtual void cv::dnn::Layer::forward",
    "local": "虚拟void cv:：dnn:：Layer:：forward"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "internals",
    "local": "内部构件"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Given the",
    "local": "鉴于"
  },
  {
    "origin": "blobs, computes the output",
    "local": "水滴，计算输出"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": "the input blobs.",
    "local": "输入斑点。"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": "allocated output blobs, which will store results of the computation.",
    "local": "分配的输出blob，它将存储计算结果。"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "internals",
    "local": "内部构件"
  },
  {
    "origin": "allocated internal blobs",
    "local": "分配的内部blob"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "forward_fallback()",
    "local": "前向\\回退（）"
  },
  {
    "origin": "void cv::dnn::Layer::forward_fallback",
    "local": "void cv:：dnn:：Layer:：forward\\u fallback无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "internals",
    "local": "内部构件"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Given the",
    "local": "鉴于"
  },
  {
    "origin": "blobs, computes the output",
    "local": "水滴，计算输出"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": "the input blobs.",
    "local": "输入斑点。"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": "allocated output blobs, which will store results of the computation.",
    "local": "分配的输出blob，它将存储计算结果。"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "internals",
    "local": "内部构件"
  },
  {
    "origin": "allocated internal blobs",
    "local": "分配的内部blob"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getFLOPS()",
    "local": "getFLOPS（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::dnn::Layer::getFLOPS",
    "local": "cv：：dnn：：层：：getFLOPS"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMemoryShapes()",
    "local": "getMemoryShapes（）"
  },
  {
    "origin": "virtual bool cv::dnn::Layer::getMemoryShapes",
    "local": "虚拟bool cv:：dnn:：Layer:：getMemoryShapes"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const int",
    "local": "const int"
  },
  {
    "origin": "requiredOutputs",
    "local": "必修的"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "internals",
    "local": "内部构件"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getScaleShift()",
    "local": "getScaleShift（）"
  },
  {
    "origin": "virtual void cv::dnn::Layer::getScaleShift",
    "local": "虚拟void cv:：dnn:：Layer:：getScaleShift"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "scale",
    "local": "规模"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "shift",
    "local": "转移"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Returns parameters of layers with channel-wise multiplication and addition.",
    "local": "返回具有按通道乘法和加法的层的参数。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "scale",
    "local": "规模"
  },
  {
    "origin": "Channel-wise multipliers. Total number of values should be equal to number of channels.",
    "local": "通道方面的乘数。值的总数应等于通道数。"
  },
  {
    "origin": "[out]",
    "local": "[输出]"
  },
  {
    "origin": "shift",
    "local": "转移"
  },
  {
    "origin": "Channel-wise offsets. Total number of values should be equal to number of channels.",
    "local": "通道方向偏移。值的总数应等于通道数。"
  },
  {
    "origin": "Some layers can fuse their transformations with further layers. In example, convolution + batch normalization. This way base layer use weights from layer after it. Fused layer is skipped. By default,",
    "local": "某些层可以将其变换与其他层融合。例如，卷积+批量标准化。这样基础层就可以使用后面层的权重。跳过融合层。默认情况下，"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "are empty that means layer has no element-wise multiplications or additions.",
    "local": "是空的，这意味着层并没有元素级的乘法或加法。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "initCUDA()",
    "local": "初始化CUDA（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::dnn::Layer::initCUDA",
    "local": "&燃气轮机；cv:：dnn:：层：：初始化CUDA"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "void *",
    "local": "无效*"
  },
  {
    "origin": "context",
    "local": "上下文"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;&gt; &amp;",
    "local": "&燃气轮机&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;&gt; &amp;",
    "local": "&燃气轮机&燃气轮机&amp；"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Returns a CUDA backend node.",
    "local": "返回CUDA后端节点。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "context",
    "local": "上下文"
  },
  {
    "origin": "void pointer to CSLContext object",
    "local": "指向CSLContext对象的无效指针"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": "layer inputs",
    "local": "图层输入"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": "layer outputs",
    "local": "图层输出"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "initHalide()",
    "local": "卤化物（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::dnn::Layer::initHalide",
    "local": "&燃气轮机；cv:：dnn:：Layer:：initHalide卤化物"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;",
    "local": "&燃气轮机&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Returns Halide backend node.",
    "local": "返回卤化物后端节点。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": "Input Halide buffers.",
    "local": "输入卤化物缓冲器。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Input buffers should be exactly the same that will be used in forward invocations. Despite we can use Halide::ImageParam based on input shape only, it helps prevent some memory management issues (if something wrong, Halide tests will be failed).",
    "local": "输入缓冲区应该与前向调用中使用的完全相同。尽管我们可以仅基于输入形状使用Halide：：ImageParam，但它有助于防止一些内存管理问题（如果出现错误，卤化物测试将失败）。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "initInfEngine()",
    "local": "初始化引擎（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::dnn::Layer::initInfEngine",
    "local": "&燃气轮机；cv:：dnn:：Layer:：InitInEngine"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;",
    "local": "&燃气轮机&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "initNgraph()",
    "local": "初始化图（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::dnn::Layer::initNgraph",
    "local": "&燃气轮机；cv:：dnn:：层：：初始化图"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;",
    "local": "&燃气轮机&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;",
    "local": "&燃气轮机&燃气轮机&amp；"
  },
  {
    "origin": "nodes",
    "local": "节点"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "initVkCom()",
    "local": "初始化VKCom（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::dnn::Layer::initVkCom",
    "local": "&燃气轮机；cv:：dnn:：Layer:：initVkCom"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;",
    "local": "&燃气轮机&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "inputNameToIndex()",
    "local": "inputNameToIndex（）"
  },
  {
    "origin": "virtual int cv::dnn::Layer::inputNameToIndex",
    "local": "虚拟int cv:：dnn:：Layer:：inputNameToIndex"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "inputName",
    "local": "输入"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Returns index of input blob into the input array.",
    "local": "将输入blob的索引返回到输入数组中。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "inputName",
    "local": "输入"
  },
  {
    "origin": "label of input blob",
    "local": "输入blob的标签"
  },
  {
    "origin": "Each layer input and output can be labeled to easily identify them using \"%&lt;layer_name%&gt;[.output_name]\" notation. This method maps label of input blob to its index into input vector.",
    "local": "每个层的输入和输出都可以用“%&lt；图层名称%&gt；[。输出\\“名称]”符号。该方法将输入blob的标签映射到输入向量的索引中。"
  },
  {
    "origin": "Reimplemented in",
    "local": "重新实施"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "outputNameToIndex()",
    "local": "outputNameToIndex（）"
  },
  {
    "origin": "virtual int cv::dnn::Layer::outputNameToIndex",
    "local": "虚拟int cv:：dnn:：Layer:：outputNameToIndex"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "outputName",
    "local": "输出名称"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dnn_Layer.outputNameToIndex(",
    "local": "cv.dnn\\u Layer.outputNameToIndex输出名称("
  },
  {
    "origin": "outputName",
    "local": "输出名称"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns index of output blob in output array.",
    "local": "返回输出数组中输出blob的索引。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Reimplemented in",
    "local": "重新实施"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "run()",
    "local": "运行（）"
  },
  {
    "origin": "void cv::dnn::Layer::run",
    "local": "void cv:：dnn:：Layer:：run"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "outputs",
    "local": "输出"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "internals",
    "local": "内部构件"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "outputs, internals",
    "local": "输出，内部"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.dnn_Layer.run(",
    "local": "cv.dnn\\U图层.run("
  },
  {
    "origin": "inputs, internals[, outputs]",
    "local": "输入，内部[，输出]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Allocates layer and computes output.",
    "local": "分配层并计算输出。"
  },
  {
    "origin": "This method will be removed in the future release.",
    "local": "此方法将在将来的版本中删除。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setActivation()",
    "local": "设置激活（）"
  },
  {
    "origin": "virtual bool cv::dnn::Layer::setActivation",
    "local": "虚拟bool cv:：dnn:：Layer:：setActivation"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "layer",
    "local": "层"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Tries to attach to the layer the subsequent activation layer, i.e. do the layer fusion in a partial case.",
    "local": "尝试将随后的激活层连接到该层，即在部分情况下进行层融合。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "layer",
    "local": "层"
  },
  {
    "origin": "The subsequent activation layer.",
    "local": "随后的激活层。"
  },
  {
    "origin": "Returns true if the activation layer has been attached successfully.",
    "local": "如果激活层已成功连接，则返回true。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setParamsFrom()",
    "local": "setParamsFrom（）"
  },
  {
    "origin": "void cv::dnn::Layer::setParamsFrom",
    "local": "void cv:：dnn:：Layer:：setParamsFrom无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "params",
    "local": "参数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Initializes only",
    "local": "仅初始化"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "fields.",
    "local": "领域。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "supportBackend()",
    "local": "支持后端（）"
  },
  {
    "origin": "virtual bool cv::dnn::Layer::supportBackend",
    "local": "虚拟bool cv:：dnn:：Layer:：supportBackend"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "backendId",
    "local": "后端"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Ask layer if it support specific backend for doing computations.",
    "local": "询问层是否支持特定的后端进行计算。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "backendId",
    "local": "后端"
  },
  {
    "origin": "computation backend identifier.",
    "local": "计算后端标识符。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "tryAttach()",
    "local": "tryAttach（）"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::dnn::Layer::tryAttach",
    "local": "&燃气轮机；cv:：dnn:：图层：：tryAttach"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "node",
    "local": "节点"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Implement layers fusing.",
    "local": "实现层融合。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "node",
    "local": "节点"
  },
  {
    "origin": "Backend node of bottom layer.",
    "local": "底层后端节点。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Actual for graph-based backends. If layer attached successfully, returns non-empty",
    "local": "实际用于基于图形的后端。如果层连接成功，则返回非空"
  },
  {
    "origin": "to node of the same backend. Fuse only over the last function.",
    "local": "到同一后端的节点。只在最后一个功能上熔断。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "tryFuse()",
    "local": "tryFuse（）"
  },
  {
    "origin": "virtual bool cv::dnn::Layer::tryFuse",
    "local": "虚拟bool cv:：dnn:：Layer:：tryFuse"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "top",
    "local": "顶部"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Try to fuse current layer with a next one.",
    "local": "试着把当前层和下一层融合。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "[in]",
    "local": "[英寸]"
  },
  {
    "origin": "top",
    "local": "顶部"
  },
  {
    "origin": "Next layer to be fused.",
    "local": "下一层要融合。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "True if fusion was performed.",
    "local": "如果进行了融合，则为真。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "unsetAttached()",
    "local": "附加（）"
  },
  {
    "origin": "virtual void cv::dnn::Layer::unsetAttached",
    "local": "虚空cv:：dnn:：Layer:：unsetAttached"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "\"Deattaches\" all the layers, attached to particular layer.",
    "local": "“去附加”所有层，附加到特定层。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "updateMemoryShapes()",
    "local": "updateMemoryShapes（）"
  },
  {
    "origin": "virtual bool cv::dnn::Layer::updateMemoryShapes",
    "local": "虚拟布尔cv:：dnn:：Layer:：updateMemoryShapes"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const std::vector&lt;",
    "local": "常量标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "inputs",
    "local": "输入"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Member Data Documentation",
    "local": "成员数据文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "blobs",
    "local": "斑点"
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; cv::dnn::Layer::blobs",
    "local": "&燃气轮机；cv:：dnn:：图层：：水滴"
  },
  {
    "origin": "List of learned parameters must be stored here to allow read them by using",
    "local": "必须在此处存储已学习参数的列表，以便使用"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "name",
    "local": "名称"
  },
  {
    "origin": "cv::dnn::Layer::name",
    "local": "cv:：dnn:：图层：：名称"
  },
  {
    "origin": "Name of the layer instance, can be used for logging or other internal purposes.",
    "local": "层实例的名称，可用于日志记录或其他内部用途。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "preferableTarget",
    "local": "首选目标"
  },
  {
    "origin": "int cv::dnn::Layer::preferableTarget",
    "local": "int cv:：dnn:：Layer:：preferableTarget"
  },
  {
    "origin": "prefer target for layer forwarding",
    "local": "层转发首选目标"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": "cv::dnn::Layer::type",
    "local": "cv:：dnn:：图层：：类型"
  },
  {
    "origin": "Type name which was used for creating layer by layer factory.",
    "local": "用于逐层创建工厂的类型名称。"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/dnn/",
    "local": "打开CV2/dnn/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:47为OpenCV生成"
  }
]