[
  {
    "origin": "OpenCV: Graph API: Image Structural Analysis and Shape Descriptors",
    "local": "OpenCV:graphapi：图像结构分析和形状描述符"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "Graph API: Image Structural Analysis and Shape Descriptors",
    "local": "图形API：图像结构分析和形状描述符"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src)",
    "local": "&amp；（src）"
  },
  {
    "origin": "Calculates the up-right bounding rectangle of a point set or non-zero pixels of gray-scale image.",
    "local": "计算点集的右上边界矩形或灰度图像的非零像素。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;src)",
    "local": "&燃气轮机&amp；（src）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;src)",
    "local": "&燃气轮机&amp；（src）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt;",
    "local": "&燃气轮机&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；SRC，const"
  },
  {
    "origin": "mode, const",
    "local": "模式，常量"
  },
  {
    "origin": "method, const",
    "local": "方法，常量"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;offset)",
    "local": "&燃气轮机&amp；偏移量）"
  },
  {
    "origin": "Finds contours in a binary image.",
    "local": "在二值图像中查找轮廓。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt;",
    "local": "&燃气轮机&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；SRC，const"
  },
  {
    "origin": "mode, const",
    "local": "模式，常量"
  },
  {
    "origin": "method)",
    "local": "方法）"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt;,",
    "local": "&燃气轮机&gt；，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt;",
    "local": "&燃气轮机&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；SRC，const"
  },
  {
    "origin": "mode, const",
    "local": "模式，常量"
  },
  {
    "origin": "method, const",
    "local": "方法，常量"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;offset)",
    "local": "&燃气轮机&amp；偏移量）"
  },
  {
    "origin": "Finds contours and their hierarchy in a binary image.",
    "local": "在二值图像中查找轮廓及其层次结构。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt;,",
    "local": "&燃气轮机&gt；，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt;",
    "local": "&燃气轮机&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；SRC，const"
  },
  {
    "origin": "mode, const",
    "local": "模式，常量"
  },
  {
    "origin": "method)",
    "local": "方法）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；SRC，const"
  },
  {
    "origin": "distType, const double param=0., const double reps=0., const double aeps=0.)",
    "local": "distType，const double param=0.，const double reps=0.，const double aeps=0.）"
  },
  {
    "origin": "Fits a line to a 2D point set.",
    "local": "将直线拟合到二维点集。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;src, const",
    "local": "&燃气轮机&amp；src，施工"
  },
  {
    "origin": "distType, const double param=0., const double reps=0., const double aeps=0.)",
    "local": "distType，const double param=0.，const double reps=0.，const double aeps=0.）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;src, const",
    "local": "&燃气轮机&amp；src，施工"
  },
  {
    "origin": "distType, const double param=0., const double reps=0., const double aeps=0.)",
    "local": "distType，const double param=0.，const double reps=0.，const double aeps=0.）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;src, const",
    "local": "&燃气轮机&amp；src，施工"
  },
  {
    "origin": "distType, const double param=0., const double reps=0., const double aeps=0.)",
    "local": "distType，const double param=0.，const double reps=0.，const double aeps=0.）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;src, const",
    "local": "&amp；SRC，const"
  },
  {
    "origin": "distType, const double param=0., const double reps=0., const double aeps=0.)",
    "local": "distType，const double param=0.，const double reps=0.，const double aeps=0.）"
  },
  {
    "origin": "Fits a line to a 3D point set.",
    "local": "将直线拟合到三维点集。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;src, const",
    "local": "&燃气轮机&amp；src，施工"
  },
  {
    "origin": "distType, const double param=0., const double reps=0., const double aeps=0.)",
    "local": "distType，const double param=0.，const double reps=0.，const double aeps=0.）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;src, const",
    "local": "&燃气轮机&amp；src，施工"
  },
  {
    "origin": "distType, const double param=0., const double reps=0., const double aeps=0.)",
    "local": "distType，const double param=0.，const double reps=0.，const double aeps=0.）"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;src, const",
    "local": "&燃气轮机&amp；src，施工"
  },
  {
    "origin": "distType, const double param=0., const double reps=0., const double aeps=0.)",
    "local": "distType，const double param=0.，const double reps=0.，const double aeps=0.）"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "boundingRect()",
    "local": "边界矩形（）"
  },
  {
    "origin": "[1/3]",
    "local": "[1/3]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::boundingRect",
    "local": "&燃气轮机；cv:：gapi:：边界矩形"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.gapi.boundingRect(",
    "local": "cv.gapi.boundingRect公司("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Calculates the up-right bounding rectangle of a point set or non-zero pixels of gray-scale image.",
    "local": "计算点集的右上边界矩形或灰度图像的非零像素。"
  },
  {
    "origin": "The function calculates and returns the minimal up-right bounding rectangle for the specified point set or non-zero pixels of gray-scale image.",
    "local": "该函数计算并返回指定点集或灰度图像非零像素的最小右上边界矩形。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.boundingRectMat\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.boundingRectMat”"
  },
  {
    "origin": "In case of a 2D points' set given,",
    "local": "对于给定的二维点集，"
  },
  {
    "origin": "should be 2-dimensional, have a single row or column if there are 2 channels, or have 2 columns if there is a single channel.",
    "local": "应该是二维的，如果有两个通道，则只有一行或一列，如果有一个通道，则有两列。"
  },
  {
    "origin": "should have either",
    "local": "应该有任何一个"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "depth",
    "local": "深度"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input gray-scale image",
    "local": "输入灰度图像"
  },
  {
    "origin": "; or input set of",
    "local": "; 或输入一组"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "2D points stored in",
    "local": "二维点存储在"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "boundingRect()",
    "local": "边界矩形（）"
  },
  {
    "origin": "[2/3]",
    "local": "[2/3]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::boundingRect",
    "local": "&燃气轮机；cv:：gapi:：边界矩形"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.gapi.boundingRect(",
    "local": "cv.gapi.boundingRect公司("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Calculates the up-right bounding rectangle of a point set.",
    "local": "计算点集的右上边界矩形。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.boundingRectVector32S\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.boundingRectVector32S”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input 2D point set, stored in std::vector&lt;cv::Point2i&gt;.",
    "local": "输入二维点集，存储在std:：vector&lt；cv:：Point2i&gt；。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "boundingRect()",
    "local": "边界矩形（）"
  },
  {
    "origin": "[3/3]",
    "local": "[3/3]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::boundingRect",
    "local": "&燃气轮机；cv:：gapi:：边界矩形"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.gapi.boundingRect(",
    "local": "cv.gapi.boundingRect公司("
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Calculates the up-right bounding rectangle of a point set.",
    "local": "计算点集的右上边界矩形。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.boundingRectVector32F\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.boundingRectVector32F”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input 2D point set, stored in std::vector&lt;cv::Point2f&gt;.",
    "local": "输入二维点集，存储在std:：vector&lt；cv：：点2f&gt；。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "findContours()",
    "local": "findContours（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; cv::gapi::findContours",
    "local": "&gt；gt；燃气轮机；cv：：gapi：：findContours公司"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "mode",
    "local": "模式"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "method",
    "local": "方法"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Finds contours in a binary image.",
    "local": "在二值图像中查找轮廓。"
  },
  {
    "origin": "The function retrieves contours from the binary image using the algorithm",
    "local": "该函数使用该算法从二值图像中检索轮廓"
  },
  {
    "origin": ". The contours are a useful tool for shape analysis and object detection and recognition. See squares.cpp in the OpenCV sample directory.",
    "local": ". 轮廓线是形状分析和目标检测与识别的有用工具。请参见OpenCV示例目录中的squares.cpp。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.findContours\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.findContours”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input gray-scale image",
    "local": "输入灰度图像"
  },
  {
    "origin": ". Non-zero pixels are treated as 1's. Zero pixels remain 0's, so the image is treated as binary . You can use",
    "local": ". 非零像素被视为1。零像素保持为0，因此图像被视为二进制。你可以用"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", and others to create a binary image out of a grayscale or color one. If mode equals to",
    "local": "，和其他创建一个二进制图像的灰度或彩色之一。如果mode等于"
  },
  {
    "origin": ", the input can also be a 32-bit integer image of labels (",
    "local": "，输入也可以是标签的32位整数图像("
  },
  {
    "origin": "). If",
    "local": "). 如果"
  },
  {
    "origin": "then",
    "local": "然后"
  },
  {
    "origin": "is supported only.",
    "local": "仅支持。"
  },
  {
    "origin": "mode",
    "local": "模式"
  },
  {
    "origin": "Contour retrieval mode, see",
    "local": "轮廓检索模式，请参见"
  },
  {
    "origin": "method",
    "local": "方法"
  },
  {
    "origin": "Contour approximation method, see",
    "local": "轮廓近似方法，请参见"
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": "Optional offset by which every contour point is shifted. This is useful if the contours are extracted from the image ROI and then they should be analyzed in the whole image context.",
    "local": "可选偏移量，每个轮廓点偏移量。如果从图像ROI中提取轮廓，然后在整个图像上下文中对其进行分析，这将非常有用。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "of detected contours. Each contour is stored as a",
    "local": "检测到的轮廓。每个轮廓都存储为"
  },
  {
    "origin": "of points.",
    "local": "点数。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "findContours()",
    "local": "findContours（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; cv::gapi::findContours",
    "local": "&gt；gt；燃气轮机；cv：：gapi：：findContours公司"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "mode",
    "local": "模式"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "method",
    "local": "方法"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.findContoursNoOffset\"",
    "local": "函数文本ID是“org.opencv.impproc.shape.findcontoursnoffset”"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "findContoursH()",
    "local": "FindContoursh（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt;,",
    "local": "&燃气轮机&gt；，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; cv::gapi::findContoursH",
    "local": "&gt；gt；燃气轮机；简历：：gapi：：findContoursH"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "mode",
    "local": "模式"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "method",
    "local": "方法"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Finds contours and their hierarchy in a binary image.",
    "local": "在二值图像中查找轮廓及其层次结构。"
  },
  {
    "origin": "The function retrieves contours from the binary image using the algorithm",
    "local": "该函数使用该算法从二值图像中检索轮廓"
  },
  {
    "origin": "and calculates their hierarchy. The contours are a useful tool for shape analysis and object detection and recognition. See squares.cpp in the OpenCV sample directory.",
    "local": "计算他们的等级。轮廓线是形状分析和目标检测与识别的有用工具。请参见OpenCV示例目录中的squares.cpp。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.findContoursH\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.findContoursH”"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input gray-scale image",
    "local": "输入灰度图像"
  },
  {
    "origin": ". Non-zero pixels are treated as 1's. Zero pixels remain 0's, so the image is treated as binary . You can use",
    "local": ". 非零像素被视为1。零像素保持为0，因此图像被视为二进制。你可以用"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", and others to create a binary image out of a grayscale or color one. If mode equals to",
    "local": "，和其他创建一个二进制图像的灰度或彩色之一。如果mode等于"
  },
  {
    "origin": ", the input can also be a 32-bit integer image of labels (",
    "local": "，输入也可以是标签的32位整数图像("
  },
  {
    "origin": "). If",
    "local": "). 如果"
  },
  {
    "origin": "–",
    "local": "–"
  },
  {
    "origin": "supports only.",
    "local": "仅支持。"
  },
  {
    "origin": "mode",
    "local": "模式"
  },
  {
    "origin": "Contour retrieval mode, see",
    "local": "轮廓检索模式，请参见"
  },
  {
    "origin": "method",
    "local": "方法"
  },
  {
    "origin": "Contour approximation method, see",
    "local": "轮廓近似方法，请参见"
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": "Optional offset by which every contour point is shifted. This is useful if the contours are extracted from the image ROI and then they should be analyzed in the whole image context.",
    "local": "可选偏移量，每个轮廓点偏移量。如果从图像ROI中提取轮廓，然后在整个图像上下文中对其进行分析，这将非常有用。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "of detected contours. Each contour is stored as a",
    "local": "检测到的轮廓。每个轮廓都存储为"
  },
  {
    "origin": "of points.",
    "local": "点数。"
  },
  {
    "origin": "Optional output",
    "local": "可选输出"
  },
  {
    "origin": "of",
    "local": "属于"
  },
  {
    "origin": ", containing information about the image topology. It has as many elements as the number of contours. For each i-th contour contours[i], the elements hierarchy[i][0] , hierarchy[i][1] , hierarchy[i][2] , and hierarchy[i][3] are set to 0-based indices in contours of the next and previous contours at the same hierarchical level, the first child contour and the parent contour, respectively. If for the contour i there are no next, previous, parent, or nested contours, the corresponding elements of hierarchy[i] will be negative.",
    "local": "，包含有关映像拓扑的信息。它的元素和轮廓的数量一样多。对于每个第i个等高线[i]，元素层次[i][0]、层次[i][1]、层次[i][2]和层次[i][3]分别设置为同一层次的下一个和上一个等高线的等高线、第一个子等高线和父等高线中基于0的索引。如果等高线i没有下一个、上一个、父等高线或嵌套等高线，则层次结构[i]的相应元素将为负。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "findContoursH()",
    "local": "FindContoursh（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "std::tuple&lt;",
    "local": "标准：：元组&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt;,",
    "local": "&燃气轮机&gt；，"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &gt; cv::gapi::findContoursH",
    "local": "&gt；gt；燃气轮机；简历：：gapi：：findContoursH"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "mode",
    "local": "模式"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "method",
    "local": "方法"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.findContoursHNoOffset\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.findContoursHNoOffset”"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fitLine2D()",
    "local": "FITLINE2D（）"
  },
  {
    "origin": "[1/4]",
    "local": "[1/4]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::fitLine2D",
    "local": "&燃气轮机；简历：：gapi：：fitLine2D"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Fits a line to a 2D point set.",
    "local": "将直线拟合到二维点集。"
  },
  {
    "origin": "The function fits a line to a 2D point set by minimizing \\(\\sum_i \\rho(r_i)\\) where \\(r_i\\) is a distance between the \\(i^{th}\\) point, the line and \\(\\rho(r)\\) is a distance function, one of the following:",
    "local": "该函数通过最小化\\（\\sum\\u i\\rho（r\\u i）\\）将直线拟合到二维点集，其中\\（r\\u i\\）是\\（i^{th}\\）点之间的距离，直线和\\（\\rho（r）\\）是距离函数，如下之一："
  },
  {
    "origin": "DIST_L2",
    "local": "距离L2"
  },
  {
    "origin": "\\[\\rho (r) = r^2/2 \\quad \\text{(the simplest and the fastest least-squares method)}\\]",
    "local": "\\[\\rho（r）=r^2/2\\quad\\text{（最简单最快的最小二乘法）}\\]"
  },
  {
    "origin": "DIST_L1",
    "local": "距离L1"
  },
  {
    "origin": "\\[\\rho (r) = r\\]",
    "local": "\\[\\rho（r）=r\\]"
  },
  {
    "origin": "DIST_L12",
    "local": "距离12"
  },
  {
    "origin": "\\[\\rho (r) = 2 \\cdot ( \\sqrt{1 + \\frac{r^2}{2}} - 1)\\]",
    "local": "\\[\\rho（r）=2\\cdot（\\sqrt{1+\\frac{r^2}{2}}-1）\\]"
  },
  {
    "origin": "DIST_FAIR",
    "local": "分销市场"
  },
  {
    "origin": "\\[\\rho \\left (r \\right ) = C^2 \\cdot \\left ( \\frac{r}{C} - \\log{\\left(1 + \\frac{r}{C}\\right)} \\right ) \\quad \\text{where} \\quad C=1.3998\\]",
    "local": "\\[\\rho\\left（r\\right）=C^2\\cdot\\left（\\frac{r}{C}-\\log{\\left（1+\\frac{r}{C}\\right）}\\right）\\quad\\text{where}\\quad C=1.3998\\]"
  },
  {
    "origin": "DIST_WELSCH",
    "local": "韦尔希区"
  },
  {
    "origin": "\\[\\rho \\left (r \\right ) = \\frac{C^2}{2} \\cdot \\left ( 1 - \\exp{\\left(-\\left(\\frac{r}{C}\\right)^2\\right)} \\right ) \\quad \\text{where} \\quad C=2.9846\\]",
    "local": "\\[\\rho\\left（r\\right）=\\frac{C^2}{2}\\cdot\\left（1-\\exp{\\left（\\frac{r}{C}\\right）^2\\right）}\\right）\\quad\\text{where}\\quad C=2.9846\\]"
  },
  {
    "origin": "DIST_HUBER",
    "local": "胡伯区"
  },
  {
    "origin": "\\[\\rho (r) = \\fork{r^2/2}{if \\(r &lt; C\\)}{C \\cdot (r-C/2)}{otherwise} \\quad \\text{where} \\quad C=1.345\\]",
    "local": "\\[\\rho（r）=\\fork{r^2/2}{if\\（r&lt；C\\）}{C\\cdot（r-C/2）}{否则}\\quad\\text{其中}\\quad C=1.345\\]"
  },
  {
    "origin": "The algorithm is based on the M-estimator (",
    "local": "该算法基于M估计("
  },
  {
    "origin": "http://en.wikipedia.org/wiki/M-estimator",
    "local": "http://en.wikipedia.org/wiki/M-estimator"
  },
  {
    "origin": ") technique that iteratively fits the line using the weighted least-squares algorithm. After each iteration the weights \\(w_i\\) are adjusted to be inversely proportional to \\(\\rho(r_i)\\) .",
    "local": ")使用加权最小二乘法迭代拟合直线的技术。在每次迭代之后，权值\\（wu i\\）被调整成与\\（\\rho（ru i）\\）成反比。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.fitLine2DMat\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.fitLine2DMat”"
  },
  {
    "origin": "In case of an N-dimentional points' set given,",
    "local": "对于给定的N维点集，"
  },
  {
    "origin": "should be 2-dimensional, have a single row or column if there are N channels, or have N columns if there is a single channel.",
    "local": "应该是二维的，如果有N个通道，则只有一行或一列，如果有一个通道，则有N列。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input set of 2D points stored in one of possible containers:",
    "local": "输入存储在一个可能容器中的2D点集："
  },
  {
    "origin": ", std::vector&lt;cv::Point2i&gt;, std::vector&lt;cv::Point2f&gt;, std::vector&lt;cv::Point2d&gt;.",
    "local": "，标准：：向量&lt；cv：：点2i&gt；，标准：：向量&lt；cv：：点2f&gt；，标准：：向量&lt；cv:：Point2d&gt；。"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": "Distance used by the M-estimator, see",
    "local": "M-估计器使用的距离，参见"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "are not suppored.",
    "local": "不支持。"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "Numerical parameter ( C ) for some types of distances. If it is 0, an optimal value is chosen.",
    "local": "某些距离类型的数值参数（C）。如果为0，则选择最佳值。"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "Sufficient accuracy for the radius (distance between the coordinate origin and the line). 1.0 would be a good default value for reps. If it is 0, a default value is chosen.",
    "local": "足够精确的半径（坐标原点和直线之间的距离）。1.0对于reps是一个很好的默认值。如果为0，则选择默认值。"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "Sufficient accuracy for the angle. 0.01 would be a good default value for aeps. If it is 0, a default value is chosen.",
    "local": "足够精确的角度。对于aeps，0.01是一个很好的默认值。如果为0，则选择默认值。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "Output line parameters: a vector of 4 elements (like Vec4f) - (vx, vy, x0, y0), where (vx, vy) is a normalized vector collinear to the line and (x0, y0) is a point on the line.",
    "local": "输出线参数：由4个元素组成的向量（如Vec4f）-（vx，vy，x0，y0），其中（vx，vy）是与线共线的标准化向量，（x0，y0）是线上的一个点。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fitLine2D()",
    "local": "FITLINE2D（）"
  },
  {
    "origin": "[2/4]",
    "local": "[2/4]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::fitLine2D",
    "local": "&燃气轮机；简历：：gapi：：fitLine2D"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.fitLine2DVector32S\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.fitLine2DVector32S”"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fitLine2D()",
    "local": "FITLINE2D（）"
  },
  {
    "origin": "[3/4]",
    "local": "[3/4]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::fitLine2D",
    "local": "&燃气轮机；简历：：gapi：：fitLine2D"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.fitLine2DVector32F\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.fitLine2DVector32F”"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fitLine2D()",
    "local": "FITLINE2D（）"
  },
  {
    "origin": "[4/4]",
    "local": "[4/4]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::fitLine2D",
    "local": "&燃气轮机；简历：：gapi：：fitLine2D"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.fitLine2DVector64F\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.fitLine2DVector64F”"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fitLine3D()",
    "local": "FitLine3D（）"
  },
  {
    "origin": "[1/4]",
    "local": "[1/4]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::fitLine3D",
    "local": "&燃气轮机；简历：：gapi：：fitLine3D"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Fits a line to a 3D point set.",
    "local": "将直线拟合到三维点集。"
  },
  {
    "origin": "The function fits a line to a 3D point set by minimizing \\(\\sum_i \\rho(r_i)\\) where \\(r_i\\) is a distance between the \\(i^{th}\\) point, the line and \\(\\rho(r)\\) is a distance function, one of the following:",
    "local": "该函数通过最小化\\（\\sum\\u i\\rho（r\\u i）\\）将直线拟合到三维点集，其中\\（r\\u i\\）是\\（i^{th}\\）点之间的距离，直线和\\（\\rho（r）\\）是一个距离函数，如下之一："
  },
  {
    "origin": "DIST_L2",
    "local": "距离L2"
  },
  {
    "origin": "\\[\\rho (r) = r^2/2 \\quad \\text{(the simplest and the fastest least-squares method)}\\]",
    "local": "\\[\\rho（r）=r^2/2\\quad\\text{（最简单最快的最小二乘法）}\\]"
  },
  {
    "origin": "DIST_L1",
    "local": "距离L1"
  },
  {
    "origin": "\\[\\rho (r) = r\\]",
    "local": "\\[\\rho（r）=r\\]"
  },
  {
    "origin": "DIST_L12",
    "local": "距离12"
  },
  {
    "origin": "\\[\\rho (r) = 2 \\cdot ( \\sqrt{1 + \\frac{r^2}{2}} - 1)\\]",
    "local": "\\[\\rho（r）=2\\cdot（\\sqrt{1+\\frac{r^2}{2}}-1）\\]"
  },
  {
    "origin": "DIST_FAIR",
    "local": "分销市场"
  },
  {
    "origin": "\\[\\rho \\left (r \\right ) = C^2 \\cdot \\left ( \\frac{r}{C} - \\log{\\left(1 + \\frac{r}{C}\\right)} \\right ) \\quad \\text{where} \\quad C=1.3998\\]",
    "local": "\\[\\rho\\left（r\\right）=C^2\\cdot\\left（\\frac{r}{C}-\\log{\\left（1+\\frac{r}{C}\\right）}\\right）\\quad\\text{where}\\quad C=1.3998\\]"
  },
  {
    "origin": "DIST_WELSCH",
    "local": "韦尔希区"
  },
  {
    "origin": "\\[\\rho \\left (r \\right ) = \\frac{C^2}{2} \\cdot \\left ( 1 - \\exp{\\left(-\\left(\\frac{r}{C}\\right)^2\\right)} \\right ) \\quad \\text{where} \\quad C=2.9846\\]",
    "local": "\\[\\rho\\left（r\\right）=\\frac{C^2}{2}\\cdot\\left（1-\\exp{\\left（\\frac{r}{C}\\right）^2\\right）}\\right）\\quad\\text{where}\\quad C=2.9846\\]"
  },
  {
    "origin": "DIST_HUBER",
    "local": "胡伯区"
  },
  {
    "origin": "\\[\\rho (r) = \\fork{r^2/2}{if \\(r &lt; C\\)}{C \\cdot (r-C/2)}{otherwise} \\quad \\text{where} \\quad C=1.345\\]",
    "local": "\\[\\rho（r）=\\fork{r^2/2}{if\\（r&lt；C\\）}{C\\cdot（r-C/2）}{否则}\\quad\\text{其中}\\quad C=1.345\\]"
  },
  {
    "origin": "The algorithm is based on the M-estimator (",
    "local": "该算法基于M估计("
  },
  {
    "origin": "http://en.wikipedia.org/wiki/M-estimator",
    "local": "http://en.wikipedia.org/wiki/M-estimator"
  },
  {
    "origin": ") technique that iteratively fits the line using the weighted least-squares algorithm. After each iteration the weights \\(w_i\\) are adjusted to be inversely proportional to \\(\\rho(r_i)\\) .",
    "local": ")使用加权最小二乘法迭代拟合直线的技术。在每次迭代之后，权值\\（wu i\\）被调整成与\\（\\rho（ru i）\\）成反比。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.fitLine3DMat\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.fitLine3DMat”"
  },
  {
    "origin": "In case of an N-dimentional points' set given,",
    "local": "对于给定的N维点集，"
  },
  {
    "origin": "should be 2-dimensional, have a single row or column if there are N channels, or have N columns if there is a single channel.",
    "local": "应该是二维的，如果有N个通道，则只有一行或一列，如果有一个通道，则有N列。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": "Input set of 3D points stored in one of possible containers:",
    "local": "输入一组存储在一个可能的容器中的三维点："
  },
  {
    "origin": ", std::vector&lt;cv::Point3i&gt;, std::vector&lt;cv::Point3f&gt;, std::vector&lt;cv::Point3d&gt;.",
    "local": "，标准：：向量&lt；cv：：点3i&gt；，标准：：向量&lt；cv：：点3f&gt；，标准：：向量&lt；cv:：Point3d&gt；。"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": "Distance used by the M-estimator, see",
    "local": "M-估计器使用的距离，参见"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "are not suppored.",
    "local": "不支持。"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "Numerical parameter ( C ) for some types of distances. If it is 0, an optimal value is chosen.",
    "local": "某些距离类型的数值参数（C）。如果为0，则选择最佳值。"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "Sufficient accuracy for the radius (distance between the coordinate origin and the line). 1.0 would be a good default value for reps. If it is 0, a default value is chosen.",
    "local": "足够精确的半径（坐标原点和直线之间的距离）。1.0对于reps是一个很好的默认值。如果为0，则选择默认值。"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "Sufficient accuracy for the angle. 0.01 would be a good default value for aeps. If it is 0, a default value is chosen.",
    "local": "足够精确的角度。对于aeps，0.01是一个很好的默认值。如果为0，则选择默认值。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "Output line parameters: a vector of 6 elements (like Vec6f) - (vx, vy, vz, x0, y0, z0), where (vx, vy, vz) is a normalized vector collinear to the line and (x0, y0, z0) is a point on the line.",
    "local": "输出线参数：由6个元素组成的向量（如Vec6f）-（vx，vy，vz，x0，y0，z0），其中（vx，vy，vz）是与线共线的标准化向量，（x0，y0，z0）是线上的一个点。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fitLine3D()",
    "local": "FitLine3D（）"
  },
  {
    "origin": "[2/4]",
    "local": "[2/4]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::fitLine3D",
    "local": "&燃气轮机；简历：：gapi：：fitLine3D"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.fitLine3DVector32S\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.fitLine3DVector32S”"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fitLine3D()",
    "local": "FitLine3D（）"
  },
  {
    "origin": "[3/4]",
    "local": "[3/4]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::fitLine3D",
    "local": "&燃气轮机；简历：：gapi：：fitLine3D"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.fitLine3DVector32F\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.fitLine3DVector32F”"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "fitLine3D()",
    "local": "FitLine3D（）"
  },
  {
    "origin": "[4/4]",
    "local": "[4/4]"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::gapi::fitLine3D",
    "local": "&燃气轮机；简历：：gapi：：fitLine3D"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "src",
    "local": "src公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "distType",
    "local": "离散型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "param",
    "local": "住手"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "reps",
    "local": "代表"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const double",
    "local": "双精度常数"
  },
  {
    "origin": "aeps",
    "local": "aeps公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Function textual ID is \"org.opencv.imgproc.shape.fitLine3DVector64F\"",
    "local": "函数文本ID为“org.opencv.imgproc.shape.fitLine3DVector64F”"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:41为OpenCV生成"
  }
]