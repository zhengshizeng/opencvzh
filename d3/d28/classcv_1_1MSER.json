[
  {
    "origin": "OpenCV: cv::MSER Class Reference",
    "local": "OpenCV:cv:：MSER类引用"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::MSER Class Reference",
    "local": "cv:：MSER类引用"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "»",
    "local": "»"
  },
  {
    "origin": "Maximally stable extremal region extractor.",
    "local": "极大稳定极值区域抽取器。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::MSER:",
    "local": "cv:：MSER的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, std::vector&lt; std::vector&lt;",
    "local": "图像，标准：：向量&lt；标准：：向量&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;msers, std::vector&lt;",
    "local": "&gt；gt；&gt；gt；amp；msers，std：：向量&lt；"
  },
  {
    "origin": "Detect MSER regions.",
    "local": "检测MSER区域。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, std::vector&lt;",
    "local": "图像，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints,",
    "local": "&燃气轮机&amp；关键点，"
  },
  {
    "origin": "descriptors)",
    "local": "描述符）"
  },
  {
    "origin": "Computes the descriptors for a set of keypoints detected in an image (first variant) or image set (second variant).",
    "local": "计算在图像（第一变体）或图像集（第二变体）中检测到的一组关键点的描述符。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "images, std::vector&lt; std::vector&lt;",
    "local": "图像，标准：：向量&lt；标准：：向量&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;keypoints,",
    "local": "&gt；&quot；&gt；gt；&amp；关键点，"
  },
  {
    "origin": "descriptors)",
    "local": "描述符）"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual int",
    "local": "虚拟整数"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image, std::vector&lt;",
    "local": "图像，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints,",
    "local": "&燃气轮机&amp；关键点，"
  },
  {
    "origin": "mask=",
    "local": "遮罩="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Detects keypoints in an image (first variant) or image set (second variant).",
    "local": "检测图像（第一种变体）或图像集（第二种变体）中的关键点。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "images, std::vector&lt; std::vector&lt;",
    "local": "图像，标准：：向量&lt；标准：：向量&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;keypoints,",
    "local": "&gt；&quot；&gt；gt；&amp；关键点，"
  },
  {
    "origin": "masks=",
    "local": "面具="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image,",
    "local": "图像，"
  },
  {
    "origin": "mask, std::vector&lt;",
    "local": "掩码，标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints,",
    "local": "&燃气轮机&amp；关键点，"
  },
  {
    "origin": "descriptors, bool useProvidedKeypoints=false)",
    "local": "描述符，bool useProvidedKeypoints=false）"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Return true if detector object is empty.",
    "local": "如果探测器对象为空，则返回true。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fileName)",
    "local": "&amp；文件名）"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;)",
    "local": "&amp；）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fileName) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;) const",
    "local": "&amp；）常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": "公共成员函数继承自"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt;",
    "local": "&燃气轮机；"
  },
  {
    "origin": "(int _delta=5, int _min_area=60, int _max_area=14400, double _max_variation=0.25, double _min_diversity=.2, int _max_evolution=200, double _area_threshold=1.01, double _min_margin=0.003, int _edge_blur_size=5)",
    "local": "（intδ=5，int min面积=60，int max面积=14400，double max变异=0.25，double min多样性=0.2，int max进化=200，double面积阈值=1.01，double min边际=0.003，int边缘模糊大小=5）"
  },
  {
    "origin": "Full constructor for MSER detector.",
    "local": "MSER探测器的完整构造。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": "继承自的静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Additional Inherited Members",
    "local": "其他继承成员"
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": "继承自的受保护成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Maximally stable extremal region extractor.",
    "local": "极大稳定极值区域抽取器。"
  },
  {
    "origin": "The class encapsulates all the parameters of the MSER extraction algorithm (see",
    "local": "该类封装了MSER提取算法的所有参数（请参见"
  },
  {
    "origin": "wiki article",
    "local": "wiki文章"
  },
  {
    "origin": ").",
    "local": ")."
  },
  {
    "origin": "there are two different implementation of MSER: one for grey image, one for color image",
    "local": "MSER有两种不同的实现方式：一种用于灰度图像，一种用于彩色图像"
  },
  {
    "origin": "the grey image algorithm is taken from:",
    "local": "灰色图像算法取自："
  },
  {
    "origin": "; the paper claims to be faster than union-find method; it actually get 1.5~2m/s on my centrino L7200 1.2GHz laptop.",
    "local": "; 论文声称比联合查找法更快；在我的迅驰L7200 1.2GHz笔记本电脑上，它的速度实际上是1.5~2m/s。"
  },
  {
    "origin": "the color image algorithm is taken from:",
    "local": "彩色图像算法取自："
  },
  {
    "origin": "; it should be much slower than grey image method ( 3~4 times )",
    "local": "; 它应该比灰度图像法慢得多（3~4倍）"
  },
  {
    "origin": "(Python) A complete example showing the use of the MSER detector can be found at samples/python/mser.py",
    "local": "（Python）samples/Python/MSER.py上有一个完整的示例，显示了MSER检测器的使用"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "create()",
    "local": "创建（）"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; cv::MSER::create",
    "local": "&燃气轮机；cv:：MSER:：创建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "_delta",
    "local": "_三角洲"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "_min_area",
    "local": "_最小面积"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "_max_area",
    "local": "_最大面积"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "_max_variation",
    "local": "_最大变化量"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "_min_diversity",
    "local": "_最小多样性"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "_max_evolution",
    "local": "_最大进化"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "_area_threshold",
    "local": "_区域\\u阈值"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "_min_margin",
    "local": "_最小保证金"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "_edge_blur_size",
    "local": "_边缘\\u模糊\\u大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER_create(",
    "local": "cv.MSER\\创建("
  },
  {
    "origin": "[, _delta[, _min_area[, _max_area[, _max_variation[, _min_diversity[, _max_evolution[, _area_threshold[, _min_margin[, _edge_blur_size]]]]]]]]]",
    "local": "[，\\u delta[，\\u min\\u area[，\\u max\\u area[，\\u max\\u variation[，\\u min\\u diversity[，\\u max\\u evolution[，\\u area\\u threshold[，\\u min\\u margin[，\\u edge\\u blur size]]]]]]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Full constructor for MSER detector.",
    "local": "MSER探测器的完整构造。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "_delta",
    "local": "_三角洲"
  },
  {
    "origin": "it compares \\((size_{i}-size_{i-delta})/size_{i-delta}\\)",
    "local": "它比较\\（（size{i}-size{i-delta}）/size{i-delta}\\）"
  },
  {
    "origin": "_min_area",
    "local": "_最小面积"
  },
  {
    "origin": "prune the area which smaller than minArea",
    "local": "修剪比尖塔小的地方"
  },
  {
    "origin": "_max_area",
    "local": "_最大面积"
  },
  {
    "origin": "prune the area which bigger than maxArea",
    "local": "修剪比最大面积大的面积"
  },
  {
    "origin": "_max_variation",
    "local": "_最大变化量"
  },
  {
    "origin": "prune the area have similar size to its children",
    "local": "修剪面积和它的孩子差不多"
  },
  {
    "origin": "_min_diversity",
    "local": "_最小多样性"
  },
  {
    "origin": "for color image, trace back to cut off mser with diversity less than min_diversity",
    "local": "对于彩色图像，回溯到分集小于最小分集的最小均方误差"
  },
  {
    "origin": "_max_evolution",
    "local": "_最大进化"
  },
  {
    "origin": "for color image, the evolution steps",
    "local": "对于彩色图像，进化步骤如下"
  },
  {
    "origin": "_area_threshold",
    "local": "_区域\\u阈值"
  },
  {
    "origin": "for color image, the area threshold to cause re-initialize",
    "local": "对于彩色图像，导致重新初始化的区域阈值"
  },
  {
    "origin": "_min_margin",
    "local": "_最小保证金"
  },
  {
    "origin": "for color image, ignore too small margin",
    "local": "对于彩色图像，忽略太小的边距"
  },
  {
    "origin": "_edge_blur_size",
    "local": "_边缘\\u模糊\\u大小"
  },
  {
    "origin": "for color image, the aperture size for edge blur",
    "local": "对于彩色图像，边缘模糊的光圈大小"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "detectRegions()",
    "local": "检测区域（）"
  },
  {
    "origin": "virtual void cv::MSER::detectRegions",
    "local": "虚拟空cv:：MSER:：detectRegions"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt; std::vector&lt;",
    "local": "标准：：向量&lt；标准：：向量&lt；"
  },
  {
    "origin": "&gt; &gt; &amp;",
    "local": "&燃气轮机&燃气轮机&amp；"
  },
  {
    "origin": "msers",
    "local": "msers公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "std::vector&lt;",
    "local": "标准：：向量&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "bboxes",
    "local": "B盒子"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "msers, bboxes",
    "local": "MSER、BBOX"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.detectRegions(",
    "local": "cv.MSER.detectRegions公司("
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Detect MSER regions.",
    "local": "检测MSER区域。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": "input image (8UC1, 8UC3 or 8UC4, must be greater or equal than 3x3)",
    "local": "输入图像（8UC1、8UC3或8UC4，必须大于或等于3x3）"
  },
  {
    "origin": "msers",
    "local": "msers公司"
  },
  {
    "origin": "resulting list of point sets",
    "local": "点集的结果列表"
  },
  {
    "origin": "bboxes",
    "local": "B盒子"
  },
  {
    "origin": "resulting bounding boxes",
    "local": "结果边界框"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDefaultName()",
    "local": "获取默认名称"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::MSER::getDefaultName",
    "local": "cv：：MSER：：getDefaultName"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.getDefaultName(",
    "local": "cv.MSER.getDefaultName("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns the algorithm string identifier. This string is used as top level xml/yml node tag when the object is saved to a file or string.",
    "local": "返回算法字符串标识符。当对象保存到文件或字符串时，此字符串用作顶级xml/yml节点标记。"
  },
  {
    "origin": "Reimplemented from",
    "local": "从重新实现"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDelta()",
    "local": "获取增量（）"
  },
  {
    "origin": "virtual int cv::MSER::getDelta",
    "local": "虚拟int cv:：MSER:：getDelta"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.getDelta(",
    "local": "cv.MSER.getDelta公司("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMaxArea()",
    "local": "getMaxArea（）"
  },
  {
    "origin": "virtual int cv::MSER::getMaxArea",
    "local": "虚拟int cv:：MSER:：getMaxArea"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.getMaxArea(",
    "local": "cv.MSER.getMaxArea("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getMinArea()",
    "local": "getMinArea（）"
  },
  {
    "origin": "virtual int cv::MSER::getMinArea",
    "local": "虚拟int cv:：MSER:：getMinArea"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.getMinArea(",
    "local": "getMinArea女士("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getPass2Only()",
    "local": "getPass2Only（）"
  },
  {
    "origin": "virtual bool cv::MSER::getPass2Only",
    "local": "虚拟bool cv:：MSER:：getPass2Only"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.getPass2Only(",
    "local": "cv.MSER.GetPass2仅限("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setDelta()",
    "local": "设置增量（）"
  },
  {
    "origin": "virtual void cv::MSER::setDelta",
    "local": "虚拟void cv:：MSER:：setDelta"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "delta",
    "local": "三角洲"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.setDelta(",
    "local": "cv.MSER.setDelta设置("
  },
  {
    "origin": "delta",
    "local": "三角洲"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMaxArea()",
    "local": "setMaxArea（）"
  },
  {
    "origin": "virtual void cv::MSER::setMaxArea",
    "local": "虚空cv:：MSER:：setMaxArea"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "maxArea",
    "local": "最大面积"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.setMaxArea(",
    "local": "cv.MSER.setMaxArea设置最大区域("
  },
  {
    "origin": "maxArea",
    "local": "最大面积"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setMinArea()",
    "local": "设置区域（）"
  },
  {
    "origin": "virtual void cv::MSER::setMinArea",
    "local": "虚拟void cv:：MSER:：setMinArea"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "minArea",
    "local": "最小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.setMinArea(",
    "local": "setMinArea先生("
  },
  {
    "origin": "minArea",
    "local": "最小"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "setPass2Only()",
    "local": "setPass2Only（）"
  },
  {
    "origin": "virtual void cv::MSER::setPass2Only",
    "local": "虚拟void cv:：MSER:：setPass2Only"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "bool",
    "local": "布尔"
  },
  {
    "origin": "f",
    "local": "f"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.MSER.setPass2Only(",
    "local": "cv.MSER.SETPASS2仅限("
  },
  {
    "origin": "f",
    "local": "f"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:43为OpenCV生成"
  }
]