[
  {
    "origin": "OpenCV: cv::hdf::HDF5 Class Reference",
    "local": "OpenCV:cv:：hdf:：HDF5类引用"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::hdf::HDF5 Class Reference",
    "local": "cv:：hdf:：HDF5类参考"
  },
  {
    "origin": "abstract",
    "local": "摘要"
  },
  {
    "origin": "&raquo;",
    "local": "&引用；"
  },
  {
    "origin": "Hierarchical Data Format version 5 interface.",
    "local": "分层数据格式版本5接口。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Public Types",
    "local": "公共类型"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "&#160;&#160;",
    "local": "&#160;&#160;"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "(int *value, const",
    "local": "（int*值，常数）"
  },
  {
    "origin": "(double *value, const",
    "local": "（双*值，常数）"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "*value, const",
    "local": "*价值，const"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "value, const",
    "local": "价值，const"
  },
  {
    "origin": "(const int value, const",
    "local": "（const int value，const）"
  },
  {
    "origin": "(const double value, const",
    "local": "（const double value，const）"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;value, const",
    "local": "&amp；值，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "value, const",
    "local": "价值，const"
  },
  {
    "origin": "Close and release hdf5 object.",
    "local": "关闭并释放hdf5对象。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const int rows, const int cols, const int type, const",
    "local": "（const int行，const int列，const int类型，const"
  },
  {
    "origin": "(const int rows, const int cols, const int type, const",
    "local": "（const int行，const int列，const int类型，const"
  },
  {
    "origin": "(const int rows, const int cols, const int type, const",
    "local": "（const int行，const int列，const int类型，const"
  },
  {
    "origin": "(const int rows, const int cols, const int type, const",
    "local": "（const int行，const int列，const int类型，const"
  },
  {
    "origin": "Create and allocate storage for two dimensional single or multi channel dataset.",
    "local": "为二维单通道或多通道数据集创建和分配存储。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const int n_dims, const int *sizes, const int type, const",
    "local": "（const int n\\u dims，const int*大小，const int类型，const"
  },
  {
    "origin": "(const int n_dims, const int *sizes, const int type, const",
    "local": "（const int n\\u dims，const int*大小，const int类型，const"
  },
  {
    "origin": "(const vector&lt; int &gt; &amp;sizes, const int type, const",
    "local": "（常量向量&lt；内部&gt；&gt；amp；大小，常量int type，常量"
  },
  {
    "origin": "&amp;dslabel, const int compresslevel=",
    "local": "&amp；dslabel，const int compresslevel="
  },
  {
    "origin": "(const int n_dims, const int *sizes, const int type, const",
    "local": "（const int n\\u dims，const int*大小，const int类型，const"
  },
  {
    "origin": "Create and allocate storage for n-dimensional dataset, single or multichannel type.",
    "local": "为n维数据集（单通道或多通道类型）创建和分配存储。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;dslabel, int dims_flag=",
    "local": "&amp；dslabel，int dims标志="
  },
  {
    "origin": "Fetch dataset sizes.",
    "local": "获取数据集大小。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "Fetch dataset type.",
    "local": "获取数据集类型。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "Insert or overwrite a",
    "local": "插入或覆盖"
  },
  {
    "origin": "object into specified dataset and auto expand dataset size if",
    "local": "对象转换为指定的数据集，并自动扩展数据集大小（如果"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "property allows.",
    "local": "属性允许。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "Read specific dataset from hdf5 file into",
    "local": "将特定数据集从hdf5文件读入"
  },
  {
    "origin": "object.",
    "local": "对象。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array, const",
    "local": "数组，常量"
  },
  {
    "origin": "Write or overwrite a",
    "local": "写入或覆盖"
  },
  {
    "origin": "object into specified dataset of hdf5 file.",
    "local": "对象转换为hdf5文件的指定数据集。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "Create a group.",
    "local": "创建一个组。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "Check if label exists or not.",
    "local": "检查标签是否存在。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const int size, const",
    "local": "（const int size，常量）"
  },
  {
    "origin": "&amp;kplabel, const int compresslevel=",
    "local": "&amp；kplabel，const int压缩级别="
  },
  {
    "origin": ", const int chunks=",
    "local": "，常量int块="
  },
  {
    "origin": "Create and allocate special storage for",
    "local": "为创建和分配特殊存储"
  },
  {
    "origin": "dataset.",
    "local": "数据集。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;kplabel, int dims_flag=",
    "local": "&amp；kplabel，int dims标志="
  },
  {
    "origin": "Fetch keypoint dataset size.",
    "local": "获取关键点数据集大小。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const vector&lt;",
    "local": "（常量向量&lt；"
  },
  {
    "origin": "&gt; keypoints, const",
    "local": "&燃气轮机；关键点，常量"
  },
  {
    "origin": "&amp;kplabel, const int offset=",
    "local": "&amp；kplabel，常量int偏移量="
  },
  {
    "origin": ", const int counts=",
    "local": "，常量int计数="
  },
  {
    "origin": "Insert or overwrite list of",
    "local": "插入或覆盖列表"
  },
  {
    "origin": "into specified dataset and autoexpand dataset size if",
    "local": "输入指定的数据集并自动扩展数据集大小（如果"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "property allows.",
    "local": "属性允许。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(vector&lt;",
    "local": "（向量&lt；"
  },
  {
    "origin": "&gt; &amp;keypoints, const",
    "local": "&燃气轮机&amp；关键点，常量"
  },
  {
    "origin": "&amp;kplabel, const int offset=",
    "local": "&amp；kplabel，常量int偏移量="
  },
  {
    "origin": ", const int counts=",
    "local": "，常量int计数="
  },
  {
    "origin": "Read specific keypoint dataset from hdf5 file into vector&lt;KeyPoint&gt; object.",
    "local": "将特定的关键点数据集从hdf5文件读入vector&lt；关键点&gt；对象。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "(const vector&lt;",
    "local": "（常量向量&lt；"
  },
  {
    "origin": "&gt; keypoints, const",
    "local": "&燃气轮机；关键点，常量"
  },
  {
    "origin": "&amp;kplabel, const int offset=",
    "local": "&amp；kplabel，常量int偏移量="
  },
  {
    "origin": ", const int counts=",
    "local": "，常量int计数="
  },
  {
    "origin": "Write or overwrite list of",
    "local": "写入或覆盖列表"
  },
  {
    "origin": "into specified dataset of hdf5 file.",
    "local": "hdf5文件的指定数据集。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Hierarchical Data Format version 5 interface.",
    "local": "分层数据格式版本5接口。"
  },
  {
    "origin": "Notice that this module is compiled only when hdf5 is correctly installed.",
    "local": "请注意，只有在正确安装hdf5时才编译此模块。"
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": "成员枚举文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "H5_UNLIMITED&#160;",
    "local": "H5#U无限&#160；"
  },
  {
    "origin": "The dimension size is unlimited,.",
    "local": "维度大小不受限制，。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "H5_NONE&#160;",
    "local": "H5#无&#160；"
  },
  {
    "origin": "No compression,.",
    "local": "无压缩，。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "H5_GETDIMS&#160;",
    "local": "H5ŠU尺寸&Š160；"
  },
  {
    "origin": "Get the dimension information of a dataset.",
    "local": "获取数据集的维度信息。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "H5_GETMAXDIMS&#160;",
    "local": "H5\\u最大尺寸"
  },
  {
    "origin": "Get the maximum dimension information of a dataset.",
    "local": "获取数据集的最大维度信息。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "H5_GETCHUNKDIMS&#160;",
    "local": "H5-u尺寸&35；160；"
  },
  {
    "origin": "Get the chunk sizes of a dataset.",
    "local": "获取数据集的块大小。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "~HDF5()",
    "local": "~HDF5（）"
  },
  {
    "origin": "virtual cv::hdf::HDF5::~HDF5",
    "local": "虚拟简历：：hdf：：HDF5：：~HDF5"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atdelete()",
    "local": "atdelete（）"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::atdelete",
    "local": "虚拟void cv:：hdf:：HDF5:：atdelete"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Delete an attribute from the root group.",
    "local": "从根组中删除属性。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": "the attribute to be deleted.",
    "local": "要删除的属性。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "is called if the given attribute does not exist. Use",
    "local": "如果给定的属性不存在，则调用。使用"
  },
  {
    "origin": "to check whether it exists or not beforehand.",
    "local": "事先检查它是否存在。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atexists()",
    "local": "atexists（）"
  },
  {
    "origin": "virtual bool cv::hdf::HDF5::atexists",
    "local": "虚拟布尔cv:：hdf:：HDF5:：atexists"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Check whether a given attribute exits or not in the root group.",
    "local": "检查给定属性是否存在于根组中。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": "the attribute name to be checked.",
    "local": "要检查的属性名称。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "true if the attribute exists, false otherwise.",
    "local": "如果属性存在，则为true，否则为false。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atread()",
    "local": "读取（）"
  },
  {
    "origin": "[1/4]",
    "local": "[1/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::atread",
    "local": "虚空cv:：hdf:：HDF5:：A读取"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Read an attribute from the root group.",
    "local": "从根组读取属性。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": "address where the attribute is read into",
    "local": "读取属性的地址"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": "attribute name",
    "local": "属性名称"
  },
  {
    "origin": "The following example demonstrates how to read an attribute of type",
    "local": "下面的示例演示如何读取类型为的属性"
  },
  {
    "origin": ":",
    "local": ":"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "The attribute MUST exist, otherwise",
    "local": "属性必须存在，否则"
  },
  {
    "origin": "is called. Use",
    "local": "被称为。使用"
  },
  {
    "origin": "to check if it exists beforehand.",
    "local": "事先检查是否存在。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atread()",
    "local": "读取（）"
  },
  {
    "origin": "[2/4]",
    "local": "[2/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::atread",
    "local": "虚空cv:：hdf:：HDF5:：A读取"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atread()",
    "local": "读取（）"
  },
  {
    "origin": "[3/4]",
    "local": "[3/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::atread",
    "local": "虚空cv:：hdf:：HDF5:：A读取"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atread()",
    "local": "读取（）"
  },
  {
    "origin": "[4/4]",
    "local": "[4/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::atread",
    "local": "虚空cv:：hdf:：HDF5:：A读取"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Read an attribute from the root group.",
    "local": "从根组读取属性。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": "attribute value. Currently, only n-d continuous multi-channel arrays are supported.",
    "local": "属性值。目前，仅支持n-d连续多通道阵列。"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": "attribute name.",
    "local": "属性名称。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "The attribute MUST exist, otherwise",
    "local": "属性必须存在，否则"
  },
  {
    "origin": "is called. Use",
    "local": "被称为。使用"
  },
  {
    "origin": "to check if it exists beforehand.",
    "local": "事先检查是否存在。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atwrite()",
    "local": "atwrite（）"
  },
  {
    "origin": "[1/4]",
    "local": "[1/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::atwrite",
    "local": "虚空cv:：hdf:：HDF5:：atwrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Write an attribute inside the root group.",
    "local": "在根组中写入属性。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": "attribute value.",
    "local": "属性值。"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": "attribute name.",
    "local": "属性名称。"
  },
  {
    "origin": "The following example demonstrates how to write an attribute of type",
    "local": "下面的示例演示如何编写类型为的属性"
  },
  {
    "origin": ":",
    "local": ":"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "is called if the given attribute already exists. Use",
    "local": "如果给定属性已存在，则调用。使用"
  },
  {
    "origin": "to check whether it exists or not beforehand. And use",
    "local": "事先检查它是否存在。使用"
  },
  {
    "origin": "to delete it if it already exists.",
    "local": "如果它已经存在，则删除它。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atwrite()",
    "local": "atwrite（）"
  },
  {
    "origin": "[2/4]",
    "local": "[2/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::atwrite",
    "local": "虚空cv:：hdf:：HDF5:：atwrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atwrite()",
    "local": "atwrite（）"
  },
  {
    "origin": "[3/4]",
    "local": "[3/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::atwrite",
    "local": "虚空cv:：hdf:：HDF5:：atwrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "atwrite()",
    "local": "atwrite（）"
  },
  {
    "origin": "[4/4]",
    "local": "[4/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::atwrite",
    "local": "虚空cv:：hdf:：HDF5:：atwrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Write an attribute into the root group.",
    "local": "将属性写入根组。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "value",
    "local": "价值"
  },
  {
    "origin": "attribute value. Currently, only n-d continuous multi-channel arrays are supported.",
    "local": "属性值。目前，仅支持n-d连续多通道阵列。"
  },
  {
    "origin": "atlabel",
    "local": "阿特拉贝尔"
  },
  {
    "origin": "attribute name.",
    "local": "属性名称。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "is called if the given attribute already exists. Use",
    "local": "如果给定属性已存在，则调用。使用"
  },
  {
    "origin": "to check whether it exists or not beforehand. And use",
    "local": "事先检查它是否存在。使用"
  },
  {
    "origin": "to delete it if it already exists.",
    "local": "如果它已经存在，则删除它。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "close()",
    "local": "关闭（）"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::close",
    "local": "虚拟void cv:：hdf:：HDF5:：close"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Close and release hdf5 object.",
    "local": "关闭并释放hdf5对象。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dscreate()",
    "local": "dscreate（）"
  },
  {
    "origin": "[1/8]",
    "local": "[1/8]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dscreate",
    "local": "虚拟void cv:：hdf:：HDF5:：dscreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "rows",
    "local": "排"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "cols",
    "local": "胶水"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dscreate()",
    "local": "dscreate（）"
  },
  {
    "origin": "[2/8]",
    "local": "[2/8]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dscreate",
    "local": "虚拟void cv:：hdf:：HDF5:：dscreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "rows",
    "local": "排"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "cols",
    "local": "胶水"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dscreate()",
    "local": "dscreate（）"
  },
  {
    "origin": "[3/8]",
    "local": "[3/8]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dscreate",
    "local": "虚拟void cv:：hdf:：HDF5:：dscreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "rows",
    "local": "排"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "cols",
    "local": "胶水"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_chunks",
    "local": "变暗块"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dscreate()",
    "local": "dscreate（）"
  },
  {
    "origin": "[4/8]",
    "local": "[4/8]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dscreate",
    "local": "虚拟void cv:：hdf:：HDF5:：dscreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "rows",
    "local": "排"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "cols",
    "local": "胶水"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_chunks",
    "local": "变暗块"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Create and allocate storage for two dimensional single or multi channel dataset.",
    "local": "为二维单通道或多通道数据集创建和分配存储。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "rows",
    "local": "排"
  },
  {
    "origin": "declare amount of rows",
    "local": "声明行数"
  },
  {
    "origin": "cols",
    "local": "胶水"
  },
  {
    "origin": "declare amount of columns",
    "local": "声明列数"
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": "type to be used, e.g, CV_8UC3, CV_32FC1 and etc.",
    "local": "要使用的类型，例如，CV\\ U 8UC3、CV\\ U 32FC1等。"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": "specify the hdf5 dataset label. Existing dataset label will cause an error.",
    "local": "指定hdf5数据集标签。现有数据集标签将导致错误。"
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": "specify the compression level 0-9 to be used, H5_NONE is the default value and means no compression. The value 0 also means no compression. A value 9 indicating the best compression ration. Note that a higher compression level indicates a higher computational cost. It relies on GNU gzip for compression.",
    "local": "指定要使用的压缩级别0-9，H5_NONE是默认值，表示不压缩。值0也表示没有压缩。表示最佳压缩比的值9。请注意，较高的压缩级别表示较高的计算成本。它依赖于gnugzip进行压缩。"
  },
  {
    "origin": "dims_chunks",
    "local": "变暗块"
  },
  {
    "origin": "each array member specifies the chunking size to be used for block I/O, by default NULL means none at all.",
    "local": "每个数组成员指定要用于块I/O的分块大小，默认情况下，NULL表示完全没有。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "If the dataset already exists, an exception will be thrown (",
    "local": "如果数据集已存在，将引发异常("
  },
  {
    "origin": "is called).",
    "local": "称为）。"
  },
  {
    "origin": "Existence of the dataset can be checked using",
    "local": "可以使用"
  },
  {
    "origin": ", see in this example:",
    "local": "，请参见本例："
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Activating compression requires internal chunking. Chunking can significantly improve access speed both at read and write time, especially for windowed access logic that shifts offset inside dataset. If no custom chunking is specified, the default one will be invoked by the size of the",
    "local": "激活压缩需要内部分块。分块可以显著提高读写时的访问速度，特别是对于在数据集中移动偏移量的窗口访问逻辑。如果未指定自定义分块，则将根据"
  },
  {
    "origin": "whole",
    "local": "整体"
  },
  {
    "origin": "dataset as a single big chunk of data.",
    "local": "数据集作为单个大数据块。"
  },
  {
    "origin": "See example of level 9 compression using internal default chunking:",
    "local": "请参阅使用内部默认分块的9级压缩示例："
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "A value of H5_UNLIMITED for",
    "local": "H5_值不限"
  },
  {
    "origin": "rows",
    "local": "排"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": "cols",
    "local": "胶水"
  },
  {
    "origin": "or both means",
    "local": "或者两者都是"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "data on the specified dimension, thus, it is possible to expand anytime such a dataset on row, col or on both directions. Presence of H5_UNLIMITED on any dimension",
    "local": "因此，可以随时在行、列或两个方向上展开此类数据集。H5\\ U的存在在任何维度上都是无限制的"
  },
  {
    "origin": "requires",
    "local": "要求"
  },
  {
    "origin": "to define custom chunking. No default chunking will be defined in the unlimited scenario since default size on that dimension will be zero, and will grow once dataset is written. Writing into a dataset that has H5_UNLIMITED on some of its dimensions requires",
    "local": "定义自定义分块。在无限场景中不会定义默认分块，因为该维度上的默认大小将为零，并且在写入数据集后将增长。写入一个在某些维度上具有H5è无限的数据集需要"
  },
  {
    "origin": "that allows growth on unlimited dimensions, instead of",
    "local": "它允许无限规模的增长，而不是"
  },
  {
    "origin": "that allows to write only in predefined data space.",
    "local": "只允许在预定义的数据空间中写入。"
  },
  {
    "origin": "Example below shows no compression but unlimited dimension on cols using 100x100 internal chunking:",
    "local": "下面的示例显示使用100x100内部分块的COL上没有压缩，但维度不受限制："
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "It is",
    "local": "它是"
  },
  {
    "origin": "not",
    "local": "不"
  },
  {
    "origin": "thread safe, it must be called only once at dataset creation, otherwise an exception will occur. Multiple datasets inside a single hdf5 file are allowed.",
    "local": "线程安全，在创建数据集时只能调用一次，否则将发生异常。允许在一个hdf5文件中包含多个数据集。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dscreate()",
    "local": "dscreate（）"
  },
  {
    "origin": "[5/8]",
    "local": "[5/8]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dscreate",
    "local": "虚拟void cv:：hdf:：HDF5:：dscreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "n_dims",
    "local": "n u变暗"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "sizes",
    "local": "尺寸"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dscreate()",
    "local": "dscreate（）"
  },
  {
    "origin": "[6/8]",
    "local": "[6/8]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dscreate",
    "local": "虚拟void cv:：hdf:：HDF5:：dscreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "n_dims",
    "local": "n u变暗"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "sizes",
    "local": "尺寸"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dscreate()",
    "local": "dscreate（）"
  },
  {
    "origin": "[7/8]",
    "local": "[7/8]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dscreate",
    "local": "虚拟void cv:：hdf:：HDF5:：dscreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "sizes",
    "local": "尺寸"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_chunks",
    "local": "变暗块"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dscreate()",
    "local": "dscreate（）"
  },
  {
    "origin": "[8/8]",
    "local": "[8/8]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dscreate",
    "local": "虚拟void cv:：hdf:：HDF5:：dscreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "n_dims",
    "local": "n u变暗"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "sizes",
    "local": "尺寸"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_chunks",
    "local": "变暗块"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Create and allocate storage for n-dimensional dataset, single or multichannel type.",
    "local": "为n维数据集（单通道或多通道类型）创建和分配存储。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "n_dims",
    "local": "n u变暗"
  },
  {
    "origin": "declare number of dimensions",
    "local": "声明维度数"
  },
  {
    "origin": "sizes",
    "local": "尺寸"
  },
  {
    "origin": "array containing sizes for each dimensions",
    "local": "包含每个维度大小的数组"
  },
  {
    "origin": "type",
    "local": "类型"
  },
  {
    "origin": "type to be used, e.g., CV_8UC3, CV_32FC1, etc.",
    "local": "要使用的类型，例如CV\\ U 8UC3、CV\\ U 32FC1等。"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": "specify the hdf5 dataset label. Existing dataset label will cause an error.",
    "local": "指定hdf5数据集标签。现有数据集标签将导致错误。"
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": "specify the compression level 0-9 to be used, H5_NONE is the default value and means no compression. The value 0 also means no compression. A value 9 indicating the best compression ration. Note that a higher compression level indicates a higher computational cost. It relies on GNU gzip for compression.",
    "local": "指定要使用的压缩级别0-9，H5_NONE是默认值，表示不压缩。值0也表示没有压缩。表示最佳压缩比的值9。请注意，较高的压缩级别表示较高的计算成本。它依赖于gnugzip进行压缩。"
  },
  {
    "origin": "dims_chunks",
    "local": "变暗块"
  },
  {
    "origin": "each array member specifies chunking sizes to be used for block I/O, by default NULL means none at all.",
    "local": "每个数组成员指定要用于块I/O的分块大小，默认情况下，NULL表示完全没有。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "If the dataset already exists, an exception will be thrown. Existence of the dataset can be checked using",
    "local": "如果数据集已存在，将引发异常。可以使用"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "See example below that creates a 6 dimensional storage space:",
    "local": "请参见下面创建6维存储空间的示例："
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Activating compression requires internal chunking. Chunking can significantly improve access speed both at read and write time, especially for windowed access logic that shifts offset inside dataset. If no custom chunking is specified, the default one will be invoked by the size of",
    "local": "激活压缩需要内部分块。分块可以显著提高读写时的访问速度，特别是对于在数据集中移动偏移量的窗口访问逻辑。如果未指定自定义分块，则将根据"
  },
  {
    "origin": "whole",
    "local": "整体"
  },
  {
    "origin": "dataset as single big chunk of data.",
    "local": "数据集作为单个大数据块。"
  },
  {
    "origin": "See example of level 0 compression (shallow) using chunking against the first dimension, thus storage will consists of 100 chunks of data:",
    "local": "请参阅针对第一维度使用分块的0级压缩（浅层）示例，因此存储将由100个数据块组成："
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "A value of H5_UNLIMITED inside the",
    "local": "H5_的值在"
  },
  {
    "origin": "sizes",
    "local": "尺寸"
  },
  {
    "origin": "array means",
    "local": "数组平均数"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "data on that dimension, thus it is possible to expand anytime such dataset on those unlimited directions. Presence of H5_UNLIMITED on any dimension requires** to define custom chunking. No default chunking will be defined in unlimited scenario since the default size on that dimension will be zero, and will grow once dataset is written. Writing into dataset that has H5_UNLIMITED on some of its dimension requires",
    "local": "数据的维度，因此有可能在任何时候扩展这些数据集在这些无限的方向。H5\\ U在任何维度上都不受限制，需要**定义自定义分块。在无限场景中不会定义默认分块，因为该维度上的默认大小将为零，并且在写入数据集后将增长。写入在某些维度上具有H5_无限的数据集需要"
  },
  {
    "origin": "instead of",
    "local": "而不是"
  },
  {
    "origin": "that allows growth on unlimited dimension instead of",
    "local": "它允许无限维的增长而不是"
  },
  {
    "origin": "that allows to write only in predefined data space.",
    "local": "只允许在预定义的数据空间中写入。"
  },
  {
    "origin": "Example below shows a 3 dimensional dataset using no compression with all unlimited sizes and one unit chunking:",
    "local": "下面的示例显示了一个三维数据集，该数据集不使用压缩，所有大小都不受限制，并且使用一个单元分块："
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsgetsize()",
    "local": "dsgetsize（）"
  },
  {
    "origin": "virtual vector&lt;int&gt; cv::hdf::HDF5::dsgetsize",
    "local": "虚拟向量&lt；内部&gt；cv:：hdf:：HDF5:：dsgetsize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_flag",
    "local": "dims标志"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Fetch dataset sizes.",
    "local": "获取数据集大小。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": "specify the hdf5 dataset label to be measured.",
    "local": "指定要测量的hdf5数据集标签。"
  },
  {
    "origin": "dims_flag",
    "local": "dims标志"
  },
  {
    "origin": "will fetch dataset dimensions on H5_GETDIMS, dataset maximum dimensions on H5_GETMAXDIMS, and chunk sizes on H5_GETCHUNKDIMS.",
    "local": "将在H5\\u GETDIMS上获取数据集维度，在H5\\u GETMAXDIMS上获取数据集最大维度，在H5\\u GETCHUNKDIMS上获取数据块大小。"
  },
  {
    "origin": "Returns vector object containing sizes of dataset on each dimensions.",
    "local": "返回包含每个维度上数据集大小的向量对象。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Resulting vector size will match the amount of dataset dimensions. By default H5_GETDIMS will return actual dataset dimensions. Using H5_GETMAXDIM flag will get maximum allowed dimension which normally match actual dataset dimension but can hold H5_UNLIMITED value if dataset was prepared in",
    "local": "结果向量大小将匹配数据集维度的数量。默认情况下，H5_GETDIMS将返回实际的数据集维度。使用H5\\u GETMAXDIM标志将获得允许的最大维度，该维度通常与实际数据集维度匹配，但如果数据集是在"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "mode on some of its dimension. It can be useful to check existing dataset dimensions before overwrite it as whole or subset. Trying to write with oversized source data into dataset target will thrown exception. The H5_GETCHUNKDIMS will return the dimension of chunk if dataset was created with chunking options otherwise returned vector size will be zero.",
    "local": "在某些维度上的模式。在将现有数据集维度作为一个整体或子集覆盖之前，检查它可能很有用。试图用过大的源数据写入数据集目标将引发异常。如果数据集是使用分块选项创建的，H5_GETCHUNKDIMS将返回分块的维度，否则返回的向量大小将为零。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsgettype()",
    "local": "dsgettype（）"
  },
  {
    "origin": "virtual int cv::hdf::HDF5::dsgettype",
    "local": "虚拟int cv:：hdf:：HDF5:：dsgettype"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Fetch dataset type.",
    "local": "获取数据集类型。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": "specify the hdf5 dataset label to be checked.",
    "local": "指定要检查的hdf5数据集标签。"
  },
  {
    "origin": "Returns the stored matrix type. This is an identifier compatible with the CvMat type system, like e.g. CV_16SC5 (16-bit signed 5-channel array), and so on.",
    "local": "返回存储的矩阵类型。这是一个与CvMat类型系统兼容的标识符，例如CVë16SC5（16位有符号5通道阵列）等。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Result can be parsed with",
    "local": "结果可以用"
  },
  {
    "origin": "to obtain amount of channels and",
    "local": "获取通道数量和"
  },
  {
    "origin": "to obtain native cvdata type. It is thread safe.",
    "local": "获取本机数据类型。它是线程安全的。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsinsert()",
    "local": "dsinsert（）"
  },
  {
    "origin": "[1/4]",
    "local": "[1/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dsinsert",
    "local": "虚拟void cv:：hdf:：HDF5:：dsinsert"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsinsert()",
    "local": "dsinsert（）"
  },
  {
    "origin": "[2/4]",
    "local": "[2/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dsinsert",
    "local": "虚拟void cv:：hdf:：HDF5:：dsinsert"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsinsert()",
    "local": "dsinsert（）"
  },
  {
    "origin": "[3/4]",
    "local": "[3/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dsinsert",
    "local": "虚拟void cv:：hdf:：HDF5:：dsinsert"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_counts",
    "local": "dims\\U计数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsinsert()",
    "local": "dsinsert（）"
  },
  {
    "origin": "[4/4]",
    "local": "[4/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dsinsert",
    "local": "虚拟void cv:：hdf:：HDF5:：dsinsert"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_counts",
    "local": "dims\\U计数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Insert or overwrite a",
    "local": "插入或覆盖"
  },
  {
    "origin": "object into specified dataset and auto expand dataset size if",
    "local": "对象转换为指定的数据集，并自动扩展数据集大小（如果"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "property allows.",
    "local": "属性允许。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": "specify",
    "local": "指定"
  },
  {
    "origin": "data array to be written.",
    "local": "要写入的数据数组。"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": "specify the target hdf5 dataset label.",
    "local": "指定目标hdf5数据集标签。"
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": "each array member specify the offset location over dataset's each dimensions from where InputArray will be (over)written into dataset.",
    "local": "每个数组成员指定数据集的每个维度上的偏移位置，InputArray将从该位置写入数据集。"
  },
  {
    "origin": "dims_counts",
    "local": "dims\\U计数"
  },
  {
    "origin": "each array member specify the amount of data over dataset's each dimensions from InputArray that will be written into dataset.",
    "local": "每个数组成员指定从InputArray到dataset的每个维度上要写入dataset的数据量。"
  },
  {
    "origin": "Writes",
    "local": "写入"
  },
  {
    "origin": "object into targeted dataset and",
    "local": "对象导入目标数据集并"
  },
  {
    "origin": "autoexpand",
    "local": "自动展开"
  },
  {
    "origin": "dataset dimension if allowed.",
    "local": "数据集维度（如果允许）。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Unlike",
    "local": "不像"
  },
  {
    "origin": ", datasets are",
    "local": "，数据集为"
  },
  {
    "origin": "not",
    "local": "不"
  },
  {
    "origin": "created",
    "local": "创建"
  },
  {
    "origin": "automatically",
    "local": "自动"
  },
  {
    "origin": ". Only",
    "local": ". 仅限"
  },
  {
    "origin": "is supported and it must be",
    "local": "支持并且必须"
  },
  {
    "origin": "continuous",
    "local": "连续的"
  },
  {
    "origin": ". If",
    "local": ". 如果"
  },
  {
    "origin": "happens over outer regions of dataset dimensions and on that dimension of dataset is in",
    "local": "发生在数据集维度的外部区域上，并且发生在数据集的维度上"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "mode then dataset is expanded, otherwise exception is thrown. To create datasets with",
    "local": "然后扩展数据集，否则抛出异常。创建数据集的步骤"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "property on specific or more dimensions see",
    "local": "有关特定或多个维度的属性，请参见"
  },
  {
    "origin": "and the optional H5_UNLIMITED flag at creation time. It is not thread safe over same dataset but multiple datasets can be merged inside a single hdf5 file.",
    "local": "以及在创建时可选的H5\\ u UNLIMITED标志。它在同一个数据集上不是线程安全的，但是多个数据集可以合并到一个hdf5文件中。"
  },
  {
    "origin": "Example below creates",
    "local": "下面的示例创建"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "rows x 100 cols and expands rows 5 times with",
    "local": "行x 100列并用"
  },
  {
    "origin": "using single 100x100 CV_64FC2 over the dataset. Final size will have 5x100 rows and 100 cols, reflecting H matrix five times over row's span. Chunks size is 100x100 just optimized against the H matrix size having compression disabled. If routine is called multiple times dataset will be just overwritten:",
    "local": "在数据集上使用单个100x100 CV64fc2。最终大小将有5x100行和100列，反映了H矩阵的行跨度的五倍。块大小是100x100，只是针对禁用压缩的H矩阵大小进行了优化。如果例程被多次调用，数据集将被覆盖："
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsread()",
    "local": "dsread（）"
  },
  {
    "origin": "[1/4]",
    "local": "[1/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dsread",
    "local": "虚空cv:：hdf:：HDF5:：dsread"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsread()",
    "local": "dsread（）"
  },
  {
    "origin": "[2/4]",
    "local": "[2/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dsread",
    "local": "虚空cv:：hdf:：HDF5:：dsread"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsread()",
    "local": "dsread（）"
  },
  {
    "origin": "[3/4]",
    "local": "[3/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dsread",
    "local": "虚空cv:：hdf:：HDF5:：dsread"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_counts",
    "local": "dims\\U计数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dsread()",
    "local": "dsread（）"
  },
  {
    "origin": "[4/4]",
    "local": "[4/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dsread",
    "local": "虚空cv:：hdf:：HDF5:：dsread"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_counts",
    "local": "dims\\U计数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Read specific dataset from hdf5 file into",
    "local": "将特定数据集从hdf5文件读入"
  },
  {
    "origin": "object.",
    "local": "对象。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": "container where data reads will be returned.",
    "local": "将返回数据读取的容器。"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": "specify the source hdf5 dataset label.",
    "local": "指定源hdf5数据集标签。"
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": "each array member specify the offset location over each dimensions from where dataset starts to read into OutputArray.",
    "local": "每个数组成员指定每个维度上数据集开始读入OutputArray的偏移位置。"
  },
  {
    "origin": "dims_counts",
    "local": "dims\\U计数"
  },
  {
    "origin": "each array member specify the amount over dataset's each dimensions of dataset to read into OutputArray.",
    "local": "每个数组成员指定要读入OutputArray的数据集的每个维度上的数据量。"
  },
  {
    "origin": "Reads out",
    "local": "读出"
  },
  {
    "origin": "object reflecting the stored dataset.",
    "local": "反映存储的数据集的对象。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "If hdf5 file does not exist an exception will be thrown. Use",
    "local": "如果hdf5文件不存在，将引发异常。使用"
  },
  {
    "origin": "to check dataset presence. It is thread safe.",
    "local": "检查数据集是否存在。它是线程安全的。"
  },
  {
    "origin": "Example below reads a dataset:",
    "local": "下面的示例读取数据集："
  },
  {
    "origin": "Example below perform read of 3x5 submatrix from second row and third element.",
    "local": "下面的示例从第二行和第三个元素执行3x5子矩阵的读取。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dswrite()",
    "local": "dswrite（）"
  },
  {
    "origin": "[1/4]",
    "local": "[1/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dswrite",
    "local": "虚空cv:：hdf:：HDF5:：dswrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dswrite()",
    "local": "dswrite（）"
  },
  {
    "origin": "[2/4]",
    "local": "[2/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dswrite",
    "local": "虚空cv:：hdf:：HDF5:：dswrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dswrite()",
    "local": "dswrite（）"
  },
  {
    "origin": "[3/4]",
    "local": "[3/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dswrite",
    "local": "虚空cv:：hdf:：HDF5:：dswrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_counts",
    "local": "dims\\U计数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "dswrite()",
    "local": "dswrite（）"
  },
  {
    "origin": "[4/4]",
    "local": "[4/4]"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::dswrite",
    "local": "虚空cv:：hdf:：HDF5:：dswrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_counts",
    "local": "dims\\U计数"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Write or overwrite a",
    "local": "写入或覆盖"
  },
  {
    "origin": "object into specified dataset of hdf5 file.",
    "local": "对象转换为hdf5文件的指定数据集。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "Array",
    "local": "数组"
  },
  {
    "origin": "specify",
    "local": "指定"
  },
  {
    "origin": "data array to be written.",
    "local": "要写入的数据数组。"
  },
  {
    "origin": "dslabel",
    "local": "dslabel标签"
  },
  {
    "origin": "specify the target hdf5 dataset label.",
    "local": "指定目标hdf5数据集标签。"
  },
  {
    "origin": "dims_offset",
    "local": "dims\\U偏移"
  },
  {
    "origin": "each array member specify the offset location over dataset's each dimensions from where InputArray will be (over)written into dataset.",
    "local": "每个数组成员指定数据集的每个维度上的偏移位置，InputArray将从该位置写入数据集。"
  },
  {
    "origin": "dims_counts",
    "local": "dims\\U计数"
  },
  {
    "origin": "each array member specifies the amount of data over dataset's each dimensions from InputArray that will be written into dataset.",
    "local": "每个数组成员指定从InputArray到dataset的每个维度上要写入dataset的数据量。"
  },
  {
    "origin": "Writes",
    "local": "写入"
  },
  {
    "origin": "object into targeted dataset.",
    "local": "对象到目标数据集中。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "If dataset is not created and does not exist it will be created",
    "local": "如果数据集未创建且不存在，则将创建它"
  },
  {
    "origin": "automatically",
    "local": "自动"
  },
  {
    "origin": ". Only",
    "local": ". 仅限"
  },
  {
    "origin": "is supported and it must be",
    "local": "支持并且必须"
  },
  {
    "origin": "continuous",
    "local": "连续的"
  },
  {
    "origin": ". It is thread safe but it is recommended that writes to happen over separate non-overlapping regions. Multiple datasets can be written inside a single hdf5 file.",
    "local": ". 它是线程安全的，但建议在独立的非重叠区域上进行写操作。在一个hdf5文件中可以写入多个数据集。"
  },
  {
    "origin": "Example below writes a 100x100 CV_64FC2 matrix into a dataset. No dataset pre-creation required. If routine is called multiple times dataset will be just overwritten:",
    "local": "下面的示例将100x100 CV64fc2矩阵写入数据集。不需要数据集预创建。如果例程被多次调用，数据集将被覆盖："
  },
  {
    "origin": "Example below writes a smaller 50x100 matrix into 100x100 compressed space optimised by two 50x100 chunks. Matrix is written twice into first half (0-&gt;50) and second half (50-&gt;100) of data space using offset.",
    "local": "下面的示例将一个较小的50x100矩阵写入由两个50x100块优化的100x100压缩空间。矩阵两次写入前半部分（0-&gt；50）和下半场（50-&gt；100）的数据空间。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "grcreate()",
    "local": "grcreate（）"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::grcreate",
    "local": "虚拟void cv:：hdf:：HDF5:：grcreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "grlabel",
    "local": "GR标签"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Create a group.",
    "local": "创建一个组。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "grlabel",
    "local": "GR标签"
  },
  {
    "origin": "specify the hdf5 group label.",
    "local": "指定hdf5组标签。"
  },
  {
    "origin": "Create a hdf5 group with default properties. The group is closed automatically after creation.",
    "local": "创建具有默认属性的hdf5组。组在创建后自动关闭。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Groups are useful for better organising multiple datasets. It is possible to create subgroups within any group. Existence of a particular group can be checked using",
    "local": "分组有助于更好地组织多个数据集。可以在任何组中创建子组。可以使用"
  },
  {
    "origin": ". In case of subgroups, a label would be e.g: 'Group1/SubGroup1' where SubGroup1 is within the root group Group1. Before creating a subgroup, its parent group MUST be created.",
    "local": ". 如果是子组，则标签应为“Group1/SubGroup1”，其中SubGroup1位于根组Group1内。在创建子组之前，必须先创建其父组。"
  },
  {
    "origin": "In this example, Group1 will have one subgroup called SubGroup1:",
    "local": "在本例中，Group1将有一个称为SubGroup1的子组："
  },
  {
    "origin": "The corresponding result visualized using the HDFView tool is",
    "local": "使用HDFView工具可视化的相应结果如下"
  },
  {
    "origin": "Visualization of groups using the HDFView tool",
    "local": "使用HDFView工具显示组"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "When a dataset is created with",
    "local": "创建数据集时使用"
  },
  {
    "origin": "or",
    "local": "或"
  },
  {
    "origin": ", it can be created within a group by specifying the full path within the label. In our example, it would be: 'Group1/SubGroup1/MyDataSet'. It is not thread safe.",
    "local": "，可以通过在标签中指定完整路径在组中创建。在我们的示例中，它将是：“Group1/SubGroup1/MyDataSet”。它不是线程安全的。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "hlexists()",
    "local": "hlexists（）"
  },
  {
    "origin": "virtual bool cv::hdf::HDF5::hlexists",
    "local": "虚拟bool cv:：hdf:：HDF5:：hlexists"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "label",
    "local": "标签"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Check if label exists or not.",
    "local": "检查标签是否存在。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "label",
    "local": "标签"
  },
  {
    "origin": "specify the hdf5 dataset label.",
    "local": "指定hdf5数据集标签。"
  },
  {
    "origin": "Returns",
    "local": "退换商品"
  },
  {
    "origin": "true",
    "local": "是的"
  },
  {
    "origin": "if dataset exists, and",
    "local": "如果数据集存在，以及"
  },
  {
    "origin": "false",
    "local": "假"
  },
  {
    "origin": "otherwise.",
    "local": "否则。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Checks if dataset, group or other object type (hdf5 link) exists under the label name. It is thread safe.",
    "local": "检查标签名称下是否存在数据集、组或其他对象类型（hdf5链接）。它是线程安全的。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "kpcreate()",
    "local": "kpcreate（）"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::kpcreate",
    "local": "虚拟空cv:：hdf:：HDF5:：kpcreate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "size",
    "local": "大小"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "chunks",
    "local": "大块"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Create and allocate special storage for",
    "local": "为创建和分配特殊存储"
  },
  {
    "origin": "dataset.",
    "local": "数据集。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "size",
    "local": "大小"
  },
  {
    "origin": "declare fixed number of KeyPoints",
    "local": "声明固定数量的关键点"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": "specify the hdf5 dataset label, any existing dataset with the same label will be overwritten.",
    "local": "指定hdf5数据集标签，将覆盖具有相同标签的任何现有数据集。"
  },
  {
    "origin": "compresslevel",
    "local": "水平"
  },
  {
    "origin": "specify the compression level 0-9 to be used, H5_NONE is default and means no compression.",
    "local": "指定要使用的压缩级别0-9，H5_NONE是默认值，表示不压缩。"
  },
  {
    "origin": "chunks",
    "local": "大块"
  },
  {
    "origin": "each array member specifies chunking sizes to be used for block I/O, H5_NONE is default and means no compression.",
    "local": "每个数组成员指定要用于块I/O的分块大小，H5\\u NONE是默认值，表示不压缩。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "If the dataset already exists an exception will be thrown. Existence of the dataset can be checked using",
    "local": "如果数据集已经存在，将引发异常。可以使用"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "See example below that creates space for 100 keypoints in the dataset:",
    "local": "请参见下面为数据集中的100个关键点创建空间的示例："
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "A value of H5_UNLIMITED for",
    "local": "H5_值不限"
  },
  {
    "origin": "size",
    "local": "大小"
  },
  {
    "origin": "means",
    "local": "方法"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "keypoints, thus is possible to expand anytime such dataset by adding or inserting. Presence of H5_UNLIMITED",
    "local": "关键点，因此可以通过添加或插入随时扩展这样的数据集。H5\\无限制"
  },
  {
    "origin": "require",
    "local": "要求"
  },
  {
    "origin": "to define custom chunking. No default chunking will be defined in unlimited scenario since default size on that dimension will be zero, and will grow once dataset is written. Writing into dataset that have H5_UNLIMITED on some of its dimension requires",
    "local": "定义自定义分块。在无限场景中不会定义默认分块，因为该维度上的默认大小将为零，并且在写入数据集后将增长。在数据集的某些维度上有H5èu不受限制的情况下，写入数据集需要"
  },
  {
    "origin": "that allow growth on unlimited dimension instead of",
    "local": "允许无限维的增长而不是"
  },
  {
    "origin": "that allows to write only in predefined data space.",
    "local": "只允许在预定义的数据空间中写入。"
  },
  {
    "origin": "See example below that creates unlimited space for keypoints chunking size of 100 but no compression:",
    "local": "请参见下面的示例，该示例为大小为100但不压缩的关键点块创建无限空间："
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "kpgetsize()",
    "local": "kpgetsize（）"
  },
  {
    "origin": "virtual int cv::hdf::HDF5::kpgetsize",
    "local": "虚拟int cv:：hdf:：HDF5:：kpgetsize"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "dims_flag",
    "local": "dims标志"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Fetch keypoint dataset size.",
    "local": "获取关键点数据集大小。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": "specify the hdf5 dataset label to be measured.",
    "local": "指定要测量的hdf5数据集标签。"
  },
  {
    "origin": "dims_flag",
    "local": "dims标志"
  },
  {
    "origin": "will fetch dataset dimensions on H5_GETDIMS, and dataset maximum dimensions on H5_GETMAXDIMS.",
    "local": "将在H5\\u GETDIMS上获取数据集维度，并在H5\\u GETMAXDIMS上获取数据集最大维度。"
  },
  {
    "origin": "Returns size of keypoints dataset.",
    "local": "返回关键点数据集的大小。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Resulting size will match the amount of keypoints. By default H5_GETDIMS will return actual dataset dimension. Using H5_GETMAXDIM flag will get maximum allowed dimension which normally match actual dataset dimension but can hold H5_UNLIMITED value if dataset was prepared in",
    "local": "结果大小将匹配关键点的数量。默认情况下，H5_GETDIMS将返回实际的数据集维度。使用H5\\u GETMAXDIM标志将获得允许的最大维度，该维度通常与实际数据集维度匹配，但如果数据集是在"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "mode. It can be useful to check existing dataset dimension before overwrite it as whole or subset. Trying to write with oversized source data into dataset target will thrown exception. The H5_GETCHUNKDIMS will return the dimension of chunk if dataset was created with chunking options otherwise returned vector size will be zero.",
    "local": "模式。在将现有数据集维度作为一个整体或子集覆盖之前，检查它可能很有用。试图用过大的源数据写入数据集目标将引发异常。如果数据集是使用分块选项创建的，H5_GETCHUNKDIMS将返回分块的维度，否则返回的向量大小将为零。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "kpinsert()",
    "local": "kpinsert（）"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::kpinsert",
    "local": "虚空cv:：hdf:：HDF5:：kpinsert"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const vector&lt;",
    "local": "常量向量&lt；"
  },
  {
    "origin": "keypoints",
    "local": "关键点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "counts",
    "local": "计数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Insert or overwrite list of",
    "local": "插入或覆盖列表"
  },
  {
    "origin": "into specified dataset and autoexpand dataset size if",
    "local": "输入指定的数据集并自动扩展数据集大小（如果"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "property allows.",
    "local": "属性允许。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "keypoints",
    "local": "关键点"
  },
  {
    "origin": "specify keypoints data list to be written.",
    "local": "指定要写入的关键点数据列表。"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": "specify the target hdf5 dataset label.",
    "local": "指定目标hdf5数据集标签。"
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": "specify the offset location on dataset from where keypoints will be (over)written into dataset.",
    "local": "指定数据集上的偏移位置，关键点将从该位置写入数据集。"
  },
  {
    "origin": "counts",
    "local": "计数"
  },
  {
    "origin": "specify the amount of keypoints that will be written into dataset.",
    "local": "指定将写入数据集的关键点的数量。"
  },
  {
    "origin": "Writes vector&lt;KeyPoint&gt; object into targeted dataset and",
    "local": "写入向量&lt；关键点&gt；对象导入目标数据集并"
  },
  {
    "origin": "autoexpand",
    "local": "自动展开"
  },
  {
    "origin": "dataset dimension if allowed.",
    "local": "数据集维度（如果允许）。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Unlike",
    "local": "不像"
  },
  {
    "origin": ", datasets are",
    "local": "，数据集为"
  },
  {
    "origin": "not",
    "local": "不"
  },
  {
    "origin": "created",
    "local": "创建"
  },
  {
    "origin": "automatically",
    "local": "自动"
  },
  {
    "origin": ". If",
    "local": ". 如果"
  },
  {
    "origin": "happen over outer region of dataset and dataset has been created in",
    "local": "发生在数据集的外部区域，并且数据集已在中创建"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "mode then dataset is expanded, otherwise exception is thrown. To create datasets with",
    "local": "然后扩展数据集，否则抛出异常。创建数据集的步骤"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "property see",
    "local": "属性请参见"
  },
  {
    "origin": "and the optional H5_UNLIMITED flag at creation time. It is not thread safe over same dataset but multiple datasets can be merged inside single hdf5 file.",
    "local": "以及在创建时可选的H5\\ u UNLIMITED标志。它在同一个数据集上不是线程安全的，但是多个数据集可以合并到一个hdf5文件中。"
  },
  {
    "origin": "Example below creates",
    "local": "下面的示例创建"
  },
  {
    "origin": "unlimited",
    "local": "无限制"
  },
  {
    "origin": "space for keypoints storage, and inserts a list of 10 keypoints ten times into that space. Final dataset will have 100 keypoints. Chunks size is 10 just optimized against list of keypoints. If routine is called multiple times dataset will be just overwritten:",
    "local": "用于存储关键点的空间，并将包含10个关键点的列表十次插入该空间。最终的数据集将有100个关键点。块大小为10，只是针对关键点列表进行了优化。如果例程被多次调用，数据集将被覆盖："
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "kpread()",
    "local": "kpread（）"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::kpread",
    "local": "虚拟void cv:：hdf:：HDF5:：kpread"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "vector&lt;",
    "local": "向量&lt；"
  },
  {
    "origin": "keypoints",
    "local": "关键点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "counts",
    "local": "计数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Read specific keypoint dataset from hdf5 file into vector&lt;KeyPoint&gt; object.",
    "local": "将特定的关键点数据集从hdf5文件读入vector&lt；关键点&gt；对象。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "keypoints",
    "local": "关键点"
  },
  {
    "origin": "vector&lt;KeyPoint&gt; container where data reads will be returned.",
    "local": "向量&lt；关键点&gt；将返回数据读取的容器。"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": "specify the source hdf5 dataset label.",
    "local": "指定源hdf5数据集标签。"
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": "specify the offset location over dataset from where read starts.",
    "local": "指定数据集上从读取开始的偏移位置。"
  },
  {
    "origin": "counts",
    "local": "计数"
  },
  {
    "origin": "specify the amount of keypoints from dataset to read.",
    "local": "指定要从数据集中读取的关键点的数量。"
  },
  {
    "origin": "Reads out vector&lt;KeyPoint&gt; object reflecting the stored dataset.",
    "local": "读取向量&lt；关键点&gt；反映存储的数据集的对象。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "If hdf5 file does not exist an exception will be thrown. Use",
    "local": "如果hdf5文件不存在，将引发异常。使用"
  },
  {
    "origin": "to check dataset presence. It is thread safe.",
    "local": "检查数据集是否存在。它是线程安全的。"
  },
  {
    "origin": "Example below reads a dataset containing keypoints starting with second entry:",
    "local": "下面的示例读取包含从第二个条目开始的关键点的数据集："
  },
  {
    "origin": "Example below perform read of 3 keypoints from second entry.",
    "local": "下面的示例从第二个条目中读取3个关键点。"
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": "&#9670;&nbsp；"
  },
  {
    "origin": "kpwrite()",
    "local": "kpwrite（）"
  },
  {
    "origin": "virtual void cv::hdf::HDF5::kpwrite",
    "local": "虚空cv:：hdf:：HDF5:：kpwrite"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const vector&lt;",
    "local": "常量向量&lt；"
  },
  {
    "origin": "keypoints",
    "local": "关键点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "counts",
    "local": "计数"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "pure virtual",
    "local": "纯虚拟的"
  },
  {
    "origin": "Write or overwrite list of",
    "local": "写入或覆盖列表"
  },
  {
    "origin": "into specified dataset of hdf5 file.",
    "local": "hdf5文件的指定数据集。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "keypoints",
    "local": "关键点"
  },
  {
    "origin": "specify keypoints data list to be written.",
    "local": "指定要写入的关键点数据列表。"
  },
  {
    "origin": "kplabel",
    "local": "kplabel公司"
  },
  {
    "origin": "specify the target hdf5 dataset label.",
    "local": "指定目标hdf5数据集标签。"
  },
  {
    "origin": "offset",
    "local": "抵消"
  },
  {
    "origin": "specify the offset location on dataset from where keypoints will be (over)written into dataset.",
    "local": "指定数据集上的偏移位置，关键点将从该位置写入数据集。"
  },
  {
    "origin": "counts",
    "local": "计数"
  },
  {
    "origin": "specify the amount of keypoints that will be written into dataset.",
    "local": "指定将写入数据集的关键点的数量。"
  },
  {
    "origin": "Writes vector&lt;KeyPoint&gt; object into targeted dataset.",
    "local": "写入向量&lt；关键点&gt；对象到目标数据集中。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "If dataset is not created and does not exist it will be created",
    "local": "如果数据集未创建且不存在，则将创建它"
  },
  {
    "origin": "automatically",
    "local": "自动"
  },
  {
    "origin": ". It is thread safe but it is recommended that writes to happen over separate non overlapping regions. Multiple datasets can be written inside single hdf5 file.",
    "local": ". 它是线程安全的，但建议在独立的非重叠区域上进行写操作。在一个hdf5文件中可以写入多个数据集。"
  },
  {
    "origin": "Example below writes a 100 keypoints into a dataset. No dataset precreation required. If routine is called multiple times dataset will be just overwritten:",
    "local": "下面的示例将100个关键点写入数据集。不需要数据集预创建。如果例程被多次调用，数据集将被覆盖："
  },
  {
    "origin": "Example below uses smaller set of 50 keypoints and writes into compressed space of 100 keypoints optimised by 10 chunks. Same keypoint set is written three times, first into first half (0-&gt;50) and at second half (50-&gt;75) then into remaining slots (75-&gt;99) of data space using offset and count parameters to settle the window for write access.If routine is called multiple times dataset will be just overwritten:",
    "local": "下面的例子使用了一组较小的50个关键点，并将其写入由10个块优化的100个关键点的压缩空间中。同一个关键点集被写入三次，第一次写入前半部分（0-&gt；50）和下半场（50-&gt；75），然后放入剩余的插槽（75-&gt；99）的数据空间，使用偏移量和计数参数设置写入访问的窗口。如果多次调用例程，数据集将被覆盖："
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/hdf/",
    "local": "打开CV2/hdf/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by &#160;",
    "local": "2021年4月2日星期五11:36:47为OpenCV生成，&#160；"
  }
]