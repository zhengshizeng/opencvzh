[
  {
    "origin": "OpenCV: Custom Calibration Pattern for 3D reconstruction",
    "local": "OpenCV：用于三维重建的自定义校准模式"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Namespaces",
    "local": "名称空间"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Macros",
    "local": "宏"
  },
  {
    "origin": "Enumerations",
    "local": "枚举"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "Custom Calibration Pattern for 3D reconstruction",
    "local": "用于三维重建的自定义校准模式"
  },
  {
    "origin": "Namespaces",
    "local": "名称空间"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Class for multiple camera calibration that supports pinhole camera and omnidirection camera. For omnidirectional camera model, please refer to",
    "local": "类用于支持针孔相机和全向相机的多相机校准。全向相机型号请参考"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Class for finding features points and corresponding 3D in world coordinate of a \"random\" pattern, which can be to be used in calibration. It is useful when pattern is partly occluded or only a part of pattern can be observed in multiple cameras calibration. The pattern can be generated by",
    "local": "类，用于在“随机”模式的世界坐标中查找特征点和相应的3D，可用于校准。在多摄像机标定中，当模式被部分遮挡或仅能观察到一部分模式时，该方法非常有用。模式可以通过以下方式生成："
  },
  {
    "origin": "class described in this file.",
    "local": "此文件中描述的类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Macros",
    "local": "宏"
  },
  {
    "origin": "#define",
    "local": "#定义"
  },
  {
    "origin": "#define",
    "local": "#定义"
  },
  {
    "origin": "Enumerations",
    "local": "枚举"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "= 16,",
    "local": "= 16,"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "enum",
    "local": "枚举"
  },
  {
    "origin": "{",
    "local": "{"
  },
  {
    "origin": "}",
    "local": "}"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "objectPoints,",
    "local": "目标点"
  },
  {
    "origin": "imagePoints,",
    "local": "图像点，"
  },
  {
    "origin": "size,",
    "local": "大小，"
  },
  {
    "origin": "K,",
    "local": "克，"
  },
  {
    "origin": "xi,",
    "local": "席"
  },
  {
    "origin": "D,",
    "local": "D.公司，"
  },
  {
    "origin": "rvecs,",
    "local": "rvecs公司，"
  },
  {
    "origin": "tvecs, int flags,",
    "local": "两个，两个旗子，"
  },
  {
    "origin": "criteria,",
    "local": "标准，"
  },
  {
    "origin": "idx=",
    "local": "idx公司="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Perform omnidirectional camera calibration, the default depth of outputs is CV_64F.",
    "local": "执行全向相机校准，输出的默认深度为CV64f。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "K,",
    "local": "克，"
  },
  {
    "origin": "D,",
    "local": "D.公司，"
  },
  {
    "origin": "xi,",
    "local": "席"
  },
  {
    "origin": "R,",
    "local": "R，"
  },
  {
    "origin": "P, const",
    "local": "P，const"
  },
  {
    "origin": "&amp;size, int m1type,",
    "local": "&amp；大小，类型，"
  },
  {
    "origin": "map1,",
    "local": "地图1，"
  },
  {
    "origin": "map2, int flags)",
    "local": "映射2，int标志）"
  },
  {
    "origin": "Computes undistortion and rectification maps for omnidirectional camera image transform by a rotation R. It output two maps that are used for",
    "local": "通过旋转R计算全向相机图像变换的未失真和校正贴图。它输出两个用于"
  },
  {
    "origin": ". If D is empty then zero distortion is used, if R or P is empty then identity matrices are used.",
    "local": ". 如果D为空，则使用零失真，如果R或P为空，则使用单位矩阵。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "objectPoints,",
    "local": "目标点"
  },
  {
    "origin": "imagePoints,",
    "local": "图像点，"
  },
  {
    "origin": "rvec,",
    "local": "rvec公司，"
  },
  {
    "origin": "tvec,",
    "local": "风险，"
  },
  {
    "origin": "K, double xi,",
    "local": "K，双席，"
  },
  {
    "origin": "D,",
    "local": "D.公司，"
  },
  {
    "origin": "jacobian=",
    "local": "雅可比="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Projects points for omnidirectional camera using CMei's model.",
    "local": "使用CMei模型为全向相机投影点。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "objectPoints,",
    "local": "目标点"
  },
  {
    "origin": "imagePoints, const",
    "local": "图像点，常量"
  },
  {
    "origin": "&amp;affine,",
    "local": "&amp；仿射的，"
  },
  {
    "origin": "K, double xi,",
    "local": "K，双席，"
  },
  {
    "origin": "D,",
    "local": "D.公司，"
  },
  {
    "origin": "jacobian=",
    "local": "雅可比="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "objectPoints,",
    "local": "目标点"
  },
  {
    "origin": "imagePoints1,",
    "local": "图像点1，"
  },
  {
    "origin": "imagePoints2, const",
    "local": "imagePoints2常量"
  },
  {
    "origin": "&amp;imageSize1, const",
    "local": "&amp；图像大小1，常量"
  },
  {
    "origin": "&amp;imageSize2,",
    "local": "&amp；图像大小2，"
  },
  {
    "origin": "K1,",
    "local": "K1，"
  },
  {
    "origin": "xi1,",
    "local": "X1，"
  },
  {
    "origin": "D1,",
    "local": "D1段，"
  },
  {
    "origin": "K2,",
    "local": "K2级，"
  },
  {
    "origin": "xi2,",
    "local": "XI2，"
  },
  {
    "origin": "D2,",
    "local": "D2级，"
  },
  {
    "origin": "rvec,",
    "local": "rvec公司，"
  },
  {
    "origin": "tvec,",
    "local": "风险，"
  },
  {
    "origin": "rvecsL,",
    "local": "rvecsL公司，"
  },
  {
    "origin": "tvecsL, int flags,",
    "local": "tvecsL，int标志，"
  },
  {
    "origin": "criteria,",
    "local": "标准，"
  },
  {
    "origin": "idx=",
    "local": "idx公司="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Stereo calibration for omnidirectional camera model. It computes the intrinsic parameters for two cameras and the extrinsic parameters between two cameras. The default depth of outputs is CV_64F.",
    "local": "全向相机模型的立体标定。它计算两个摄像机的内参数和两个摄像机之间的外参数。输出的默认深度是cv64f。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image1,",
    "local": "图像1，"
  },
  {
    "origin": "image2,",
    "local": "图像2，"
  },
  {
    "origin": "K1,",
    "local": "K1，"
  },
  {
    "origin": "D1,",
    "local": "D1段，"
  },
  {
    "origin": "xi1,",
    "local": "X1，"
  },
  {
    "origin": "K2,",
    "local": "K2级，"
  },
  {
    "origin": "D2,",
    "local": "D2级，"
  },
  {
    "origin": "xi2,",
    "local": "XI2，"
  },
  {
    "origin": "R,",
    "local": "R，"
  },
  {
    "origin": "T, int flag, int numDisparities, int SADWindowSize,",
    "local": "T、 int flag，int numDisparities，int sadWindowsSize，"
  },
  {
    "origin": "disparity,",
    "local": "差距，"
  },
  {
    "origin": "image1Rec,",
    "local": "图像1Rec，"
  },
  {
    "origin": "image2Rec, const",
    "local": "image2Rec，常量"
  },
  {
    "origin": "&amp;newSize=",
    "local": "&amp；新闻大小="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "Knew=",
    "local": "知道="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "pointCloud=",
    "local": "点云="
  },
  {
    "origin": "(), int pointType=",
    "local": "（），int pointType="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Stereo 3D reconstruction from a pair of images.",
    "local": "从一对图像进行立体三维重建。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "R,",
    "local": "R，"
  },
  {
    "origin": "T,",
    "local": "T，"
  },
  {
    "origin": "R1,",
    "local": "R1级，"
  },
  {
    "origin": "R2)",
    "local": "R2级）"
  },
  {
    "origin": "Stereo rectification for omnidirectional camera model. It computes the rectification rotations for two cameras.",
    "local": "全向相机模型的立体校正。它计算两个摄像机的校正旋转。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "distorted,",
    "local": "扭曲的，"
  },
  {
    "origin": "undistorted,",
    "local": "不失真，"
  },
  {
    "origin": "K,",
    "local": "克，"
  },
  {
    "origin": "D,",
    "local": "D.公司，"
  },
  {
    "origin": "xi, int flags,",
    "local": "席，int标志，"
  },
  {
    "origin": "Knew=",
    "local": "知道="
  },
  {
    "origin": "(), const",
    "local": "（），常量"
  },
  {
    "origin": "&amp;new_size=",
    "local": "&amp；新的\\u大小="
  },
  {
    "origin": "(),",
    "local": "(),"
  },
  {
    "origin": "R=",
    "local": "右="
  },
  {
    "origin": "(3, 3,",
    "local": "(3, 3,"
  },
  {
    "origin": "))",
    "local": "))"
  },
  {
    "origin": "Undistort omnidirectional images to perspective images.",
    "local": "无失真全向图像到透视图像。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "distorted,",
    "local": "扭曲的，"
  },
  {
    "origin": "undistorted,",
    "local": "不失真，"
  },
  {
    "origin": "K,",
    "local": "克，"
  },
  {
    "origin": "D,",
    "local": "D.公司，"
  },
  {
    "origin": "xi,",
    "local": "席"
  },
  {
    "origin": "R)",
    "local": "（右）"
  },
  {
    "origin": "Undistort 2D image points for omnidirectional camera using CMei's model.",
    "local": "使用CMei模型的全向相机的无失真2D图像点。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Macro Definition Documentation",
    "local": "宏定义文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "HEAD",
    "local": "头"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "INVALID",
    "local": "无效"
  },
  {
    "origin": "Enumeration Type Documentation",
    "local": "枚举类型文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "CALIB_USE_GUESS",
    "local": "校准使用猜测"
  },
  {
    "origin": "Python: cv.omnidir.CALIB_USE_GUESS",
    "local": "Python:cv.omnidir.CALIB\\u使用\\u GUESS"
  },
  {
    "origin": "CALIB_FIX_SKEW",
    "local": "校准固定倾斜"
  },
  {
    "origin": "Python: cv.omnidir.CALIB_FIX_SKEW",
    "local": "Python:cv.omnidir.CALIB\\u FIX\\u SKEW"
  },
  {
    "origin": "CALIB_FIX_K1",
    "local": "校准固定"
  },
  {
    "origin": "Python: cv.omnidir.CALIB_FIX_K1",
    "local": "Python:CV.omnidir.calib fix k1"
  },
  {
    "origin": "CALIB_FIX_K2",
    "local": "校准固定"
  },
  {
    "origin": "Python: cv.omnidir.CALIB_FIX_K2",
    "local": "Python:CV.omnidir.calib fix k2"
  },
  {
    "origin": "CALIB_FIX_P1",
    "local": "校准固定P1"
  },
  {
    "origin": "Python: cv.omnidir.CALIB_FIX_P1",
    "local": "Python:CV.omnidir.calib fix p1"
  },
  {
    "origin": "CALIB_FIX_P2",
    "local": "校准固定P2"
  },
  {
    "origin": "Python: cv.omnidir.CALIB_FIX_P2",
    "local": "Python:CV.omnidir.calib fix p2"
  },
  {
    "origin": "CALIB_FIX_XI",
    "local": "校准固定XI"
  },
  {
    "origin": "Python: cv.omnidir.CALIB_FIX_XI",
    "local": "Python:CV.omnidir.calib fix xi"
  },
  {
    "origin": "CALIB_FIX_GAMMA",
    "local": "校准伽马射线"
  },
  {
    "origin": "Python: cv.omnidir.CALIB_FIX_GAMMA",
    "local": "Python:CV.omnidir.calib fix gamma"
  },
  {
    "origin": "CALIB_FIX_CENTER",
    "local": "校准固定中心"
  },
  {
    "origin": "Python: cv.omnidir.CALIB_FIX_CENTER",
    "local": "Python:cv.omnidir.CALIB\\u FIX\\u中心"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "RECTIFY_PERSPECTIVE",
    "local": "纠正你的观点"
  },
  {
    "origin": "Python: cv.omnidir.RECTIFY_PERSPECTIVE",
    "local": "Python:cv.omnidir.u透视图"
  },
  {
    "origin": "RECTIFY_CYLINDRICAL",
    "local": "校正U柱形"
  },
  {
    "origin": "Python: cv.omnidir.RECTIFY_CYLINDRICAL",
    "local": "Python:cv.omnidir.u圆柱形"
  },
  {
    "origin": "RECTIFY_LONGLATI",
    "local": "纠正LONGLATI"
  },
  {
    "origin": "Python: cv.omnidir.RECTIFY_LONGLATI",
    "local": "Python:cv.omnidir.eu LONGLATI"
  },
  {
    "origin": "RECTIFY_STEREOGRAPHIC",
    "local": "赤平极射"
  },
  {
    "origin": "Python: cv.omnidir.RECTIFY_STEREOGRAPHIC",
    "local": "Python:cv.omnidir.u赤平"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "anonymous enum",
    "local": "匿名枚举"
  },
  {
    "origin": "Enumerator",
    "local": "枚举器"
  },
  {
    "origin": "XYZRGB",
    "local": "XYZRGB公司"
  },
  {
    "origin": "Python: cv.omnidir.XYZRGB",
    "local": "Python:cv.omnidir.XYZRGB"
  },
  {
    "origin": "XYZ",
    "local": "XYZ公司"
  },
  {
    "origin": "Python: cv.omnidir.XYZ",
    "local": "Python:cv.omnidir.XYZ"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "calibrate()",
    "local": "校准（）"
  },
  {
    "origin": "double cv::omnidir::calibrate",
    "local": "双cv：：omnidir：：校准"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "objectPoints",
    "local": "目标点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "imagePoints",
    "local": "图像点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "size",
    "local": "大小"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "rvecs",
    "local": "rvecs公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "tvecs",
    "local": "tvecs公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "criteria",
    "local": "标准"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "idx",
    "local": "idx公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, K, xi, D, rvecs, tvecs, idx",
    "local": "返回、K、xi、D、rvecs、tvecs、idx"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.omnidir.calibrate(",
    "local": "cv.omnidir.校准("
  },
  {
    "origin": "objectPoints, imagePoints, size, K, xi, D, flags, criteria[, rvecs[, tvecs[, idx]]]",
    "local": "对象点、图像点、大小、k、席、d、旗、标准[RVECs]、[TVEC[[，IDX] ] ]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Perform omnidirectional camera calibration, the default depth of outputs is CV_64F.",
    "local": "执行全向相机校准，输出的默认深度为CV64f。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "objectPoints",
    "local": "目标点"
  },
  {
    "origin": "Vector of vector of Vec3f object points in world (pattern) coordinate. It also can be vector of",
    "local": "在世界（模式）坐标中，Vec3f对象点的向量向量。它也可以是"
  },
  {
    "origin": "with size 1xN/Nx1 and type CV_32FC3. Data with depth of 64_F is also acceptable.",
    "local": "尺寸为1xN/Nx1，型号为CV32FC3。深度为64华氏度的数据也是可以接受的。"
  },
  {
    "origin": "imagePoints",
    "local": "图像点"
  },
  {
    "origin": "Vector of vector of Vec2f corresponding image points of objectPoints. It must be the same size and the same type with objectPoints.",
    "local": "Vec2f的向量对应于目标点的图像点。它的大小和类型必须与objectPoints相同。"
  },
  {
    "origin": "size",
    "local": "大小"
  },
  {
    "origin": "Image size of calibration images.",
    "local": "校准图像的图像大小。"
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": "Output calibrated camera matrix.",
    "local": "输出校准摄像机矩阵。"
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": "Output parameter xi for CMei's model",
    "local": "CMei模型的输出参数席"
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": "Output distortion parameters \\((k_1, k_2, p_1, p_2)\\)",
    "local": "输出失真参数\\（（k\\u 1，k\\u 2，p\\u 1，p\\u 2）\\）"
  },
  {
    "origin": "rvecs",
    "local": "rvecs公司"
  },
  {
    "origin": "Output rotations for each calibration images",
    "local": "输出每个校准图像的旋转"
  },
  {
    "origin": "tvecs",
    "local": "tvecs公司"
  },
  {
    "origin": "Output translation for each calibration images",
    "local": "每个校准图像的输出转换"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "The flags that control calibrate",
    "local": "控制校准的标志"
  },
  {
    "origin": "criteria",
    "local": "标准"
  },
  {
    "origin": "Termination criteria for optimization",
    "local": "优化终止准则"
  },
  {
    "origin": "idx",
    "local": "idx公司"
  },
  {
    "origin": "Indices of images that pass initialization, which are really used in calibration. So the size of rvecs is the same as",
    "local": "通过初始化的图像索引，真正用于校准。所以rvecs的大小和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "initUndistortRectifyMap()",
    "local": "初始无失真校正映射（）"
  },
  {
    "origin": "void cv::omnidir::initUndistortRectifyMap",
    "local": "void cv:：omnidir:：initundortyMap"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "P",
    "local": "P"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "size",
    "local": "大小"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "m1type",
    "local": "M1型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "map1",
    "local": "地图1"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "map2",
    "local": "微管相关蛋白2"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "map1, map2",
    "local": "地图1，地图2"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.omnidir.initUndistortRectifyMap(",
    "local": "cv.omnidir.InitUndortyMap公司("
  },
  {
    "origin": "K, D, xi, R, P, size, m1type, flags[, map1[, map2]]",
    "local": "K，D，席，R，P，大小，M1类型，标志[，MAP1[，MAP2] ]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Computes undistortion and rectification maps for omnidirectional camera image transform by a rotation R. It output two maps that are used for",
    "local": "通过旋转R计算全向相机图像变换的未失真和校正贴图。它输出两个用于"
  },
  {
    "origin": ". If D is empty then zero distortion is used, if R or P is empty then identity matrices are used.",
    "local": ". 如果D为空，则使用零失真，如果R或P为空，则使用单位矩阵。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": "Camera matrix \\(K = \\vecthreethree{f_x}{s}{c_x}{0}{f_y}{c_y}{0}{0}{_1}\\), with depth CV_32F or CV_64F",
    "local": "相机矩阵\\（K=\\vecthreethree{f\\u x}{s}{c\\u x}{0}{f\\u y}{c\\u y}{0}{0}{0}{u 1}\\），深度为CV\\u 32F或CV\\u 64F"
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": "Input vector of distortion coefficients \\((k_1, k_2, p_1, p_2)\\), with depth CV_32F or CV_64F",
    "local": "失真系数的输入向量\\（（k \\u 1，k \\u 2，p \\u 1，p \\u 2）\\），深度为CV \\u 32F或CV \\u 64F"
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": "The parameter xi for CMei's model",
    "local": "CMei模型的参数席"
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": "Rotation transform between the original and object space : 3x3 1-channel, or vector: 3x1/1x3, with depth CV_32F or CV_64F",
    "local": "原始空间和对象空间之间的旋转变换：3x3 1通道，或向量：3x1/1x3，深度CV32f或CV64f"
  },
  {
    "origin": "P",
    "local": "P"
  },
  {
    "origin": "New camera matrix (3x3) or new projection matrix (3x4)",
    "local": "新的摄像机矩阵（3x3）或新的投影矩阵（3x4）"
  },
  {
    "origin": "size",
    "local": "大小"
  },
  {
    "origin": "Undistorted image size.",
    "local": "未失真图像大小。"
  },
  {
    "origin": "m1type",
    "local": "M1型"
  },
  {
    "origin": "Type of the first output map that can be CV_32FC1 or CV_16SC2 . See",
    "local": "第一个输出映射的类型，可以是CV\\ U 32FC1或CV\\ U 16SC2。看到了吗"
  },
  {
    "origin": "for details.",
    "local": "详情。"
  },
  {
    "origin": "map1",
    "local": "地图1"
  },
  {
    "origin": "The first output map.",
    "local": "第一个输出映射。"
  },
  {
    "origin": "map2",
    "local": "微管相关蛋白2"
  },
  {
    "origin": "The second output map.",
    "local": "第二个输出映射。"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "Flags indicates the rectification type, RECTIFY_PERSPECTIVE, RECTIFY_CYLINDRICAL, RECTIFY_LONGLATI and RECTIFY_STEREOGRAPHIC are supported.",
    "local": "标志表示校正类型，支持校正透视图、校正柱面图、校正长条图和校正赤平图。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "projectPoints()",
    "local": "项目点（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "void cv::omnidir::projectPoints",
    "local": "void cv::omnidir::projectpoints"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "objectPoints",
    "local": "目标点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "imagePoints",
    "local": "图像点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "rvec",
    "local": "rvec公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "tvec",
    "local": "风险"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "jacobian",
    "local": "雅可比"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "imagePoints, jacobian",
    "local": "imagePoints，雅各宾"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.omnidir.projectPoints(",
    "local": "CV.OMNIDIR.ProjectPoints（"
  },
  {
    "origin": "objectPoints, rvec, tvec, K, xi, D[, imagePoints[, jacobian]]",
    "local": "objectPoints，rvec，tvec，K，xi，D[，imagePoints[，jacobian]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Projects points for omnidirectional camera using CMei's model.",
    "local": "使用CMei模型为全向相机投影点。"
  },
  {
    "origin": "This module was accepted as a GSoC 2015 project for OpenCV, authored by Baisheng Lai, mentored by Bo Li.",
    "local": "本模块被接受为OpenCV的GSoC 2015项目，作者为赖白生，导师为李波。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "objectPoints",
    "local": "目标点"
  },
  {
    "origin": "Object points in world coordinate, vector of vector of Vec3f or",
    "local": "世界坐标中的对象点，向量向量向量向量向量向量向量3f或"
  },
  {
    "origin": "of 1xN/Nx1 3-channel of type CV_32F and N is the number of points. 64F is also acceptable.",
    "local": "CV32f型1xN/Nx1 3通道的N是点数。64F也是可以接受的。"
  },
  {
    "origin": "imagePoints",
    "local": "图像点"
  },
  {
    "origin": "Output array of image points, vector of vector of Vec2f or 1xN/Nx1 2-channel of type CV_32F. 64F is also acceptable.",
    "local": "输出图像点阵列，向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量向量。64F也是可以接受的。"
  },
  {
    "origin": "rvec",
    "local": "rvec公司"
  },
  {
    "origin": "vector of rotation between world coordinate and camera coordinate, i.e., om",
    "local": "世界坐标和相机坐标之间的旋转矢量，即om"
  },
  {
    "origin": "tvec",
    "local": "风险"
  },
  {
    "origin": "vector of translation between pattern coordinate and camera coordinate",
    "local": "图形坐标和相机坐标之间的平移矢量"
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": "Camera matrix \\(K = \\vecthreethree{f_x}{s}{c_x}{0}{f_y}{c_y}{0}{0}{_1}\\).",
    "local": "相机矩阵\\（K=\\vecthreethree{f\\u x}{s}{c\\u x}{0}{f\\u y}{c\\u y}{0}{0}{0}{u 1}\\）。"
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": "Input vector of distortion coefficients \\((k_1, k_2, p_1, p_2)\\).",
    "local": "失真系数的输入向量\\（（k\\u 1，k\\u 2，p\\u 1，p\\u 2）\\）。"
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": "The parameter xi for CMei's model",
    "local": "CMei模型的参数席"
  },
  {
    "origin": "jacobian",
    "local": "雅可比"
  },
  {
    "origin": "Optional output 2Nx16 of type CV_64F jacobian matrix, contains the derivatives of image pixel points wrt parameters including \\(om, T, f_x, f_y, s, c_x, c_y, xi, k_1, k_2, p_1, p_2\\). This matrix will be used in calibration by optimization.",
    "local": "CVY-64 F雅可比矩阵的可选输出2Nx16包含图像像素点WRT参数的导数，包括（OM，T，FAX，FYY，S，CYX，CYY，席，KY1，KY2，PY1，PY2\\）。该矩阵将用于优化校准。"
  },
  {
    "origin": "The function projects object 3D points of world coordinate to image pixels, parameter by intrinsic and extrinsic parameters. Also, it optionally compute a by-product: the jacobian matrix containing contains the derivatives of image pixel points wrt intrinsic and extrinsic parameters.",
    "local": "该函数通过内参数和外参数将世界坐标的物体三维点投影到图像像素上。此外，它还可以选择性地计算一个副产品：雅可比矩阵包含图像像素点相对于内在和外在参数的导数。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "projectPoints()",
    "local": "项目点（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "void cv::omnidir::projectPoints",
    "local": "void cv::omnidir::projectpoints"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "objectPoints",
    "local": "目标点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "imagePoints",
    "local": "图像点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "affine",
    "local": "仿射"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "double",
    "local": "双重的"
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "jacobian",
    "local": "雅可比"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "imagePoints, jacobian",
    "local": "imagePoints，雅各宾"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.omnidir.projectPoints(",
    "local": "CV.OMNIDIR.ProjectPoints（"
  },
  {
    "origin": "objectPoints, rvec, tvec, K, xi, D[, imagePoints[, jacobian]]",
    "local": "objectPoints，rvec，tvec，K，xi，D[，imagePoints[，jacobian]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "这是一个重载成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "stereoCalibrate()",
    "local": "StereoCalibrate（）"
  },
  {
    "origin": "double cv::omnidir::stereoCalibrate",
    "local": "双cv:：omnidir:：stereoCalibrate"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "objectPoints",
    "local": "目标点"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "imagePoints1",
    "local": "图像点1"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "imagePoints2",
    "local": "图像点2"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "imageSize1",
    "local": "图像大小1"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "imageSize2",
    "local": "图像大小2"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K1",
    "local": "K1级"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "xi1",
    "local": "X1"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D1",
    "local": "D1级"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K2",
    "local": "K2级"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "xi2",
    "local": "XI2"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D2",
    "local": "D2级"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "rvec",
    "local": "rvec公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "tvec",
    "local": "风险"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "rvecsL",
    "local": "rvecsL公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "tvecsL",
    "local": "tvecsL公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "criteria",
    "local": "标准"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "idx",
    "local": "idx公司"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval, objectPoints, imagePoints1, imagePoints2, K1, xi1, D1, K2, xi2, D2, rvec, tvec, rvecsL, tvecsL, idx",
    "local": "retval，objectPoints，imagePoints1，imagePoints2，K1，xi1，D1，K2，xi2，D2，rvec，tvec，rvecsL，tvecsL，tvecsL，idx"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.omnidir.stereoCalibrate(",
    "local": "CV.omnidir.stereocalibrate（"
  },
  {
    "origin": "objectPoints, imagePoints1, imagePoints2, imageSize1, imageSize2, K1, xi1, D1, K2, xi2, D2, flags, criteria[, rvec[, tvec[, rvecsL[, tvecsL[, idx]]]]]",
    "local": "objectPoints、imagePoints1、imagePoints2、imageSize1、imageSize2、K1、xi1、D1、K2、xi2、D2、标志、条件[、rvec[、tvec[、rvecsL[、idx]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Stereo calibration for omnidirectional camera model. It computes the intrinsic parameters for two cameras and the extrinsic parameters between two cameras. The default depth of outputs is CV_64F.",
    "local": "全向相机模型的立体标定。它计算两个摄像机的内参数和两个摄像机之间的外参数。输出的默认深度是cv64f。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "objectPoints",
    "local": "目标点"
  },
  {
    "origin": "Object points in world (pattern) coordinate. Its type is vector&lt;vector&lt;Vec3f&gt; &gt;. It also can be vector of",
    "local": "世界（图案）坐标中的对象点。它的类型是矢量&lt；向量&lt；Vec3f&gt&gt；。它也可以是"
  },
  {
    "origin": "with size 1xN/Nx1 and type CV_32FC3. Data with depth of 64_F is also acceptable.",
    "local": "尺寸为1xN/Nx1，型号为CV32FC3。深度为64华氏度的数据也是可以接受的。"
  },
  {
    "origin": "imagePoints1",
    "local": "图像点1"
  },
  {
    "origin": "The corresponding image points of the first camera, with type vector&lt;vector&lt;Vec2f&gt; &gt;. It must be the same size and the same type as objectPoints.",
    "local": "第一个相机的对应图像点，类型为vector&lt；向量&lt；Vec2f&gt&gt；。它必须与objectPoints的大小和类型相同。"
  },
  {
    "origin": "imagePoints2",
    "local": "图像点2"
  },
  {
    "origin": "The corresponding image points of the second camera, with type vector&lt;vector&lt;Vec2f&gt; &gt;. It must be the same size and the same type as objectPoints.",
    "local": "第二个相机的对应图像点，类型为vector&lt；向量&lt；Vec2f&gt&gt；。它必须与objectPoints的大小和类型相同。"
  },
  {
    "origin": "imageSize1",
    "local": "图像大小1"
  },
  {
    "origin": "Image size of calibration images of the first camera.",
    "local": "第一台摄像机标定图像的图像大小。"
  },
  {
    "origin": "imageSize2",
    "local": "图像大小2"
  },
  {
    "origin": "Image size of calibration images of the second camera.",
    "local": "第二台摄像机标定图像的图像大小。"
  },
  {
    "origin": "K1",
    "local": "K1级"
  },
  {
    "origin": "Output camera matrix for the first camera.",
    "local": "输出第一个摄像机的摄像机矩阵。"
  },
  {
    "origin": "xi1",
    "local": "X1"
  },
  {
    "origin": "Output parameter xi of Mei's model for the first camera",
    "local": "第一摄像机梅模型的输出参数席"
  },
  {
    "origin": "D1",
    "local": "D1级"
  },
  {
    "origin": "Output distortion parameters \\((k_1, k_2, p_1, p_2)\\) for the first camera",
    "local": "第一台相机的输出失真参数\\（（k \\u 1，k \\u 2，p \\u 1，p \\u 2）\\）"
  },
  {
    "origin": "K2",
    "local": "K2级"
  },
  {
    "origin": "Output camera matrix for the first camera.",
    "local": "输出第一个摄像机的摄像机矩阵。"
  },
  {
    "origin": "xi2",
    "local": "XI2"
  },
  {
    "origin": "Output parameter xi of CMei's model for the second camera",
    "local": "第二摄像机CMei模型的输出参数席"
  },
  {
    "origin": "D2",
    "local": "D2级"
  },
  {
    "origin": "Output distortion parameters \\((k_1, k_2, p_1, p_2)\\) for the second camera",
    "local": "第二台相机的输出失真参数\\（（k \\u 1，k \\u 2，p \\u 1，p \\u 2）\\）"
  },
  {
    "origin": "rvec",
    "local": "rvec公司"
  },
  {
    "origin": "Output rotation between the first and second camera",
    "local": "在第一和第二照相机之间输出旋转"
  },
  {
    "origin": "tvec",
    "local": "风险"
  },
  {
    "origin": "Output translation between the first and second camera",
    "local": "第一和第二照相机之间的输出平移"
  },
  {
    "origin": "rvecsL",
    "local": "rvecsL公司"
  },
  {
    "origin": "Output rotation for each image of the first camera",
    "local": "为第一个相机的每个图像输出旋转"
  },
  {
    "origin": "tvecsL",
    "local": "tvecsL公司"
  },
  {
    "origin": "Output translation for each image of the first camera",
    "local": "为第一个相机的每个图像输出平移"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "The flags that control stereoCalibrate",
    "local": "控制立体声的标志"
  },
  {
    "origin": "criteria",
    "local": "标准"
  },
  {
    "origin": "Termination criteria for optimization",
    "local": "优化终止准则"
  },
  {
    "origin": "idx",
    "local": "idx公司"
  },
  {
    "origin": "Indices of image pairs that pass initialization, which are really used in calibration. So the size of rvecs is the same as",
    "local": "通过初始化的图像对的索引，这实际上用于校准。所以rvecs的大小和"
  },
  {
    "origin": ". @",
    "local": ". @"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "stereoReconstruct()",
    "local": "立体重建（）"
  },
  {
    "origin": "void cv::omnidir::stereoReconstruct",
    "local": "void cv:：omnidir:：立体重建"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image1",
    "local": "图像1"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "image2",
    "local": "图像2"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K1",
    "local": "K1级"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D1",
    "local": "D1级"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "xi1",
    "local": "X1"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K2",
    "local": "K2级"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D2",
    "local": "D2级"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "xi2",
    "local": "XI2"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "T",
    "local": "T"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flag",
    "local": "旗帜"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "numDisparities",
    "local": "数字稀疏性"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "SADWindowSize",
    "local": "SADWindowSize。"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "disparity",
    "local": "差距"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "image1Rec",
    "local": "图像1Rec"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "image2Rec",
    "local": "图像2Rec"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "newSize",
    "local": "新的"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Knew",
    "local": "知道"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "pointCloud",
    "local": "点云"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "pointType",
    "local": "点类型"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "disparity, image1Rec, image2Rec, pointCloud",
    "local": "视差，image1Rec，image2Rec，点云"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.omnidir.stereoReconstruct(",
    "local": "cv.omnidir.立体重建("
  },
  {
    "origin": "image1, image2, K1, D1, xi1, K2, D2, xi2, R, T, flag, numDisparities, SADWindowSize[, disparity[, image1Rec[, image2Rec[, newSize[, Knew[, pointCloud[, pointType]]]]]]]",
    "local": "IMAGE1、IIGE2、K1、D1、X1、K2、D2、XI2、R、T、FLAG、NUBDISPARIZY、SADWOWDOWSIZE [视差]、IIGE1RC[IMAGE2CR]、NeXeSIZ[、知道]、PooTrime[，PotoType"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Stereo 3D reconstruction from a pair of images.",
    "local": "从一对图像进行立体三维重建。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "image1",
    "local": "图像1"
  },
  {
    "origin": "The first input image",
    "local": "第一个输入图像"
  },
  {
    "origin": "image2",
    "local": "图像2"
  },
  {
    "origin": "The second input image",
    "local": "第二个输入图像"
  },
  {
    "origin": "K1",
    "local": "K1级"
  },
  {
    "origin": "Input camera matrix of the first camera",
    "local": "输入第一台摄像机的摄像机矩阵"
  },
  {
    "origin": "D1",
    "local": "D1级"
  },
  {
    "origin": "Input distortion parameters \\((k_1, k_2, p_1, p_2)\\) for the first camera",
    "local": "为第一台相机输入失真参数\\（（k\\u 1，k\\u 2，p\\u 1，p\\u 2）\\）"
  },
  {
    "origin": "xi1",
    "local": "X1"
  },
  {
    "origin": "Input parameter xi for the first camera for CMei's model",
    "local": "CMei模型第一摄像机输入参数席"
  },
  {
    "origin": "K2",
    "local": "K2级"
  },
  {
    "origin": "Input camera matrix of the second camera",
    "local": "输入第二台摄像机的摄像机矩阵"
  },
  {
    "origin": "D2",
    "local": "D2级"
  },
  {
    "origin": "Input distortion parameters \\((k_1, k_2, p_1, p_2)\\) for the second camera",
    "local": "为第二台相机输入失真参数\\（（k \\u 1，k \\u 2，p \\u 1，p \\u 2）\\）"
  },
  {
    "origin": "xi2",
    "local": "XI2"
  },
  {
    "origin": "Input parameter xi for the second camera for CMei's model",
    "local": "CMei模型的第二摄像机输入参数席"
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": "Rotation between the first and second camera",
    "local": "第一个和第二个摄像头之间的旋转"
  },
  {
    "origin": "T",
    "local": "T"
  },
  {
    "origin": "Translation between the first and second camera",
    "local": "第一和第二摄像机之间的平移"
  },
  {
    "origin": "flag",
    "local": "旗帜"
  },
  {
    "origin": "Flag of rectification type, RECTIFY_PERSPECTIVE or RECTIFY_LONGLATI",
    "local": "校正类型的标志，校正透视图或校正纵向图"
  },
  {
    "origin": "numDisparities",
    "local": "数字稀疏性"
  },
  {
    "origin": "The parameter 'numDisparities' in",
    "local": "中的参数“numDisparities”"
  },
  {
    "origin": ", see",
    "local": "，请参见"
  },
  {
    "origin": "for details.",
    "local": "详情。"
  },
  {
    "origin": "SADWindowSize",
    "local": "SADWindowSize。"
  },
  {
    "origin": "The parameter 'SADWindowSize' in",
    "local": "中的参数“sadWindowsSize”"
  },
  {
    "origin": ", see",
    "local": "，请参见"
  },
  {
    "origin": "for details.",
    "local": "详情。"
  },
  {
    "origin": "disparity",
    "local": "差距"
  },
  {
    "origin": "Disparity map generated by stereo matching",
    "local": "立体匹配生成视差图"
  },
  {
    "origin": "image1Rec",
    "local": "图像1Rec"
  },
  {
    "origin": "Rectified image of the first image",
    "local": "第一图像的校正图像"
  },
  {
    "origin": "image2Rec",
    "local": "图像2Rec"
  },
  {
    "origin": "rectified image of the second image",
    "local": "第二图像的校正图像"
  },
  {
    "origin": "newSize",
    "local": "新的"
  },
  {
    "origin": "Image size of rectified image, see",
    "local": "校正图像的图像大小，参见"
  },
  {
    "origin": "Knew",
    "local": "知道"
  },
  {
    "origin": "New camera matrix of rectified image, see",
    "local": "校正图像的新相机矩阵，请参见"
  },
  {
    "origin": "pointCloud",
    "local": "点云"
  },
  {
    "origin": "Point cloud of 3D reconstruction, with type CV_64FC3",
    "local": "三维重建点云，CV\\ U 64FC3型"
  },
  {
    "origin": "pointType",
    "local": "点类型"
  },
  {
    "origin": "Point cloud type, it can be XYZRGB or XYZ",
    "local": "点云类型，可以是XYZRGB或XYZ"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "stereoRectify()",
    "local": "立体声校正（）"
  },
  {
    "origin": "void cv::omnidir::stereoRectify",
    "local": "void cv:：omnidir:：立体声校正"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "T",
    "local": "T"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "R1",
    "local": "R1级"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "R2",
    "local": "R2级"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "R1, R2",
    "local": "R1和R2"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.omnidir.stereoRectify(",
    "local": "cv.omnidir.立体校正("
  },
  {
    "origin": "R, T[, R1[, R2]]",
    "local": "R、 T[，R1[，R2]]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Stereo rectification for omnidirectional camera model. It computes the rectification rotations for two cameras.",
    "local": "全向相机模型的立体校正。它计算两个摄像机的校正旋转。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": "Rotation between the first and second camera",
    "local": "第一个和第二个摄像头之间的旋转"
  },
  {
    "origin": "T",
    "local": "T"
  },
  {
    "origin": "Translation between the first and second camera",
    "local": "第一和第二摄像机之间的平移"
  },
  {
    "origin": "R1",
    "local": "R1级"
  },
  {
    "origin": "Output 3x3 rotation matrix for the first camera",
    "local": "为第一台摄像机输出3x3旋转矩阵"
  },
  {
    "origin": "R2",
    "local": "R2级"
  },
  {
    "origin": "Output 3x3 rotation matrix for the second camera",
    "local": "为第二台摄像机输出3x3旋转矩阵"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "undistortImage()",
    "local": "不失真图像（）"
  },
  {
    "origin": "void cv::omnidir::undistortImage",
    "local": "void cv:：omnidir:：未失真图像"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "distorted",
    "local": "扭曲的"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "undistorted",
    "local": "不失真"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "Knew",
    "local": "知道"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "new_size",
    "local": "新的\\u大小"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "undistorted",
    "local": "不失真"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.omnidir.undistortImage(",
    "local": "cv.omnidir.UNDORTIMAGE公司("
  },
  {
    "origin": "distorted, K, D, xi, flags[, undistorted[, Knew[, new_size[, R]]]]",
    "local": "失真，k，d，席，旗子[，未失真[，知道]，NexOxSe[（R] ] ]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Undistort omnidirectional images to perspective images.",
    "local": "无失真全向图像到透视图像。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "distorted",
    "local": "扭曲的"
  },
  {
    "origin": "The input omnidirectional image.",
    "local": "输入全向图像。"
  },
  {
    "origin": "undistorted",
    "local": "不失真"
  },
  {
    "origin": "The output undistorted image.",
    "local": "输出未失真的图像。"
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": "Camera matrix \\(K = \\vecthreethree{f_x}{s}{c_x}{0}{f_y}{c_y}{0}{0}{_1}\\).",
    "local": "相机矩阵\\（K=\\vecthreethree{f\\u x}{s}{c\\u x}{0}{f\\u y}{c\\u y}{0}{0}{0}{u 1}\\）。"
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": "Input vector of distortion coefficients \\((k_1, k_2, p_1, p_2)\\).",
    "local": "失真系数的输入向量\\（（k\\u 1，k\\u 2，p\\u 1，p\\u 2）\\）。"
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": "The parameter xi for CMei's model.",
    "local": "CMei模型的参数席。"
  },
  {
    "origin": "flags",
    "local": "旗帜"
  },
  {
    "origin": "Flags indicates the rectification type, RECTIFY_PERSPECTIVE, RECTIFY_CYLINDRICAL, RECTIFY_LONGLATI and RECTIFY_STEREOGRAPHIC",
    "local": "标志表示校正类型、校正透视图、校正柱面图、校正长角图和校正赤平图"
  },
  {
    "origin": "Knew",
    "local": "知道"
  },
  {
    "origin": "Camera matrix of the distorted image. If it is not assigned, it is just K.",
    "local": "畸变图像的摄像机矩阵。如果没有赋值，它就是K。"
  },
  {
    "origin": "new_size",
    "local": "新的\\u大小"
  },
  {
    "origin": "The new image size. By default, it is the size of distorted.",
    "local": "新图像大小。默认情况下，它是扭曲的大小。"
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": "Rotation matrix between the input and output images. By default, it is identity matrix.",
    "local": "输入和输出图像之间的旋转矩阵。默认情况下，它是单位矩阵。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "undistortPoints()",
    "local": "不失真点（）"
  },
  {
    "origin": "void cv::omnidir::undistortPoints",
    "local": "void cv:：omnidir:：不失真点"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "distorted",
    "local": "扭曲的"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "undistorted",
    "local": "不失真"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "undistorted",
    "local": "不失真"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.omnidir.undistortPoints(",
    "local": "cv.omnidir.不失真点("
  },
  {
    "origin": "distorted, K, D, xi, R[, undistorted]",
    "local": "失真，k，d，席，r [，未失真]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Undistort 2D image points for omnidirectional camera using CMei's model.",
    "local": "使用CMei模型的全向相机的无失真2D图像点。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "distorted",
    "local": "扭曲的"
  },
  {
    "origin": "Array of distorted image points, vector of Vec2f or 1xN/Nx1 2-channel",
    "local": "畸变像点阵列，向量为Vec2f或1xN/Nx1 2通道"
  },
  {
    "origin": "of type CV_32F, 64F depth is also acceptable",
    "local": "对于CV32F型，也可接受64F深度"
  },
  {
    "origin": "K",
    "local": "K"
  },
  {
    "origin": "Camera matrix \\(K = \\vecthreethree{f_x}{s}{c_x}{0}{f_y}{c_y}{0}{0}{_1}\\).",
    "local": "相机矩阵\\（K=\\vecthreethree{f\\u x}{s}{c\\u x}{0}{f\\u y}{c\\u y}{0}{0}{0}{u 1}\\）。"
  },
  {
    "origin": "D",
    "local": "D"
  },
  {
    "origin": "Distortion coefficients \\((k_1, k_2, p_1, p_2)\\).",
    "local": "失真系数\\（（k\\u 1，k\\u 2，p\\u 1，p\\u 2）\\）。"
  },
  {
    "origin": "xi",
    "local": "席"
  },
  {
    "origin": "The parameter xi for CMei's model",
    "local": "CMei模型的参数席"
  },
  {
    "origin": "R",
    "local": "R"
  },
  {
    "origin": "Rotation trainsform between the original and object space : 3x3 1-channel, or vector: 3x1/1x3 1-channel or 1x1 3-channel",
    "local": "原始空间和对象空间之间的旋转序列形式：3x3 1通道，或向量：3x1/1x3 1通道或1x1 3通道"
  },
  {
    "origin": "undistorted",
    "local": "不失真"
  },
  {
    "origin": "array of normalized object points, vector of Vec2f/Vec2d or 1xN/Nx1 2-channel",
    "local": "标准化对象点数组，向量为Vec2f/Vec2d或1xN/Nx1 2通道"
  },
  {
    "origin": "with the same depth of distorted points.",
    "local": "具有相同深度的扭曲点。"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:41为OpenCV生成"
  }
]