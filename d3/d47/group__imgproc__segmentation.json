[
  {
    "origin": "OpenCV: Image Segmentation",
    "local": "OpenCV：图像分割"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "Image Segmentation",
    "local": "图像分割"
  },
  {
    "origin": "Classes",
    "local": "班级"
  },
  {
    "origin": "class",
    "local": "班"
  },
  {
    "origin": "Intelligent Scissors image segmentation.",
    "local": "智能剪刀图像分割。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Functions",
    "local": "功能"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "img,",
    "local": "img公司，"
  },
  {
    "origin": "mask,",
    "local": "面具，"
  },
  {
    "origin": "rect,",
    "local": "矩形，"
  },
  {
    "origin": "bgdModel,",
    "local": "BGD模型，"
  },
  {
    "origin": "fgdModel, int iterCount, int mode=",
    "local": "FGD模式，int iterCount，int mode="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Runs the GrabCut algorithm.",
    "local": "运行GrabCut算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image,",
    "local": "图像，"
  },
  {
    "origin": "markers)",
    "local": "标记）"
  },
  {
    "origin": "Performs a marker-based image segmentation using the watershed algorithm.",
    "local": "使用分水岭算法执行基于标记的图像分割。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "Function Documentation",
    "local": "功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "grabCut()",
    "local": "grabCut（）"
  },
  {
    "origin": "void cv::grabCut",
    "local": "无效cv:：grabCut"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "mask",
    "local": "面具"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "rect",
    "local": "矩形"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "bgdModel",
    "local": "BGD模型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "fgdModel",
    "local": "FGD模型"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "iterCount",
    "local": "iterCount公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "int",
    "local": "内景"
  },
  {
    "origin": "mode",
    "local": "模式"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "mask, bgdModel, fgdModel",
    "local": "遮罩，BGD模型，FGD模型"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.grabCut(",
    "local": "cv.grabCut公司("
  },
  {
    "origin": "img, mask, rect, bgdModel, fgdModel, iterCount[, mode]",
    "local": "img，mask，rect，bgdModel，fgdModel，iterCount[，mode]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Runs the GrabCut algorithm.",
    "local": "运行GrabCut算法。"
  },
  {
    "origin": "The function implements the",
    "local": "函数实现"
  },
  {
    "origin": "GrabCut image segmentation algorithm",
    "local": "GrabCut图像分割算法"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "img",
    "local": "img公司"
  },
  {
    "origin": "Input 8-bit 3-channel image.",
    "local": "输入8位3通道图像。"
  },
  {
    "origin": "mask",
    "local": "面具"
  },
  {
    "origin": "Input/output 8-bit single-channel mask. The mask is initialized by the function when mode is set to",
    "local": "输入/输出8位单通道掩码。当mode设置为"
  },
  {
    "origin": ". Its elements may have one of the",
    "local": ". 它的元素可能有"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "rect",
    "local": "矩形"
  },
  {
    "origin": "ROI containing a segmented object. The pixels outside of the ROI are marked as \"obvious background\". The parameter is only used when mode==",
    "local": "包含分割对象的ROI。ROI外部的像素被标记为“明显背景”。参数仅在模式下使用=="
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "bgdModel",
    "local": "BGD模型"
  },
  {
    "origin": "Temporary array for the background model. Do not modify it while you are processing the same image.",
    "local": "背景模型的临时数组。在处理同一图像时不要修改它。"
  },
  {
    "origin": "fgdModel",
    "local": "FGD模型"
  },
  {
    "origin": "Temporary arrays for the foreground model. Do not modify it while you are processing the same image.",
    "local": "前台模型的临时数组。在处理同一图像时不要修改它。"
  },
  {
    "origin": "iterCount",
    "local": "iterCount公司"
  },
  {
    "origin": "Number of iterations the algorithm should make before returning the result. Note that the result can be refined with further calls with mode==",
    "local": "算法在返回结果之前应进行的迭代次数。请注意，可以使用mode进一步调用来细化结果=="
  },
  {
    "origin": "or mode==GC_EVAL .",
    "local": "或mode==GC\\u EVAL。"
  },
  {
    "origin": "mode",
    "local": "模式"
  },
  {
    "origin": "Operation mode that could be one of the",
    "local": "可能是"
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "watershed()",
    "local": "分水岭（）"
  },
  {
    "origin": "void cv::watershed",
    "local": "void cv:：流域"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "markers",
    "local": "标记"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "markers",
    "local": "标记"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.watershed(",
    "local": "cv.分水岭("
  },
  {
    "origin": "image, markers",
    "local": "图像，标记"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Performs a marker-based image segmentation using the watershed algorithm.",
    "local": "使用分水岭算法执行基于标记的图像分割。"
  },
  {
    "origin": "The function implements one of the variants of watershed, non-parametric marker-based segmentation algorithm, described in",
    "local": "该函数实现了分水岭的一个变体，即基于非参数标记的分割算法，如中所述"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Before passing the image to the function, you have to roughly outline the desired regions in the image markers with positive (&gt;0) indices. So, every region is represented as one or more connected components with the pixel values 1, 2, 3, and so on. Such markers can be retrieved from a binary mask using",
    "local": "在将图像传递给函数之前，必须在图像标记中大致勾勒出所需区域的正轮廓（&gt；0）指数。因此，每个区域被表示为具有像素值1、2、3等的一个或多个连接组件。这样的标记可以使用"
  },
  {
    "origin": "and",
    "local": "和"
  },
  {
    "origin": "(see the watershed.cpp demo). The markers are \"seeds\" of the future image regions. All the other pixels in markers , whose relation to the outlined regions is not known and should be defined by the algorithm, should be set to 0's. In the function output, each pixel in markers is set to a value of the \"seed\" components or to -1 at boundaries between the regions.",
    "local": "（请参见流域.cpp演示）。这些标记是未来图像区域的“种子”。标记中与轮廓区域的关系未知且应由算法定义的所有其他像素应设置为0。在函数输出中，标记中的每个像素被设置为“种子”分量的值，或者在区域之间的边界处设置为-1。"
  },
  {
    "origin": "Note",
    "local": "注意"
  },
  {
    "origin": "Any two neighbor connected components are not necessarily separated by a watershed boundary (-1's pixels); for example, they can touch each other in the initial marker image passed to the function.",
    "local": "任何两个相邻连接的组件不一定由分水岭边界（-1的像素）分开；例如，它们可以在传递给函数的初始标记图像中相互接触。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "image",
    "local": "形象"
  },
  {
    "origin": "Input 8-bit 3-channel image.",
    "local": "输入8位3通道图像。"
  },
  {
    "origin": "markers",
    "local": "标记"
  },
  {
    "origin": "Input/output 32-bit single-channel image (map) of markers. It should have the same size as image .",
    "local": "输入/输出标记的32位单通道图像（map）。它应该和图像大小相同。"
  },
  {
    "origin": "See also",
    "local": "另请参见"
  },
  {
    "origin": "Examples:",
    "local": "示例："
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:40 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:40为OpenCV生成"
  }
]