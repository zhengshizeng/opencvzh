[
  {
    "origin": "OpenCV: cv::Algorithm Class Reference",
    "local": "OpenCV:cv:：算法类参考"
  },
  {
    "origin": "OpenCV",
    "local": "打开CV"
  },
  {
    "origin": "Open Source Computer Vision",
    "local": "开源计算机视觉"
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "Protected Member Functions",
    "local": "受保护的成员函数"
  },
  {
    "origin": "List of all members",
    "local": "所有成员的列表"
  },
  {
    "origin": "cv::Algorithm Class Reference",
    "local": "cv:：算法类参考"
  },
  {
    "origin": "»",
    "local": "»"
  },
  {
    "origin": "This is a base class for all more or less complex algorithms in OpenCV.",
    "local": "这是OpenCV中所有或多或少复杂算法的基类。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Inheritance diagram for cv::Algorithm:",
    "local": "cv：：算法的继承关系图："
  },
  {
    "origin": "Public Member Functions",
    "local": "公共成员职能"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "()",
    "local": "()"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual bool",
    "local": "虚拟布尔"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "() const",
    "local": "（）常数"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename) const",
    "local": "&amp；文件名）常量"
  },
  {
    "origin": "virtual void",
    "local": "虚空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": "&gt；gt；amp；fs，常数"
  },
  {
    "origin": "&amp;name=",
    "local": "&amp；姓名="
  },
  {
    "origin": "()) const",
    "local": "（））常数"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Static Public Member Functions",
    "local": "静态公共成员函数"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;filename, const",
    "local": "&amp；文件名，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;strModel, const",
    "local": "&amp；strModel，常量"
  },
  {
    "origin": "&amp;objname=",
    "local": "&amp；对象名="
  },
  {
    "origin": "())",
    "local": "())"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": "&lt_Tp&gt；"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp;fn)",
    "local": "&amp；（fn）"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "More...",
    "local": "更多。。。"
  },
  {
    "origin": "Protected Member Functions",
    "local": "受保护的成员函数"
  },
  {
    "origin": "void",
    "local": "无效"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;fs) const",
    "local": "&amp；（f） 常数"
  },
  {
    "origin": "Detailed Description",
    "local": "详细说明"
  },
  {
    "origin": "This is a base class for all more or less complex algorithms in OpenCV.",
    "local": "这是OpenCV中所有或多或少复杂算法的基类。"
  },
  {
    "origin": "especially for classes of algorithms, for which there can be multiple implementations. The examples are stereo correspondence (for which there are algorithms like block matching, semi-global block matching, graph-cut etc.), background subtraction (which can be done using mixture-of-gaussians models, codebook-based algorithm etc.), optical flow (block matching, Lucas-Kanade, Horn-Schunck etc.).",
    "local": "特别是对于算法类，可以有多个实现。例如立体匹配（有块匹配、半全局块匹配、图切割等算法）、背景减法（可以使用高斯模型、基于码本的算法等的混合实现）、光流（块匹配、Lucas-Kanade、Horn-Schunck等）。"
  },
  {
    "origin": "Here is example of",
    "local": "下面是一个"
  },
  {
    "origin": "use in your application via",
    "local": "在应用程序中使用"
  },
  {
    "origin": "interface:",
    "local": "接口："
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": "建造商和；析构函数文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "Algorithm()",
    "local": "算法（）"
  },
  {
    "origin": "cv::Algorithm::Algorithm",
    "local": "cv：：算法：：算法"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "~Algorithm()",
    "local": "~算法（）"
  },
  {
    "origin": "virtual cv::Algorithm::~Algorithm",
    "local": "虚拟cv：：算法：：算法"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Member Function Documentation",
    "local": "成员功能文档"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "clear()",
    "local": "清除（）"
  },
  {
    "origin": "virtual void cv::Algorithm::clear",
    "local": "虚空cv：：算法：：清除"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.Algorithm.clear(",
    "local": "cv.clear算法("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Clears the algorithm state.",
    "local": "清除算法状态。"
  },
  {
    "origin": "Reimplemented in",
    "local": "重新实施"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", and",
    "local": "，和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "empty()",
    "local": "空（）"
  },
  {
    "origin": "virtual bool cv::Algorithm::empty",
    "local": "虚拟布尔cv：：算法：：空"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.Algorithm.empty(",
    "local": "cv.算法.空("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns true if the",
    "local": "如果"
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": "为空（例如，在最开始或读取失败后）。"
  },
  {
    "origin": "Reimplemented in",
    "local": "重新实施"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", and",
    "local": "，和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "getDefaultName()",
    "local": "获取默认名称"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "cv::Algorithm::getDefaultName",
    "local": "cv:：算法：：getDefaultName"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "retval",
    "local": "复述"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.Algorithm.getDefaultName(",
    "local": "cv.Algorithm.getDefaultName"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Returns the algorithm string identifier. This string is used as top level xml/yml node tag when the object is saved to a file or string.",
    "local": "返回算法字符串标识符。当对象保存到文件或字符串时，此字符串用作顶级xml/yml节点标记。"
  },
  {
    "origin": "Reimplemented in",
    "local": "重新实施"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", and",
    "local": "，和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "load()",
    "local": "加载（）"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;_Tp&gt; cv::Algorithm::load",
    "local": "&lt_Tp&gt；cv:：算法：：加载"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "objname",
    "local": "对象名"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": "从文件加载算法。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": "Name of the file to read.",
    "local": "要读取的文件的名称。"
  },
  {
    "origin": "objname",
    "local": "对象名"
  },
  {
    "origin": "The optional name of the node to read (if empty, the first top-level node will be used)",
    "local": "要读取的节点的可选名称（如果为空，将使用第一个顶级节点）"
  },
  {
    "origin": "This is static template method of",
    "local": "这是的静态模板方法"
  },
  {
    "origin": ". It's usage is following (in the case of SVM):",
    "local": ". 它的用法如下（在支持向量机的情况下）："
  },
  {
    "origin": "In order to make this method work, the derived class must overwrite",
    "local": "为了使这个方法工作，派生类必须重写"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp; fn).",
    "local": "&amp；fn）。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "loadFromString()",
    "local": "loadFromString（）"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;_Tp&gt; cv::Algorithm::loadFromString",
    "local": "&lt_Tp&gt；cv:：算法：：loadFromString"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "strModel",
    "local": "strModel公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "objname",
    "local": "对象名"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": "从字符串加载算法。"
  },
  {
    "origin": "Parameters",
    "local": "参数"
  },
  {
    "origin": "strModel",
    "local": "strModel公司"
  },
  {
    "origin": "The string variable containing the model you want to load.",
    "local": "包含要加载的模型的字符串变量。"
  },
  {
    "origin": "objname",
    "local": "对象名"
  },
  {
    "origin": "The optional name of the node to read (if empty, the first top-level node will be used)",
    "local": "要读取的节点的可选名称（如果为空，将使用第一个顶级节点）"
  },
  {
    "origin": "This is static template method of",
    "local": "这是的静态模板方法"
  },
  {
    "origin": ". It's usage is following (in the case of SVM):",
    "local": ". 它的用法如下（在支持向量机的情况下）："
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "read()",
    "local": "读取（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "virtual void cv::Algorithm::read",
    "local": "虚空cv:：算法：：读取"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "fn",
    "local": "fn公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.Algorithm.read(",
    "local": "cv.Algorithm.read读取("
  },
  {
    "origin": "fn",
    "local": "fn公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": "从文件存储器中读取算法参数。"
  },
  {
    "origin": "Reimplemented in",
    "local": "重新实施"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", and",
    "local": "，和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "read()",
    "local": "读取（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": "模板&lt；类型名称\\u Tp&gt；"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "&lt;_Tp&gt; cv::Algorithm::read",
    "local": "&lt_Tp&gt；cv:：算法：：读取"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "fn",
    "local": "fn公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "static",
    "local": "静止的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.Algorithm.read(",
    "local": "cv.Algorithm.read读取("
  },
  {
    "origin": "fn",
    "local": "fn公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": "从文件节点读取算法。"
  },
  {
    "origin": "This is static template method of",
    "local": "这是的静态模板方法"
  },
  {
    "origin": ". It's usage is following (in the case of SVM):",
    "local": ". 它的用法如下（在支持向量机的情况下）："
  },
  {
    "origin": "In order to make this method work, the derived class must overwrite",
    "local": "为了使这个方法工作，派生类必须重写"
  },
  {
    "origin": "(const",
    "local": "常数"
  },
  {
    "origin": "&amp; fn) and also have static create() method without parameters (or with all the optional parameters)",
    "local": "&amp；fn），也有没有参数（或所有可选参数）的静态create（）方法"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "save()",
    "local": "保存（）"
  },
  {
    "origin": "virtual void cv::Algorithm::save",
    "local": "虚空cv:：算法：：保存"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.Algorithm.save(",
    "local": "cv.Algorithm.save保存("
  },
  {
    "origin": "filename",
    "local": "文件名"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Saves the algorithm to a file. In order to make this method work, the derived class must implement Algorithm::write(FileStorage&amp; fs).",
    "local": "将算法保存到文件中。为了使此方法正常工作，派生类必须实现算法：：write（FileStorage&amp；fs）。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "write()",
    "local": "写入（）"
  },
  {
    "origin": "[1/2]",
    "local": "[1/2]"
  },
  {
    "origin": "virtual void cv::Algorithm::write",
    "local": "虚空cv:：算法：：写入"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "fs",
    "local": "fs公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "inline",
    "local": "内联"
  },
  {
    "origin": "virtual",
    "local": "事实上的"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.Algorithm.write(",
    "local": "cv.算法.写入("
  },
  {
    "origin": "fs[, name]",
    "local": "fs[，名称]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": "将算法参数存储在文件存储器中。"
  },
  {
    "origin": "Reimplemented in",
    "local": "重新实施"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": ", and",
    "local": "，和"
  },
  {
    "origin": ".",
    "local": "."
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "write()",
    "local": "写入（）"
  },
  {
    "origin": "[2/2]",
    "local": "[2/2]"
  },
  {
    "origin": "void cv::Algorithm::write",
    "local": "void cv：：算法：：写入"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&lt;",
    "local": "&lt；"
  },
  {
    "origin": "&gt; &amp;",
    "local": "&燃气轮机&amp；"
  },
  {
    "origin": "fs",
    "local": "fs公司"
  },
  {
    "origin": ",",
    "local": ","
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "name",
    "local": "名称"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "Python:",
    "local": "蟒蛇："
  },
  {
    "origin": "None",
    "local": "没有"
  },
  {
    "origin": "=",
    "local": "="
  },
  {
    "origin": "cv.Algorithm.write(",
    "local": "cv.算法.写入("
  },
  {
    "origin": "fs[, name]",
    "local": "fs[，名称]"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": "语言绑定的简化API这是一个重载的成员函数，为方便起见提供。它与上述函数的区别仅在于它接受的参数。"
  },
  {
    "origin": "◆",
    "local": "◆"
  },
  {
    "origin": "writeFormat()",
    "local": "writeFormat（）"
  },
  {
    "origin": "void cv::Algorithm::writeFormat",
    "local": "void cv:：算法：：writeFormat"
  },
  {
    "origin": "(",
    "local": "("
  },
  {
    "origin": "&amp;",
    "local": "&amp；"
  },
  {
    "origin": "fs",
    "local": "fs公司"
  },
  {
    "origin": ")",
    "local": ")"
  },
  {
    "origin": "const",
    "local": "常数"
  },
  {
    "origin": "protected",
    "local": "受保护的"
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": "此类的文档是从以下文件生成的："
  },
  {
    "origin": "opencv2/",
    "local": "打开CV2/"
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:42 for OpenCV by",
    "local": "于2021年4月2日星期五11:36:42为OpenCV生成"
  }
]