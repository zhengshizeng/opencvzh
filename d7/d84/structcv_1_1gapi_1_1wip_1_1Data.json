[
  {
    "origin": "OpenCV: cv::gapi::wip::Data Struct Reference",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::gapi::wip::Data Struct Reference",
    "local": ""
  },
  {
    "origin": "This aggregate type represents all types which G-API can handle (via variant).",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Inheritance diagram for cv::gapi::wip::Data:",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "(const T &amp;t)",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "(T &amp;&amp;t)",
    "local": ""
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;arg)",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;&amp;arg)",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "(const T &amp;t, const",
    "local": ""
  },
  {
    "origin": "&amp;m=",
    "local": ""
  },
  {
    "origin": "{}, typename std::enable_if&lt;",
    "local": ""
  },
  {
    "origin": "&lt; T,",
    "local": ""
  },
  {
    "origin": "&gt;::value, int &gt;::type=0)",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "(T &amp;&amp;t, const",
    "local": ""
  },
  {
    "origin": "&amp;m=",
    "local": ""
  },
  {
    "origin": "{}, typename std::enable_if&lt;",
    "local": ""
  },
  {
    "origin": "&lt; T,",
    "local": ""
  },
  {
    "origin": "&gt;::value, int &gt;::type=0)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;arg)",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;&amp;arg)",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "(const T &amp;t) -&gt; typename std::enable_if&lt;",
    "local": ""
  },
  {
    "origin": "&lt; T,",
    "local": ""
  },
  {
    "origin": "&gt;::value,",
    "local": ""
  },
  {
    "origin": "&gt;::type &amp;",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "(T &amp;&amp;t) -&gt; typename std::enable_if&lt;",
    "local": ""
  },
  {
    "origin": "&lt; T,",
    "local": ""
  },
  {
    "origin": "&gt;::value,",
    "local": ""
  },
  {
    "origin": "&gt;::type &amp;",
    "local": ""
  },
  {
    "origin": "&#160;Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "() noexcept",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;other)",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;&amp;other) noexcept",
    "local": ""
  },
  {
    "origin": "template&lt;typename T , typename = util::are_different_t&lt;variant, T&gt;&gt;",
    "local": ""
  },
  {
    "origin": "(T &amp;&amp;t)",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "() const noexcept",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;rhs)",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;&amp;rhs) noexcept",
    "local": ""
  },
  {
    "origin": "template&lt;typename T , typename = util::are_different_t&lt;variant, T&gt;&gt;",
    "local": ""
  },
  {
    "origin": "(T &amp;&amp;t) noexcept",
    "local": ""
  },
  {
    "origin": "template&lt;typename... Ts&gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt; Ts... &gt; &amp;rhs)",
    "local": ""
  },
  {
    "origin": "template&lt;typename... Ts&gt;",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&lt; Ts... &gt; &amp;&amp;rhs) noexcept",
    "local": ""
  },
  {
    "origin": "template&lt;typename T , typename &gt;",
    "local": ""
  },
  {
    "origin": "(T &amp;&amp;t) noexcept",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;rhs) noexcept",
    "local": ""
  },
  {
    "origin": "Additional Inherited Members",
    "local": ""
  },
  {
    "origin": "&#160;Public Types inherited from",
    "local": ""
  },
  {
    "origin": "= std::unordered_map&lt; std::string,",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "&#160;Static Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "&#160;Public Attributes inherited from",
    "local": ""
  },
  {
    "origin": "&#160;Protected Attributes inherited from",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "This aggregate type represents all types which G-API can handle (via variant).",
    "local": ""
  },
  {
    "origin": "It only exists to overcome C++ language limitations (where a",
    "local": ""
  },
  {
    "origin": "-defined class can't be forward-declared).",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator=()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "&amp; cv::gapi::wip::Data::operator=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "t",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "operator=()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "template&lt;typename T &gt;",
    "local": ""
  },
  {
    "origin": "&amp; cv::gapi::wip::Data::operator=",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "t",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "The documentation for this struct was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/gapi/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:47 for OpenCV by &#160;",
    "local": ""
  }
]