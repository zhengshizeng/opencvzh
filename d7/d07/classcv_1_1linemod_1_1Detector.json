[
  {
    "origin": "OpenCV: cv::linemod::Detector Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "Protected Types",
    "local": ""
  },
  {
    "origin": "Protected Member Functions",
    "local": ""
  },
  {
    "origin": "Protected Attributes",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::linemod::Detector Class Reference",
    "local": ""
  },
  {
    "origin": "Object detector using the LINE template matching algorithm with any set of modalities.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Empty constructor, initialize with",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt; &amp;",
    "local": ""
  },
  {
    "origin": ", const std::vector&lt; int &gt; &amp;T_pyramid)",
    "local": ""
  },
  {
    "origin": "Constructor.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;templates, const",
    "local": ""
  },
  {
    "origin": "&amp;class_id)",
    "local": ""
  },
  {
    "origin": "Add a new object template computed by external means.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;sources, const",
    "local": ""
  },
  {
    "origin": "&amp;class_id, const",
    "local": ""
  },
  {
    "origin": "&amp;object_mask,",
    "local": ""
  },
  {
    "origin": "*bounding_box=NULL)",
    "local": ""
  },
  {
    "origin": "Add new object template.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt; &amp;",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "Get the modalities used by this detector.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "(int pyramid_level) const",
    "local": ""
  },
  {
    "origin": "Get sampling step T at pyramid_level.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;class_id, int template_id) const",
    "local": ""
  },
  {
    "origin": "Get the template pyramid identified by template_id.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;sources, float",
    "local": ""
  },
  {
    "origin": ", std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;matches, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;class_ids=std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt;(),",
    "local": ""
  },
  {
    "origin": "quantized_images=",
    "local": ""
  },
  {
    "origin": "(), const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;masks=std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt;()) const",
    "local": ""
  },
  {
    "origin": "Detect objects by template matching.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;class_id) const",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "Get number of pyramid levels used by this detector.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;fn)",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;fn, const",
    "local": ""
  },
  {
    "origin": "&amp;class_id_override=\"\")",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;class_ids, const",
    "local": ""
  },
  {
    "origin": "&amp;format=\"templates_%s.yml.gz\")",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs) const",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;class_id,",
    "local": ""
  },
  {
    "origin": "&amp;fs) const",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;format=\"templates_%s.yml.gz\") const",
    "local": ""
  },
  {
    "origin": "Protected Types",
    "local": ""
  },
  {
    "origin": "typedef std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "typedef std::vector&lt; std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt;",
    "local": ""
  },
  {
    "origin": "typedef std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "typedef std::map&lt;",
    "local": ""
  },
  {
    "origin": ", std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt;",
    "local": ""
  },
  {
    "origin": "Protected Member Functions",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;lm_pyramid, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;sizes, float",
    "local": ""
  },
  {
    "origin": ", std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;matches, const",
    "local": ""
  },
  {
    "origin": "&amp;class_id, const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;template_pyramids) const",
    "local": ""
  },
  {
    "origin": "Protected Attributes",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt;",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "std::vector&lt; int &gt;",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Object detector using the LINE template matching algorithm with any set of modalities.",
    "local": ""
  },
  {
    "origin": "Member Typedef Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "LinearMemories",
    "local": ""
  },
  {
    "origin": "typedef std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "LinearMemoryPyramid",
    "local": ""
  },
  {
    "origin": "typedef std::vector&lt; std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt;",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "TemplatePyramid",
    "local": ""
  },
  {
    "origin": "typedef std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt;",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "TemplatesMap",
    "local": ""
  },
  {
    "origin": "typedef std::map&lt;",
    "local": ""
  },
  {
    "origin": ", std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt;",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "Detector()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "cv::linemod::Detector::Detector",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;linemod_Detector object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;linemod_Detector object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector(",
    "local": ""
  },
  {
    "origin": "modalities, T_pyramid",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Empty constructor, initialize with",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "Detector()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "cv::linemod::Detector::Detector",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt; &amp;",
    "local": ""
  },
  {
    "origin": "modalities",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt; int &gt; &amp;",
    "local": ""
  },
  {
    "origin": "T_pyramid",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;linemod_Detector object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;linemod_Detector object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector(",
    "local": ""
  },
  {
    "origin": "modalities, T_pyramid",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Constructor.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "modalities",
    "local": ""
  },
  {
    "origin": "Modalities to use (color gradients, depth normals, ...).",
    "local": ""
  },
  {
    "origin": "T_pyramid",
    "local": ""
  },
  {
    "origin": "Value of the sampling step T at each pyramid level. The number of pyramid levels is",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "addSyntheticTemplate()",
    "local": ""
  },
  {
    "origin": "int cv::linemod::Detector::addSyntheticTemplate",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "templates",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "class_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.addSyntheticTemplate(",
    "local": ""
  },
  {
    "origin": "templates, class_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Add a new object template computed by external means.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "addTemplate()",
    "local": ""
  },
  {
    "origin": "int cv::linemod::Detector::addTemplate",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "sources",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "class_id",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "object_mask",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "*",
    "local": ""
  },
  {
    "origin": "bounding_box",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval, bounding_box",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.addTemplate(",
    "local": ""
  },
  {
    "origin": "sources, class_id, object_mask",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Add new object template.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "sources",
    "local": ""
  },
  {
    "origin": "Source images, one for each modality.",
    "local": ""
  },
  {
    "origin": "class_id",
    "local": ""
  },
  {
    "origin": "Object class ID.",
    "local": ""
  },
  {
    "origin": "object_mask",
    "local": ""
  },
  {
    "origin": "Mask separating object from background.",
    "local": ""
  },
  {
    "origin": "[out]",
    "local": ""
  },
  {
    "origin": "bounding_box",
    "local": ""
  },
  {
    "origin": "Optionally return bounding box of the extracted features.",
    "local": ""
  },
  {
    "origin": "Returns",
    "local": ""
  },
  {
    "origin": "ID, or -1 if failed to extract a valid template.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "classIds()",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; cv::linemod::Detector::classIds",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.classIds(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getModalities()",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt;&amp; cv::linemod::Detector::getModalities",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.getModalities(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Get the modalities used by this detector.",
    "local": ""
  },
  {
    "origin": "You are not permitted to add/remove modalities, but you may dynamic_cast them to tweak parameters.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getT()",
    "local": ""
  },
  {
    "origin": "int cv::linemod::Detector::getT",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "pyramid_level",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.getT(",
    "local": ""
  },
  {
    "origin": "pyramid_level",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Get sampling step T at pyramid_level.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "getTemplates()",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt;&amp; cv::linemod::Detector::getTemplates",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "class_id",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "template_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.getTemplates(",
    "local": ""
  },
  {
    "origin": "class_id, template_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Get the template pyramid identified by template_id.",
    "local": ""
  },
  {
    "origin": "For example, with 2 modalities (Gradient, Normal) and two pyramid levels (L0,",
    "local": ""
  },
  {
    "origin": "), the order is (GradientL0, NormalL0, GradientL1, NormalL1).",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "match()",
    "local": ""
  },
  {
    "origin": "void cv::linemod::Detector::match",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "sources",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "threshold",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "matches",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "class_ids",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "quantized_images",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "masks",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "matches, quantized_images",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.match(",
    "local": ""
  },
  {
    "origin": "sources, threshold[, class_ids[, quantized_images[, masks]]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Detect objects by template matching.",
    "local": ""
  },
  {
    "origin": "Matches globally at the lowest pyramid level, then refines locally stepping up the pyramid.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "sources",
    "local": ""
  },
  {
    "origin": "Source images, one for each modality.",
    "local": ""
  },
  {
    "origin": "threshold",
    "local": ""
  },
  {
    "origin": "Similarity threshold, a percentage between 0 and 100.",
    "local": ""
  },
  {
    "origin": "[out]",
    "local": ""
  },
  {
    "origin": "matches",
    "local": ""
  },
  {
    "origin": "matches, sorted by similarity score.",
    "local": ""
  },
  {
    "origin": "class_ids",
    "local": ""
  },
  {
    "origin": "If non-empty, only search for the desired object classes.",
    "local": ""
  },
  {
    "origin": "[out]",
    "local": ""
  },
  {
    "origin": "quantized_images",
    "local": ""
  },
  {
    "origin": "Optionally return vector&lt;Mat&gt; of quantized images.",
    "local": ""
  },
  {
    "origin": "masks",
    "local": ""
  },
  {
    "origin": "The masks for consideration during matching. The masks should be CV_8UC1 where 255 represents a valid pixel. If non-empty, the vector must be the same size as sources. Each element must be empty or the same size as its corresponding source.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "matchClass()",
    "local": ""
  },
  {
    "origin": "void cv::linemod::Detector::matchClass",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "lm_pyramid",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "sizes",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "float",
    "local": ""
  },
  {
    "origin": "threshold",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "matches",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "class_id",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "template_pyramids",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "numClasses()",
    "local": ""
  },
  {
    "origin": "int cv::linemod::Detector::numClasses",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.numClasses(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "numTemplates()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "int cv::linemod::Detector::numTemplates",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.numTemplates(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.numTemplates(",
    "local": ""
  },
  {
    "origin": "class_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "numTemplates()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "int cv::linemod::Detector::numTemplates",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "class_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.numTemplates(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.numTemplates(",
    "local": ""
  },
  {
    "origin": "class_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "pyramidLevels()",
    "local": ""
  },
  {
    "origin": "int cv::linemod::Detector::pyramidLevels",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.pyramidLevels(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Get number of pyramid levels used by this detector.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "read()",
    "local": ""
  },
  {
    "origin": "void cv::linemod::Detector::read",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fn",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.read(",
    "local": ""
  },
  {
    "origin": "fn",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "readClass()",
    "local": ""
  },
  {
    "origin": "cv::linemod::Detector::readClass",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fn",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "class_id_override",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "readClasses()",
    "local": ""
  },
  {
    "origin": "void cv::linemod::Detector::readClasses",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;",
    "local": ""
  },
  {
    "origin": "class_ids",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "format",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.readClasses(",
    "local": ""
  },
  {
    "origin": "class_ids[, format]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "write()",
    "local": ""
  },
  {
    "origin": "void cv::linemod::Detector::write",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "writeClass()",
    "local": ""
  },
  {
    "origin": "void cv::linemod::Detector::writeClass",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "class_id",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "fs",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "writeClasses()",
    "local": ""
  },
  {
    "origin": "void cv::linemod::Detector::writeClasses",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "format",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.linemod_Detector.writeClasses(",
    "local": ""
  },
  {
    "origin": "[, format]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Member Data Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "class_templates",
    "local": ""
  },
  {
    "origin": "cv::linemod::Detector::class_templates",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "modalities",
    "local": ""
  },
  {
    "origin": "std::vector&lt;",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &gt; cv::linemod::Detector::modalities",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "pyramid_levels",
    "local": ""
  },
  {
    "origin": "int cv::linemod::Detector::pyramid_levels",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "T_at_level",
    "local": ""
  },
  {
    "origin": "std::vector&lt;int&gt; cv::linemod::Detector::T_at_level",
    "local": ""
  },
  {
    "origin": "protected",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/rgbd/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:48 for OpenCV by",
    "local": ""
  }
]