[
  {
    "origin": "OpenCV: cv::cuda::DeviceInfo Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Types",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo Class Reference",
    "local": ""
  },
  {
    "origin": "»",
    "local": ""
  },
  {
    "origin": "»",
    "local": ""
  },
  {
    "origin": "Class providing functionality for querying the specified GPU properties.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Types",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "creates",
    "local": ""
  },
  {
    "origin": "object for the current GPU",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "(int device_id)",
    "local": ""
  },
  {
    "origin": "The constructors.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "number of asynchronous engines",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "device can map host memory with cudaHostAlloc/cudaHostGetDevicePointer",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "clock frequency in kilohertz",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "compute mode",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "device can possibly execute multiple kernels concurrently",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "device has ECC support enabled",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "device is integrated as opposed to discrete",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "Checks the CUDA module and device compatibility.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "specified whether there is a run time limit on kernels",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "size of",
    "local": ""
  },
  {
    "origin": "cache in bytes",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "major compute capability",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum size of each dimension of a grid",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 1D surface size",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 1D layered surface dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 2D surface dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 2D layered surface dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 3D surface dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum Cubemap surface dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum Cubemap layered surface dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 1D texture size",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 1D layered texture dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum size for 1D textures bound to linear memory",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 1D mipmapped texture size",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 2D texture dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 2D texture dimensions if texture gather operations have to be performed",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 2D layered texture dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum dimensions (width, height, pitch) for 2D textures bound to pitched memory",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 2D mipmapped texture dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum 3D texture dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum Cubemap texture dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum Cubemap layered texture dimensions",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum size of each dimension of a block",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum number of threads per block",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum resident threads per multiprocessor",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "global memory bus width in bits",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "peak memory clock frequency in kilohertz",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "maximum pitch in bytes allowed by memory copies",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "minor compute capability",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "number of multiprocessors on device",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "const char *",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "ASCII string identifying device.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "PCI bus ID of the device.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "PCI device ID of the device.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "PCI domain ID of the device.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(size_t &amp;",
    "local": ""
  },
  {
    "origin": ", size_t &amp;",
    "local": ""
  },
  {
    "origin": ") const",
    "local": ""
  },
  {
    "origin": "gets free and total device memory",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "32-bit registers available per block",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "shared memory available per block in bytes",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "feature_set) const",
    "local": ""
  },
  {
    "origin": "Provides information on CUDA feature support.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "alignment requirements for surfaces",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "true if device is a Tesla device using TCC driver, false otherwise",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "alignment requirement for textures",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "pitch alignment requirement for texture references bound to pitched memory",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "constant memory available on device in bytes",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "global memory available on device in bytes",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "device shares a unified address space with the host",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "warp size in threads",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Class providing functionality for querying the specified GPU properties.",
    "local": ""
  },
  {
    "origin": "Member Enumeration Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "ComputeMode",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "ComputeModeDefault",
    "local": ""
  },
  {
    "origin": "default compute mode (Multiple threads can use cudaSetDevice with this device)",
    "local": ""
  },
  {
    "origin": "ComputeModeExclusive",
    "local": ""
  },
  {
    "origin": "compute-exclusive-thread mode (Only one thread in one process will be able to use cudaSetDevice with this device)",
    "local": ""
  },
  {
    "origin": "ComputeModeProhibited",
    "local": ""
  },
  {
    "origin": "compute-prohibited mode (No threads can use cudaSetDevice with this device)",
    "local": ""
  },
  {
    "origin": "ComputeModeExclusiveProcess",
    "local": ""
  },
  {
    "origin": "compute-exclusive-process mode (Many threads in one process will be able to use cudaSetDevice with this device)",
    "local": ""
  },
  {
    "origin": "Constructor &amp; Destructor Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "DeviceInfo()",
    "local": ""
  },
  {
    "origin": "[1/2]",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::DeviceInfo",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;cuda_DeviceInfo object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;cuda_DeviceInfo object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo(",
    "local": ""
  },
  {
    "origin": "device_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "creates",
    "local": ""
  },
  {
    "origin": "object for the current GPU",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "DeviceInfo()",
    "local": ""
  },
  {
    "origin": "[2/2]",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::DeviceInfo",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "device_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "&lt;cuda_DeviceInfo object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&lt;cuda_DeviceInfo object&gt;",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo(",
    "local": ""
  },
  {
    "origin": "device_id",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "The constructors.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "device_id",
    "local": ""
  },
  {
    "origin": "Constructs the",
    "local": ""
  },
  {
    "origin": "object for the specified device. If device_id parameter is missed, it constructs an object for the current device.",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "asyncEngineCount()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::asyncEngineCount",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.asyncEngineCount(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "number of asynchronous engines",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "canMapHostMemory()",
    "local": ""
  },
  {
    "origin": "bool cv::cuda::DeviceInfo::canMapHostMemory",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.canMapHostMemory(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "device can map host memory with cudaHostAlloc/cudaHostGetDevicePointer",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "clockRate()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::clockRate",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.clockRate(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "clock frequency in kilohertz",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "computeMode()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::computeMode",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.computeMode(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "compute mode",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "concurrentKernels()",
    "local": ""
  },
  {
    "origin": "bool cv::cuda::DeviceInfo::concurrentKernels",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.concurrentKernels(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "device can possibly execute multiple kernels concurrently",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "deviceID()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::deviceID",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.deviceID(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "ECCEnabled()",
    "local": ""
  },
  {
    "origin": "bool cv::cuda::DeviceInfo::ECCEnabled",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.ECCEnabled(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "device has ECC support enabled",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "freeMemory()",
    "local": ""
  },
  {
    "origin": "size_t cv::cuda::DeviceInfo::freeMemory",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.freeMemory(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "integrated()",
    "local": ""
  },
  {
    "origin": "bool cv::cuda::DeviceInfo::integrated",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.integrated(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "device is integrated as opposed to discrete",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "isCompatible()",
    "local": ""
  },
  {
    "origin": "bool cv::cuda::DeviceInfo::isCompatible",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.isCompatible(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Checks the CUDA module and device compatibility.",
    "local": ""
  },
  {
    "origin": "This function returns true if the CUDA module can be run on the specified device. Otherwise, it returns false .",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "kernelExecTimeoutEnabled()",
    "local": ""
  },
  {
    "origin": "bool cv::cuda::DeviceInfo::kernelExecTimeoutEnabled",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.kernelExecTimeoutEnabled(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "specified whether there is a run time limit on kernels",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "l2CacheSize()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::l2CacheSize",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.l2CacheSize(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "size of",
    "local": ""
  },
  {
    "origin": "cache in bytes",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "majorVersion()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::majorVersion",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.majorVersion(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "major compute capability",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxGridSize()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxGridSize",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxGridSize(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum size of each dimension of a grid",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxSurface1D()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::maxSurface1D",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxSurface1D(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 1D surface size",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxSurface1DLayered()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxSurface1DLayered",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxSurface1DLayered(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 1D layered surface dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxSurface2D()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxSurface2D",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxSurface2D(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 2D surface dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxSurface2DLayered()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxSurface2DLayered",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxSurface2DLayered(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 2D layered surface dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxSurface3D()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxSurface3D",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxSurface3D(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 3D surface dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxSurfaceCubemap()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::maxSurfaceCubemap",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxSurfaceCubemap(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum Cubemap surface dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxSurfaceCubemapLayered()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxSurfaceCubemapLayered",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxSurfaceCubemapLayered(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum Cubemap layered surface dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture1D()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::maxTexture1D",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture1D(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 1D texture size",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture1DLayered()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxTexture1DLayered",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture1DLayered(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 1D layered texture dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture1DLinear()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::maxTexture1DLinear",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture1DLinear(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum size for 1D textures bound to linear memory",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture1DMipmap()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::maxTexture1DMipmap",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture1DMipmap(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 1D mipmapped texture size",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture2D()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxTexture2D",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture2D(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 2D texture dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture2DGather()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxTexture2DGather",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture2DGather(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 2D texture dimensions if texture gather operations have to be performed",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture2DLayered()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxTexture2DLayered",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture2DLayered(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 2D layered texture dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture2DLinear()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxTexture2DLinear",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture2DLinear(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum dimensions (width, height, pitch) for 2D textures bound to pitched memory",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture2DMipmap()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxTexture2DMipmap",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture2DMipmap(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 2D mipmapped texture dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTexture3D()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxTexture3D",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTexture3D(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum 3D texture dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTextureCubemap()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::maxTextureCubemap",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTextureCubemap(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum Cubemap texture dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxTextureCubemapLayered()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxTextureCubemapLayered",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxTextureCubemapLayered(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum Cubemap layered texture dimensions",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxThreadsDim()",
    "local": ""
  },
  {
    "origin": "cv::cuda::DeviceInfo::maxThreadsDim",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxThreadsDim(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum size of each dimension of a block",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxThreadsPerBlock()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::maxThreadsPerBlock",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxThreadsPerBlock(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum number of threads per block",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "maxThreadsPerMultiProcessor()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::maxThreadsPerMultiProcessor",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.maxThreadsPerMultiProcessor(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum resident threads per multiprocessor",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "memoryBusWidth()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::memoryBusWidth",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.memoryBusWidth(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "global memory bus width in bits",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "memoryClockRate()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::memoryClockRate",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.memoryClockRate(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "peak memory clock frequency in kilohertz",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "memPitch()",
    "local": ""
  },
  {
    "origin": "size_t cv::cuda::DeviceInfo::memPitch",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.memPitch(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "maximum pitch in bytes allowed by memory copies",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "minorVersion()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::minorVersion",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.minorVersion(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "minor compute capability",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "multiProcessorCount()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::multiProcessorCount",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.multiProcessorCount(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "number of multiprocessors on device",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "name()",
    "local": ""
  },
  {
    "origin": "const char* cv::cuda::DeviceInfo::name",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "ASCII string identifying device.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "pciBusID()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::pciBusID",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.pciBusID(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "PCI bus ID of the device.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "pciDeviceID()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::pciDeviceID",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.pciDeviceID(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "PCI device ID of the device.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "pciDomainID()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::pciDomainID",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.pciDomainID(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "PCI domain ID of the device.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "queryMemory()",
    "local": ""
  },
  {
    "origin": "void cv::cuda::DeviceInfo::queryMemory",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "size_t &amp;",
    "local": ""
  },
  {
    "origin": "totalMemory",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "size_t &amp;",
    "local": ""
  },
  {
    "origin": "freeMemory",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.queryMemory(",
    "local": ""
  },
  {
    "origin": "totalMemory, freeMemory",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "gets free and total device memory",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "regsPerBlock()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::regsPerBlock",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.regsPerBlock(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "32-bit registers available per block",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "sharedMemPerBlock()",
    "local": ""
  },
  {
    "origin": "size_t cv::cuda::DeviceInfo::sharedMemPerBlock",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.sharedMemPerBlock(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "shared memory available per block in bytes",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "supports()",
    "local": ""
  },
  {
    "origin": "bool cv::cuda::DeviceInfo::supports",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "feature_set",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Provides information on CUDA feature support.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "feature_set",
    "local": ""
  },
  {
    "origin": "Features to be checked. See",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "This function returns true if the device has the specified CUDA feature. Otherwise, it returns false",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "surfaceAlignment()",
    "local": ""
  },
  {
    "origin": "size_t cv::cuda::DeviceInfo::surfaceAlignment",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.surfaceAlignment(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "alignment requirements for surfaces",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "tccDriver()",
    "local": ""
  },
  {
    "origin": "bool cv::cuda::DeviceInfo::tccDriver",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.tccDriver(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "true if device is a Tesla device using TCC driver, false otherwise",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "textureAlignment()",
    "local": ""
  },
  {
    "origin": "size_t cv::cuda::DeviceInfo::textureAlignment",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.textureAlignment(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "alignment requirement for textures",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "texturePitchAlignment()",
    "local": ""
  },
  {
    "origin": "size_t cv::cuda::DeviceInfo::texturePitchAlignment",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.texturePitchAlignment(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pitch alignment requirement for texture references bound to pitched memory",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "totalConstMem()",
    "local": ""
  },
  {
    "origin": "size_t cv::cuda::DeviceInfo::totalConstMem",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.totalConstMem(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "constant memory available on device in bytes",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "totalGlobalMem()",
    "local": ""
  },
  {
    "origin": "size_t cv::cuda::DeviceInfo::totalGlobalMem",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.totalGlobalMem(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "global memory available on device in bytes",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "totalMemory()",
    "local": ""
  },
  {
    "origin": "size_t cv::cuda::DeviceInfo::totalMemory",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.totalMemory(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "unifiedAddressing()",
    "local": ""
  },
  {
    "origin": "bool cv::cuda::DeviceInfo::unifiedAddressing",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.unifiedAddressing(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "device shares a unified address space with the host",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "warpSize()",
    "local": ""
  },
  {
    "origin": "int cv::cuda::DeviceInfo::warpSize",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.cuda_DeviceInfo.warpSize(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "warp size in threads",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/core/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:44 for OpenCV by",
    "local": ""
  }
]