[
  {
    "origin": "OpenCV: Meanshift and Camshift",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Meanshift and Camshift",
    "local": ""
  },
  {
    "origin": "Prev Tutorial:",
    "local": ""
  },
  {
    "origin": "Next Tutorial:",
    "local": ""
  },
  {
    "origin": "Goal",
    "local": ""
  },
  {
    "origin": "In this chapter,",
    "local": ""
  },
  {
    "origin": "We will learn about the Meanshift and Camshift algorithms to track objects in videos.",
    "local": ""
  },
  {
    "origin": "Meanshift",
    "local": ""
  },
  {
    "origin": "The intuition behind the meanshift is simple. Consider you have a set of points. (It can be a pixel distribution like histogram backprojection). You are given a small window (may be a circle) and you have to move that window to the area of maximum pixel density (or maximum number of points). It is illustrated in the simple image given below:",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "The initial window is shown in blue circle with the name \"C1\". Its original center is marked in blue rectangle, named \"C1_o\". But if you find the centroid of the points inside that window, you will get the point \"C1_r\" (marked in small blue circle) which is the real centroid of the window. Surely they don't match. So move your window such that the circle of the new window matches with the previous centroid. Again find the new centroid. Most probably, it won't match. So move it again, and continue the iterations such that the center of window and its centroid falls on the same location (or within a small desired error). So finally what you obtain is a window with maximum pixel distribution. It is marked with a green circle, named \"C2\". As you can see in the image, it has maximum number of points. The whole process is demonstrated on a static image below:",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "So we normally pass the histogram backprojected image and initial target location. When the object moves, obviously the movement is reflected in the histogram backprojected image. As a result, the meanshift algorithm moves our window to the new location with maximum density.",
    "local": ""
  },
  {
    "origin": "Meanshift in OpenCV",
    "local": ""
  },
  {
    "origin": "To use meanshift in OpenCV, first we need to setup the target, find its histogram so that we can backproject the target on each frame for calculation of meanshift. We also need to provide an initial location of window. For histogram, only Hue is considered here. Also, to avoid false values due to low light, low light values are discarded using",
    "local": ""
  },
  {
    "origin": "function.",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Downloadable code",
    "local": ""
  },
  {
    "origin": ": Click",
    "local": ""
  },
  {
    "origin": "here",
    "local": ""
  },
  {
    "origin": "Code at glance:",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "Downloadable code",
    "local": ""
  },
  {
    "origin": ": Click",
    "local": ""
  },
  {
    "origin": "here",
    "local": ""
  },
  {
    "origin": "Code at glance:",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Downloadable code",
    "local": ""
  },
  {
    "origin": ": Click",
    "local": ""
  },
  {
    "origin": "here",
    "local": ""
  },
  {
    "origin": "Code at glance:",
    "local": ""
  },
  {
    "origin": "Three frames in a video I used is given below:",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "Camshift",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "It applies meanshift first. Once meanshift converges, it updates the size of the window as, \\(s = 2 \\times \\sqrt{\\frac{M_{00}}{256}}\\). It also calculates the orientation of the best fitting ellipse to it. Again it applies the meanshift with new scaled search window and previous window location. The process continues until the required accuracy is met.",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "Camshift in OpenCV",
    "local": ""
  },
  {
    "origin": "It is similar to meanshift, but returns a rotated rectangle (that is our result) and box parameters (used to be passed as search window in next iteration). See the code below:",
    "local": ""
  },
  {
    "origin": "C++",
    "local": ""
  },
  {
    "origin": "Downloadable code",
    "local": ""
  },
  {
    "origin": ": Click",
    "local": ""
  },
  {
    "origin": "here",
    "local": ""
  },
  {
    "origin": "Code at glance:",
    "local": ""
  },
  {
    "origin": "Python",
    "local": ""
  },
  {
    "origin": "Downloadable code",
    "local": ""
  },
  {
    "origin": ": Click",
    "local": ""
  },
  {
    "origin": "here",
    "local": ""
  },
  {
    "origin": "Code at glance:",
    "local": ""
  },
  {
    "origin": "Java",
    "local": ""
  },
  {
    "origin": "Downloadable code",
    "local": ""
  },
  {
    "origin": ": Click",
    "local": ""
  },
  {
    "origin": "here",
    "local": ""
  },
  {
    "origin": "Code at glance:",
    "local": ""
  },
  {
    "origin": "Three frames of the result is shown below:",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "Additional Resources",
    "local": ""
  },
  {
    "origin": "French Wikipedia page on",
    "local": ""
  },
  {
    "origin": "Camshift",
    "local": ""
  },
  {
    "origin": ". (The two animations are taken from there)",
    "local": ""
  },
  {
    "origin": "Bradski, G.R., \"Real time face and object tracking as a component of a perceptual user interface,\" Applications of Computer Vision, 1998. WACV '98. Proceedings., Fourth IEEE Workshop on , vol., no., pp.214,219, 19-21 Oct 1998",
    "local": ""
  },
  {
    "origin": "Exercises",
    "local": ""
  },
  {
    "origin": "OpenCV comes with a Python",
    "local": ""
  },
  {
    "origin": "sample",
    "local": ""
  },
  {
    "origin": "for an interactive demo of camshift. Use it, hack it, understand it.",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:37 for OpenCV by &#160;",
    "local": ""
  }
]