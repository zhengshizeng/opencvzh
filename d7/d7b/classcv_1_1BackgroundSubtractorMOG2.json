[
  {
    "origin": "OpenCV: cv::BackgroundSubtractorMOG2 Class Reference",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "List of all members",
    "local": ""
  },
  {
    "origin": "cv::BackgroundSubtractorMOG2 Class Reference",
    "local": ""
  },
  {
    "origin": "abstract",
    "local": ""
  },
  {
    "origin": "Â»",
    "local": ""
  },
  {
    "origin": "Gaussian Mixture-based Background/Foreground Segmentation",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Inheritance diagram for cv::BackgroundSubtractorMOG2:",
    "local": ""
  },
  {
    "origin": "Public Member Functions",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "image,",
    "local": ""
  },
  {
    "origin": "fgmask, double learningRate=-1)",
    "local": ""
  },
  {
    "origin": "Computes a foreground mask.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual double",
    "local": ""
  },
  {
    "origin": "Returns the \"background ratio\" parameter of the algorithm.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual double",
    "local": ""
  },
  {
    "origin": "Returns the complexity reduction threshold.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual bool",
    "local": ""
  },
  {
    "origin": "Returns the shadow detection flag.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual int",
    "local": ""
  },
  {
    "origin": "Returns the number of last frames that affect the background model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual int",
    "local": ""
  },
  {
    "origin": "Returns the number of gaussian components in the background model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual double",
    "local": ""
  },
  {
    "origin": "Returns the shadow threshold.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual int",
    "local": ""
  },
  {
    "origin": "Returns the shadow value.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual double",
    "local": ""
  },
  {
    "origin": "Returns the initial variance of each gaussian component.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual double",
    "local": ""
  },
  {
    "origin": "virtual double",
    "local": ""
  },
  {
    "origin": "virtual double",
    "local": ""
  },
  {
    "origin": "Returns the variance threshold for the pixel-model match.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual double",
    "local": ""
  },
  {
    "origin": "Returns the variance threshold for the pixel-model match used for new mixture component generation.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Sets the \"background ratio\" parameter of the algorithm.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Sets the complexity reduction threshold.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Enables or disables shadow detection.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Sets the number of last frames that affect the background model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Sets the number of gaussian components in the background model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(double",
    "local": ""
  },
  {
    "origin": "Sets the shadow threshold.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Sets the shadow value.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Sets the initial variance of each gaussian component.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Sets the variance threshold for the pixel-model match.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "Sets the variance threshold for the pixel-model match used for new mixture component generation.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "Computes a background image.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Clears the algorithm state.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual bool",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "Returns true if the",
    "local": ""
  },
  {
    "origin": "is empty (e.g. in the very beginning or after unsuccessful read.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;fn)",
    "local": ""
  },
  {
    "origin": "Reads algorithm parameters from a file storage.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;filename) const",
    "local": ""
  },
  {
    "origin": "virtual void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs) const",
    "local": ""
  },
  {
    "origin": "Stores algorithm parameters in a file storage.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&lt;",
    "local": ""
  },
  {
    "origin": "&gt; &amp;fs, const",
    "local": ""
  },
  {
    "origin": "&amp;name=",
    "local": ""
  },
  {
    "origin": "()) const",
    "local": ""
  },
  {
    "origin": "simplified API for language bindings This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Additional Inherited Members",
    "local": ""
  },
  {
    "origin": "Static Public Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;filename, const",
    "local": ""
  },
  {
    "origin": "&amp;objname=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Loads algorithm from the file.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;strModel, const",
    "local": ""
  },
  {
    "origin": "&amp;objname=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "Loads algorithm from a String.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;typename _Tp &gt;",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "&lt; _Tp &gt;",
    "local": ""
  },
  {
    "origin": "(const",
    "local": ""
  },
  {
    "origin": "&amp;fn)",
    "local": ""
  },
  {
    "origin": "Reads algorithm from the file node.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Protected Member Functions inherited from",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;fs) const",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Gaussian Mixture-based Background/Foreground Segmentation",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "The class implements the Gaussian mixture model background subtraction described in",
    "local": ""
  },
  {
    "origin": "and",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Member Function Documentation",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "apply()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::apply",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "fgmask",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "learningRate",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "fgmask",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.apply(",
    "local": ""
  },
  {
    "origin": "image[, fgmask[, learningRate]]",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Computes a foreground mask.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": "Next video frame. Floating point frame will be used without scaling and should be in range \\([0,255]\\).",
    "local": ""
  },
  {
    "origin": "fgmask",
    "local": ""
  },
  {
    "origin": "The output foreground mask as an 8-bit binary image.",
    "local": ""
  },
  {
    "origin": "learningRate",
    "local": ""
  },
  {
    "origin": "The value between 0 and 1 that indicates how fast the background model is learnt. Negative parameter value makes the algorithm to use some automatically chosen learning rate. 0 means that the background model is not updated at all, 1 means that the background model is completely reinitialized from the last frame.",
    "local": ""
  },
  {
    "origin": "Implements",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getBackgroundRatio()",
    "local": ""
  },
  {
    "origin": "virtual double cv::BackgroundSubtractorMOG2::getBackgroundRatio",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getBackgroundRatio(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the \"background ratio\" parameter of the algorithm.",
    "local": ""
  },
  {
    "origin": "If a foreground pixel keeps semi-constant value for about backgroundRatio*history frames, it's considered background and added to the model as a center of a new component. It corresponds to TB parameter in the paper.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getComplexityReductionThreshold()",
    "local": ""
  },
  {
    "origin": "virtual double cv::BackgroundSubtractorMOG2::getComplexityReductionThreshold",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getComplexityReductionThreshold(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the complexity reduction threshold.",
    "local": ""
  },
  {
    "origin": "This parameter defines the number of samples needed to accept to prove the component exists. CT=0.05 is a default value for all the samples. By setting CT=0 you get an algorithm very similar to the standard Stauffer&amp;Grimson algorithm.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getDetectShadows()",
    "local": ""
  },
  {
    "origin": "virtual bool cv::BackgroundSubtractorMOG2::getDetectShadows",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getDetectShadows(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the shadow detection flag.",
    "local": ""
  },
  {
    "origin": "If true, the algorithm detects shadows and marks them. See createBackgroundSubtractorMOG2 for details.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getHistory()",
    "local": ""
  },
  {
    "origin": "virtual int cv::BackgroundSubtractorMOG2::getHistory",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getHistory(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the number of last frames that affect the background model.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getNMixtures()",
    "local": ""
  },
  {
    "origin": "virtual int cv::BackgroundSubtractorMOG2::getNMixtures",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getNMixtures(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the number of gaussian components in the background model.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getShadowThreshold()",
    "local": ""
  },
  {
    "origin": "virtual double cv::BackgroundSubtractorMOG2::getShadowThreshold",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getShadowThreshold(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the shadow threshold.",
    "local": ""
  },
  {
    "origin": "A shadow is detected if pixel is a darker version of the background. The shadow threshold (Tau in the paper) is a threshold defining how much darker the shadow can be. Tau= 0.5 means that if a pixel is more than twice darker then it is not shadow. See Prati, Mikic, Trivedi and Cucchiara, Detecting Moving Shadows...*, IEEE PAMI,2003.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getShadowValue()",
    "local": ""
  },
  {
    "origin": "virtual int cv::BackgroundSubtractorMOG2::getShadowValue",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getShadowValue(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the shadow value.",
    "local": ""
  },
  {
    "origin": "Shadow value is the value used to mark shadows in the foreground mask. Default value is 127. Value 0 in the mask always means background, 255 means foreground.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getVarInit()",
    "local": ""
  },
  {
    "origin": "virtual double cv::BackgroundSubtractorMOG2::getVarInit",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getVarInit(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the initial variance of each gaussian component.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getVarMax()",
    "local": ""
  },
  {
    "origin": "virtual double cv::BackgroundSubtractorMOG2::getVarMax",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getVarMax(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getVarMin()",
    "local": ""
  },
  {
    "origin": "virtual double cv::BackgroundSubtractorMOG2::getVarMin",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getVarMin(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getVarThreshold()",
    "local": ""
  },
  {
    "origin": "virtual double cv::BackgroundSubtractorMOG2::getVarThreshold",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getVarThreshold(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the variance threshold for the pixel-model match.",
    "local": ""
  },
  {
    "origin": "The main threshold on the squared Mahalanobis distance to decide if the sample is well described by the background model or not. Related to Cthr from the paper.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "getVarThresholdGen()",
    "local": ""
  },
  {
    "origin": "virtual double cv::BackgroundSubtractorMOG2::getVarThresholdGen",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "const",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "retval",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.getVarThresholdGen(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Returns the variance threshold for the pixel-model match used for new mixture component generation.",
    "local": ""
  },
  {
    "origin": "Threshold for the squared Mahalanobis distance that helps decide when a sample is close to the existing components (corresponds to Tg in the paper). If a pixel is not close to any component, it is considered foreground or added as a new component. 3 sigma =&gt; Tg=3*3=9 is default. A smaller Tg value generates more components. A higher Tg value may result in a small number of components but they can grow too large.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setBackgroundRatio()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setBackgroundRatio",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "ratio",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setBackgroundRatio(",
    "local": ""
  },
  {
    "origin": "ratio",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the \"background ratio\" parameter of the algorithm.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setComplexityReductionThreshold()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setComplexityReductionThreshold",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "ct",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setComplexityReductionThreshold(",
    "local": ""
  },
  {
    "origin": "ct",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the complexity reduction threshold.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setDetectShadows()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setDetectShadows",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "bool",
    "local": ""
  },
  {
    "origin": "detectShadows",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setDetectShadows(",
    "local": ""
  },
  {
    "origin": "detectShadows",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Enables or disables shadow detection.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setHistory()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setHistory",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "history",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setHistory(",
    "local": ""
  },
  {
    "origin": "history",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the number of last frames that affect the background model.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setNMixtures()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setNMixtures",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "nmixtures",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setNMixtures(",
    "local": ""
  },
  {
    "origin": "nmixtures",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the number of gaussian components in the background model.",
    "local": ""
  },
  {
    "origin": "The model needs to be reinitalized to reserve memory.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setShadowThreshold()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setShadowThreshold",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "threshold",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setShadowThreshold(",
    "local": ""
  },
  {
    "origin": "threshold",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the shadow threshold.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setShadowValue()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setShadowValue",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setShadowValue(",
    "local": ""
  },
  {
    "origin": "value",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the shadow value.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setVarInit()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setVarInit",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "varInit",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setVarInit(",
    "local": ""
  },
  {
    "origin": "varInit",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the initial variance of each gaussian component.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setVarMax()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setVarMax",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "varMax",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setVarMax(",
    "local": ""
  },
  {
    "origin": "varMax",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setVarMin()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setVarMin",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "varMin",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setVarMin(",
    "local": ""
  },
  {
    "origin": "varMin",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setVarThreshold()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setVarThreshold",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "varThreshold",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setVarThreshold(",
    "local": ""
  },
  {
    "origin": "varThreshold",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the variance threshold for the pixel-model match.",
    "local": ""
  },
  {
    "origin": "â",
    "local": ""
  },
  {
    "origin": "setVarThresholdGen()",
    "local": ""
  },
  {
    "origin": "virtual void cv::BackgroundSubtractorMOG2::setVarThresholdGen",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "varThresholdGen",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "pure virtual",
    "local": ""
  },
  {
    "origin": "Python:",
    "local": ""
  },
  {
    "origin": "None",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": "cv.BackgroundSubtractorMOG2.setVarThresholdGen(",
    "local": ""
  },
  {
    "origin": "varThresholdGen",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Sets the variance threshold for the pixel-model match used for new mixture component generation.",
    "local": ""
  },
  {
    "origin": "The documentation for this class was generated from the following file:",
    "local": ""
  },
  {
    "origin": "opencv2/video/",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:42 for OpenCV by",
    "local": ""
  }
]