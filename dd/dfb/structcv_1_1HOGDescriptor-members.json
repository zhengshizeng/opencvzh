[
  {
    "origin": "OpenCV: Member List",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "cv::HOGDescriptor Member List",
    "local": ""
  },
  {
    "origin": "This is the complete list of members for",
    "local": ""
  },
  {
    "origin": ", including all inherited members.",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(InputArray img, std::vector&lt; float &gt; &amp;descriptors, Size winStride=Size(), Size padding=Size(), const std::vector&lt; Point &gt; &amp;locations=std::vector&lt; Point &gt;()) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(InputArray img, InputOutputArray grad, InputOutputArray angleOfs, Size paddingTL=Size(), Size paddingBR=Size()) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(HOGDescriptor &amp;c) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "enum name",
    "local": ""
  },
  {
    "origin": "(InputArray img, std::vector&lt; Point &gt; &amp;foundLocations, std::vector&lt; double &gt; &amp;weights, double hitThreshold=0, Size winStride=Size(), Size padding=Size(), const std::vector&lt; Point &gt; &amp;searchLocations=std::vector&lt; Point &gt;()) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(InputArray img, std::vector&lt; Point &gt; &amp;foundLocations, double hitThreshold=0, Size winStride=Size(), Size padding=Size(), const std::vector&lt; Point &gt; &amp;searchLocations=std::vector&lt; Point &gt;()) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(InputArray img, std::vector&lt; Rect &gt; &amp;foundLocations, std::vector&lt; double &gt; &amp;foundWeights, double hitThreshold=0, Size winStride=Size(), Size padding=Size(), double scale=1.05, double finalThreshold=2.0, bool useMeanshiftGrouping=false) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(InputArray img, std::vector&lt; Rect &gt; &amp;foundLocations, double hitThreshold=0, Size winStride=Size(), Size padding=Size(), double scale=1.05, double finalThreshold=2.0, bool useMeanshiftGrouping=false) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(InputArray img, std::vector&lt; cv::Rect &gt; &amp;foundLocations, std::vector&lt; DetectionROI &gt; &amp;locations, double hitThreshold=0, int groupThreshold=0) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(InputArray img, const std::vector&lt; cv::Point &gt; &amp;locations, std::vector&lt; cv::Point &gt; &amp;foundLocations, std::vector&lt; double &gt; &amp;confidences, double hitThreshold=0, cv::Size winStride=Size(), cv::Size padding=Size()) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(std::vector&lt; cv::Rect &gt; &amp;rectList, std::vector&lt; double &gt; &amp;weights, int groupThreshold, double eps) const",
    "local": ""
  },
  {
    "origin": "enum name",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "(Size _winSize, Size _blockSize, Size _blockStride, Size _cellSize, int _nbins, int _derivAperture=1, double _winSigma=-1, HOGDescriptor::HistogramNormType _histogramNormType=HOGDescriptor::L2Hys, double _L2HysThreshold=0.2, bool _gammaCorrection=false, int _nlevels=HOGDescriptor::DEFAULT_NLEVELS, bool _signedGradient=false)",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "(const String &amp;filename)",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "(const HOGDescriptor &amp;d)",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "(const String &amp;filename, const String &amp;objname=String())",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(FileNode &amp;fn)",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(const String &amp;filename, const String &amp;objname=String()) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(InputArray svmdetector)",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "(FileStorage &amp;fs, const String &amp;objname) const",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "inline",
    "local": ""
  },
  {
    "origin": "virtual",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by &#160;",
    "local": ""
  }
]