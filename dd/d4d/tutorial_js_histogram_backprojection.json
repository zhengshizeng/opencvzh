[
  {
    "origin": "OpenCV: Histogram - 3 : Histogram Backprojection",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Histogram - 3 : Histogram Backprojection",
    "local": ""
  },
  {
    "origin": "Goal",
    "local": ""
  },
  {
    "origin": "We will learn about histogram backprojection.",
    "local": ""
  },
  {
    "origin": "Theory",
    "local": ""
  },
  {
    "origin": "It was proposed by",
    "local": ""
  },
  {
    "origin": "Michael J. Swain , Dana H. Ballard",
    "local": ""
  },
  {
    "origin": "in their paper",
    "local": ""
  },
  {
    "origin": "Indexing via color histograms",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "What is it actually in simple words?",
    "local": ""
  },
  {
    "origin": "It is used for image segmentation or finding objects of interest in an image. In simple words, it creates an image of the same size (but single channel) as that of our input image, where each pixel corresponds to the probability of that pixel belonging to our object. In more simpler worlds, the output image will have our object of interest in more white compared to remaining part. Well, that is an intuitive explanation. (I can't make it more simpler). Histogram Backprojection is used with camshift algorithm etc.",
    "local": ""
  },
  {
    "origin": "How do we do it ?",
    "local": ""
  },
  {
    "origin": "We create a histogram of an image containing our object of interest (in our case, the ground, leaving player and other things). The object should fill the image as far as possible for better results. And a color histogram is preferred over grayscale histogram, because color of the object is a better way to define the object than its grayscale intensity. We then \"back-project\" this histogram over our test image where we need to find the object, ie in other words, we calculate the probability of every pixel belonging to the ground and show it. The resulting output on proper thresholding gives us the ground alone.",
    "local": ""
  },
  {
    "origin": "Backprojection in OpenCV",
    "local": ""
  },
  {
    "origin": "We use the functions:",
    "local": ""
  },
  {
    "origin": "(images, channels, hist, dst, ranges, scale)",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "images",
    "local": ""
  },
  {
    "origin": "source arrays. They all should have the same depth, cv.CV_8U, cv.CV_16U or cv.CV_32F , and the same size. Each of them can have an arbitrary number of channels.",
    "local": ""
  },
  {
    "origin": "channels",
    "local": ""
  },
  {
    "origin": "the list of channels used to compute the back projection. The number of channels must match the histogram dimensionality.",
    "local": ""
  },
  {
    "origin": "hist",
    "local": ""
  },
  {
    "origin": "input histogram that can be dense or sparse.",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "destination back projection array that is a single-channel array of the same size and depth as images[0].",
    "local": ""
  },
  {
    "origin": "ranges",
    "local": ""
  },
  {
    "origin": "array of arrays of the histogram bin boundaries in each dimension(see",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "scale",
    "local": ""
  },
  {
    "origin": "optional scale factor for the output back projection.",
    "local": ""
  },
  {
    "origin": "(src, dst, alpha = 1, beta = 0, norm_type =",
    "local": ""
  },
  {
    "origin": ", dtype = -1, mask = new",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "src",
    "local": ""
  },
  {
    "origin": "input array.",
    "local": ""
  },
  {
    "origin": "dst",
    "local": ""
  },
  {
    "origin": "output array of the same size as src .",
    "local": ""
  },
  {
    "origin": "alpha",
    "local": ""
  },
  {
    "origin": "norm value to normalize to or the lower range boundary in case of the range normalization.",
    "local": ""
  },
  {
    "origin": "beta",
    "local": ""
  },
  {
    "origin": "upper range boundary in case of the range normalization; it is not used for the norm normalization.",
    "local": ""
  },
  {
    "origin": "norm_type",
    "local": ""
  },
  {
    "origin": "normalization type (see",
    "local": ""
  },
  {
    "origin": ").",
    "local": ""
  },
  {
    "origin": "dtype",
    "local": ""
  },
  {
    "origin": "when negative, the output array has the same type as src; otherwise, it has the same number of channels as src and the depth =",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "mask",
    "local": ""
  },
  {
    "origin": "optional operation mask.",
    "local": ""
  },
  {
    "origin": "Try it",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:37 for OpenCV by &#160;",
    "local": ""
  }
]