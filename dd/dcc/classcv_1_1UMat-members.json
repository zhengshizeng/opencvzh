[
  {
    "origin": "OpenCV: Member List",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "cv::UMat Member List",
    "local": ""
  },
  {
    "origin": "This is the complete list of members for",
    "local": ""
  },
  {
    "origin": ", including all inherited members.",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(int dtop, int dbottom, int dleft, int dright)",
    "local": ""
  },
  {
    "origin": "(UMat &amp;m, int type=-1) const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(int elemChannels, int depth=-1, bool requireContinuous=true) const",
    "local": ""
  },
  {
    "origin": "() const CV_NODISCARD",
    "local": ""
  },
  {
    "origin": "(int x) const",
    "local": ""
  },
  {
    "origin": "(int startcol, int endcol) const",
    "local": ""
  },
  {
    "origin": "(const Range &amp;r) const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "(OutputArray m, int rtype, double alpha=1, double beta=0) const",
    "local": ""
  },
  {
    "origin": "(const UMat &amp;m)",
    "local": ""
  },
  {
    "origin": "(OutputArray m) const",
    "local": ""
  },
  {
    "origin": "(OutputArray m, InputArray mask) const",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "(Size size, int type, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sizes, int type, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; int &gt; &amp;sizes, int type, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "(int d=0) const",
    "local": ""
  },
  {
    "origin": "(const UMat &amp;d)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(InputArray m) const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Size size, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(AccessFlag flags) const",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(AccessFlag accessFlags) const",
    "local": ""
  },
  {
    "origin": "(int method=DECOMP_LU) const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "(Size &amp;wholeSize, Point &amp;ofs) const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "(InputArray m, double scale=1) const",
    "local": ""
  },
  {
    "origin": "(size_t *ofs) const",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Size size, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sz, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Range rowRange, Range colRange) const",
    "local": ""
  },
  {
    "origin": "(const Rect &amp;roi) const",
    "local": ""
  },
  {
    "origin": "(const Range *ranges) const",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; Range &gt; &amp;ranges) const",
    "local": ""
  },
  {
    "origin": "(const UMat &amp;m)",
    "local": ""
  },
  {
    "origin": "(const Scalar &amp;s)",
    "local": ""
  },
  {
    "origin": "(UMat &amp;&amp;m)",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(int cn, int rows=0) const",
    "local": ""
  },
  {
    "origin": "(int cn, int newndims, const int *newsz) const",
    "local": ""
  },
  {
    "origin": "(int y) const",
    "local": ""
  },
  {
    "origin": "(int startrow, int endrow) const",
    "local": ""
  },
  {
    "origin": "(const Range &amp;r) const",
    "local": ""
  },
  {
    "origin": "(InputArray value, InputArray mask=noArray())",
    "local": ""
  },
  {
    "origin": "(int i=0) const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "() const",
    "local": ""
  },
  {
    "origin": "enum value",
    "local": ""
  },
  {
    "origin": "(UMatUsageFlags usageFlags=USAGE_DEFAULT) CV_NOEXCEPT",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "(Size size, int type, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type, const Scalar &amp;s, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "(Size size, int type, const Scalar &amp;s, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sizes, int type, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sizes, int type, const Scalar &amp;s, UMatUsageFlags usageFlags=USAGE_DEFAULT)",
    "local": ""
  },
  {
    "origin": "(const UMat &amp;m)",
    "local": ""
  },
  {
    "origin": "(const UMat &amp;m, const Range &amp;rowRange, const Range &amp;colRange=Range::all())",
    "local": ""
  },
  {
    "origin": "(const UMat &amp;m, const Rect &amp;roi)",
    "local": ""
  },
  {
    "origin": "(const UMat &amp;m, const Range *ranges)",
    "local": ""
  },
  {
    "origin": "(const UMat &amp;m, const std::vector&lt; Range &gt; &amp;ranges)",
    "local": ""
  },
  {
    "origin": "(const std::vector&lt; _Tp &gt; &amp;vec, bool copyData=false)",
    "local": ""
  },
  {
    "origin": "explicit",
    "local": ""
  },
  {
    "origin": "(UMat &amp;&amp;m)",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(int rows, int cols, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(Size size, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "(int ndims, const int *sz, int type)",
    "local": ""
  },
  {
    "origin": "static",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:43 for OpenCV by &#160;",
    "local": ""
  }
]