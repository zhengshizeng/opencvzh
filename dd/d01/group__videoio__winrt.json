[
  {
    "origin": "OpenCV: WinRT glue for video I/O",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "WinRT glue for video I/O",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&#160;&#160;",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "()",
    "local": ""
  },
  {
    "origin": "(bool visible)",
    "local": ""
  },
  {
    "origin": "(::Windows::UI::Xaml::Controls::Image^ image)",
    "local": ""
  },
  {
    "origin": "template&lt;typename ... Args&gt;",
    "local": ""
  },
  {
    "origin": "(std::function&lt; void(Args...)&gt; &amp;&amp;callback, Args... args)",
    "local": ""
  },
  {
    "origin": "template&lt;typename ... Args&gt;",
    "local": ""
  },
  {
    "origin": "(void callback(Args...), Args... args)",
    "local": ""
  },
  {
    "origin": "(void callback(void))",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "Enumeration Type Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "anonymous enum",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "winrt_imshow()",
    "local": ""
  },
  {
    "origin": "void cv::winrt_imshow",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Must be called to update attached image source. Code sample is available for",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "winrt_onVisibilityChanged()",
    "local": ""
  },
  {
    "origin": "void cv::winrt_onVisibilityChanged",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "visible",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Must be called from WinRT specific callback to handle image grabber state. Here is how the class can be used:",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "winrt_setFrameContainer()",
    "local": ""
  },
  {
    "origin": "void cv::winrt_setFrameContainer",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "image",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Must be called to assign WinRT control holding image you're working with. Code sample is available for",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "winrt_startMessageLoop()",
    "local": ""
  },
  {
    "origin": "[1/3]",
    "local": ""
  },
  {
    "origin": "template&lt;typename ... Args&gt;",
    "local": ""
  },
  {
    "origin": "void cv::winrt_startMessageLoop",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "callback",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "args",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "winrt_startMessageLoop()",
    "local": ""
  },
  {
    "origin": "[2/3]",
    "local": ""
  },
  {
    "origin": "template&lt;typename ... Args&gt;",
    "local": ""
  },
  {
    "origin": "void cv::winrt_startMessageLoop",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "callback",
    "local": ""
  },
  {
    "origin": "Args...,",
    "local": ""
  },
  {
    "origin": "args",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "&#9670;&nbsp;",
    "local": ""
  },
  {
    "origin": "winrt_startMessageLoop()",
    "local": ""
  },
  {
    "origin": "[3/3]",
    "local": ""
  },
  {
    "origin": "template void cv::winrt_startMessageLoop",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "callback",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Note",
    "local": ""
  },
  {
    "origin": "Starts (1) frame-grabbing loop and (2) message loop",
    "local": ""
  },
  {
    "origin": "Function passed as an argument must implement common OCV reading frames pattern (see",
    "local": ""
  },
  {
    "origin": "documentation) AND call cv::winrt_imgshow().",
    "local": ""
  },
  {
    "origin": "Message processing loop required to overcome WinRT container and type conversion restrictions. OCV provides default implementation Here is how the class can be used:",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:40 for OpenCV by &#160;",
    "local": ""
  }
]