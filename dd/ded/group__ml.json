[
  {
    "origin": "OpenCV: Machine Learning",
    "local": ""
  },
  {
    "origin": "OpenCV",
    "local": ""
  },
  {
    "origin": "Open Source Computer Vision",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "Typedefs",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "Machine Learning",
    "local": ""
  },
  {
    "origin": "Classes",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Artificial Neural Networks - Multi-Layer Perceptrons.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Boosted tree classifier derived from",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "The class represents a single decision tree or a collection of decision trees.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "The class implements the Expectation Maximization algorithm.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "The class implements K-Nearest Neighbors model.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Implements Logistic Regression classifier.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Bayes classifier for normally distributed data.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "The structure represents the logarithmic grid range of statmodel parameters.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "The class implements the random forest predictor.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "struct",
    "local": ""
  },
  {
    "origin": "This class declares example interface for system state used in simulated annealing optimization algorithm.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Base class for statistical models in OpenCV ML.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Support Vector Machines.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Stochastic Gradient Descent",
    "local": ""
  },
  {
    "origin": "classifier.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "class",
    "local": ""
  },
  {
    "origin": "Class encapsulating training data.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Typedefs",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "Enumerations",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Error types",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Sample types.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "{",
    "local": ""
  },
  {
    "origin": "}",
    "local": ""
  },
  {
    "origin": "Variable types.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Functions",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(int nsamples, int nfeatures, int nclasses,",
    "local": ""
  },
  {
    "origin": "samples,",
    "local": ""
  },
  {
    "origin": "responses)",
    "local": ""
  },
  {
    "origin": "Creates test set.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "void",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "cov, int nsamples,",
    "local": ""
  },
  {
    "origin": "samples)",
    "local": ""
  },
  {
    "origin": "Generates",
    "local": ""
  },
  {
    "origin": "sample",
    "local": ""
  },
  {
    "origin": "from multivariate normal distribution.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "template&lt;class SimulatedAnnealingSolverSystem &gt;",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;solverSystem, double initialTemperature, double finalTemperature, double coolingRatio, size_t iterationsPerStep, double *lastTemperature=NULL,",
    "local": ""
  },
  {
    "origin": "&amp;rngEnergy=",
    "local": ""
  },
  {
    "origin": "())",
    "local": ""
  },
  {
    "origin": "The class implements simulated annealing for optimization.",
    "local": ""
  },
  {
    "origin": "More...",
    "local": ""
  },
  {
    "origin": "Detailed Description",
    "local": ""
  },
  {
    "origin": "The Machine Learning Library (MLL) is a set of classes and functions for statistical classification, regression, and clustering of data.",
    "local": ""
  },
  {
    "origin": "Most of the classification and regression algorithms are implemented as C++ classes. As the algorithms have different sets of features (like an ability to handle missing measurements or categorical input variables), there is a little common ground between the classes. This common ground is defined by the class",
    "local": ""
  },
  {
    "origin": "that all the other ML classes are derived from.",
    "local": ""
  },
  {
    "origin": "See detailed overview here:",
    "local": ""
  },
  {
    "origin": ".",
    "local": ""
  },
  {
    "origin": "Typedef Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "ANN_MLP_ANNEAL",
    "local": ""
  },
  {
    "origin": "typedef",
    "local": ""
  },
  {
    "origin": "Enumeration Type Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "ErrorTypes",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "Error types",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "TEST_ERROR",
    "local": ""
  },
  {
    "origin": "Python: cv.ml.TEST_ERROR",
    "local": ""
  },
  {
    "origin": "TRAIN_ERROR",
    "local": ""
  },
  {
    "origin": "Python: cv.ml.TRAIN_ERROR",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "SampleTypes",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "Sample types.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "ROW_SAMPLE",
    "local": ""
  },
  {
    "origin": "Python: cv.ml.ROW_SAMPLE",
    "local": ""
  },
  {
    "origin": "each training sample is a row of samples",
    "local": ""
  },
  {
    "origin": "COL_SAMPLE",
    "local": ""
  },
  {
    "origin": "Python: cv.ml.COL_SAMPLE",
    "local": ""
  },
  {
    "origin": "each training sample occupies a column of samples",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "VariableTypes",
    "local": ""
  },
  {
    "origin": "enum",
    "local": ""
  },
  {
    "origin": "Variable types.",
    "local": ""
  },
  {
    "origin": "Enumerator",
    "local": ""
  },
  {
    "origin": "VAR_NUMERICAL",
    "local": ""
  },
  {
    "origin": "Python: cv.ml.VAR_NUMERICAL",
    "local": ""
  },
  {
    "origin": "same as VAR_ORDERED",
    "local": ""
  },
  {
    "origin": "VAR_ORDERED",
    "local": ""
  },
  {
    "origin": "Python: cv.ml.VAR_ORDERED",
    "local": ""
  },
  {
    "origin": "ordered variables",
    "local": ""
  },
  {
    "origin": "VAR_CATEGORICAL",
    "local": ""
  },
  {
    "origin": "Python: cv.ml.VAR_CATEGORICAL",
    "local": ""
  },
  {
    "origin": "categorical variables",
    "local": ""
  },
  {
    "origin": "Function Documentation",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "createConcentricSpheresTestSet()",
    "local": ""
  },
  {
    "origin": "void cv::ml::createConcentricSpheresTestSet",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "nsamples",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "nfeatures",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "nclasses",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "samples",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "responses",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Creates test set.",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "randMVNormal()",
    "local": ""
  },
  {
    "origin": "void cv::ml::randMVNormal",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "mean",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "cov",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "int",
    "local": ""
  },
  {
    "origin": "nsamples",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "samples",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "Generates",
    "local": ""
  },
  {
    "origin": "sample",
    "local": ""
  },
  {
    "origin": "from multivariate normal distribution.",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "mean",
    "local": ""
  },
  {
    "origin": "an average row vector",
    "local": ""
  },
  {
    "origin": "cov",
    "local": ""
  },
  {
    "origin": "symmetric covariation matrix",
    "local": ""
  },
  {
    "origin": "nsamples",
    "local": ""
  },
  {
    "origin": "returned samples count",
    "local": ""
  },
  {
    "origin": "samples",
    "local": ""
  },
  {
    "origin": "returned samples array",
    "local": ""
  },
  {
    "origin": "◆",
    "local": ""
  },
  {
    "origin": "simulatedAnnealingSolver()",
    "local": ""
  },
  {
    "origin": "template&lt;class SimulatedAnnealingSolverSystem &gt;",
    "local": ""
  },
  {
    "origin": "int cv::ml::simulatedAnnealingSolver",
    "local": ""
  },
  {
    "origin": "(",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "solverSystem",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "initialTemperature",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "finalTemperature",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "double",
    "local": ""
  },
  {
    "origin": "coolingRatio",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "size_t",
    "local": ""
  },
  {
    "origin": "iterationsPerStep",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "double *",
    "local": ""
  },
  {
    "origin": "lastTemperature",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ",",
    "local": ""
  },
  {
    "origin": "&amp;",
    "local": ""
  },
  {
    "origin": "rngEnergy",
    "local": ""
  },
  {
    "origin": "=",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "The class implements simulated annealing for optimization.",
    "local": ""
  },
  {
    "origin": "for details",
    "local": ""
  },
  {
    "origin": "Parameters",
    "local": ""
  },
  {
    "origin": "solverSystem",
    "local": ""
  },
  {
    "origin": "optimization system (see",
    "local": ""
  },
  {
    "origin": ")",
    "local": ""
  },
  {
    "origin": "initialTemperature",
    "local": ""
  },
  {
    "origin": "initial temperature",
    "local": ""
  },
  {
    "origin": "finalTemperature",
    "local": ""
  },
  {
    "origin": "final temperature",
    "local": ""
  },
  {
    "origin": "coolingRatio",
    "local": ""
  },
  {
    "origin": "temperature step multiplies",
    "local": ""
  },
  {
    "origin": "iterationsPerStep",
    "local": ""
  },
  {
    "origin": "number of iterations per temperature changing step",
    "local": ""
  },
  {
    "origin": "lastTemperature",
    "local": ""
  },
  {
    "origin": "optional output for last used temperature",
    "local": ""
  },
  {
    "origin": "rngEnergy",
    "local": ""
  },
  {
    "origin": "specify custom random numbers generator (",
    "local": ""
  },
  {
    "origin": "by default)",
    "local": ""
  },
  {
    "origin": "Generated on Fri Apr 2 2021 11:36:41 for OpenCV by",
    "local": ""
  }
]